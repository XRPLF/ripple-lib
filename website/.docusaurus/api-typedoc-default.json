{
	"id": 0,
	"name": "xrpl.js",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 43,
			"name": "ripple-address-codec/src",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3454,
					"name": "codec",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/xrp-codec.ts",
							"line": 172,
							"character": 13,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L172"
						}
					],
					"type": {
						"type": "reference",
						"name": "Codec"
					},
					"defaultValue": "codecWithXrpAlphabet"
				},
				{
					"id": 44,
					"name": "classicAddressToXAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/index.ts",
							"line": 25,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L25"
						}
					],
					"signatures": [
						{
							"id": 45,
							"name": "classicAddressToXAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 46,
									"name": "classicAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 47,
									"name": "tag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 48,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3474,
					"name": "decodeAccountID",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/xrp-codec.ts",
							"line": 224,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L224"
						}
					],
					"signatures": [
						{
							"id": 3475,
							"name": "decodeAccountID",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3476,
									"name": "accountId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						}
					]
				},
				{
					"id": 3486,
					"name": "decodeAccountPublic",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/xrp-codec.ts",
							"line": 250,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L250"
						}
					],
					"signatures": [
						{
							"id": 3487,
							"name": "decodeAccountPublic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3488,
									"name": "base58string",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						}
					]
				},
				{
					"id": 3480,
					"name": "decodeNodePublic",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/xrp-codec.ts",
							"line": 235,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L235"
						}
					],
					"signatures": [
						{
							"id": 3481,
							"name": "decodeNodePublic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3482,
									"name": "base58string",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						}
					]
				},
				{
					"id": 3459,
					"name": "decodeSeed",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/xrp-codec.ts",
							"line": 194,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L194"
						}
					],
					"signatures": [
						{
							"id": 3460,
							"name": "decodeSeed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3461,
									"name": "seed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3462,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3463,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3466,
													"name": "expectedLength",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "ripple-address-codec/src/xrp-codec.ts",
															"line": 199,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L199"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 3464,
													"name": "versionTypes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "ripple-address-codec/src/xrp-codec.ts",
															"line": 197,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L197"
														}
													],
													"type": {
														"type": "tuple",
														"elements": [
															{
																"type": "literal",
																"value": "ed25519"
															},
															{
																"type": "literal",
																"value": "secp256k1"
															}
														]
													}
												},
												{
													"id": 3465,
													"name": "versions",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "ripple-address-codec/src/xrp-codec.ts",
															"line": 198,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L198"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														3466,
														3464,
														3465
													]
												}
											],
											"sources": [
												{
													"fileName": "ripple-address-codec/src/xrp-codec.ts",
													"line": 196,
													"character": 8,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L196"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3467,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3469,
											"name": "bytes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/src/xrp-codec.ts",
													"line": 207,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L207"
												}
											],
											"type": {
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										},
										{
											"id": 3470,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/src/xrp-codec.ts",
													"line": 208,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L208"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ed25519"
													},
													{
														"type": "literal",
														"value": "secp256k1"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 3468,
											"name": "version",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/src/xrp-codec.ts",
													"line": 206,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L206"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3469,
												3470,
												3468
											]
										}
									],
									"sources": [
										{
											"fileName": "ripple-address-codec/src/xrp-codec.ts",
											"line": 205,
											"character": 3,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L205"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 61,
					"name": "decodeXAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/index.ts",
							"line": 94,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L94"
						}
					],
					"signatures": [
						{
							"id": 62,
							"name": "decodeXAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 63,
									"name": "xAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 64,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 65,
											"name": "accountId",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/src/index.ts",
													"line": 95,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L95"
												}
											],
											"type": {
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										},
										{
											"id": 66,
											"name": "tag",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/src/index.ts",
													"line": 96,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L96"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "literal",
														"value": false
													}
												]
											}
										},
										{
											"id": 67,
											"name": "test",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/src/index.ts",
													"line": 97,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L97"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												65,
												66,
												67
											]
										}
									],
									"sources": [
										{
											"fileName": "ripple-address-codec/src/index.ts",
											"line": 94,
											"character": 43,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L94"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 3471,
					"name": "encodeAccountID",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/xrp-codec.ts",
							"line": 213,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L213"
						}
					],
					"signatures": [
						{
							"id": 3472,
							"name": "encodeAccountID",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3473,
									"name": "bytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3483,
					"name": "encodeAccountPublic",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/xrp-codec.ts",
							"line": 245,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L245"
						}
					],
					"signatures": [
						{
							"id": 3484,
							"name": "encodeAccountPublic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3485,
									"name": "bytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3477,
					"name": "encodeNodePublic",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/xrp-codec.ts",
							"line": 240,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L240"
						}
					],
					"signatures": [
						{
							"id": 3478,
							"name": "encodeNodePublic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3479,
									"name": "bytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3455,
					"name": "encodeSeed",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/xrp-codec.ts",
							"line": 176,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L176"
						}
					],
					"signatures": [
						{
							"id": 3456,
							"name": "encodeSeed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3457,
									"name": "entropy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								},
								{
									"id": 3458,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ed25519"
											},
											{
												"type": "literal",
												"value": "secp256k1"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 49,
					"name": "encodeXAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/index.ts",
							"line": 34,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L34"
						}
					],
					"signatures": [
						{
							"id": 50,
							"name": "encodeXAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 51,
									"name": "accountId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								},
								{
									"id": 52,
									"name": "tag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 53,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3489,
					"name": "isValidClassicAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/xrp-codec.ts",
							"line": 255,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/xrp-codec.ts#L255"
						}
					],
					"signatures": [
						{
							"id": 3490,
							"name": "isValidClassicAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3491,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 68,
					"name": "isValidXAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/index.ts",
							"line": 144,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L144"
						}
					],
					"signatures": [
						{
							"id": 69,
							"name": "isValidXAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 70,
									"name": "xAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 54,
					"name": "xAddressToClassicAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/src/index.ts",
							"line": 76,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L76"
						}
					],
					"signatures": [
						{
							"id": 55,
							"name": "xAddressToClassicAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 56,
									"name": "xAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 58,
											"name": "classicAddress",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/src/index.ts",
													"line": 77,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L77"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59,
											"name": "tag",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/src/index.ts",
													"line": 78,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L78"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "literal",
														"value": false
													}
												]
											}
										},
										{
											"id": 60,
											"name": "test",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/src/index.ts",
													"line": 79,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L79"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												58,
												59,
												60
											]
										}
									],
									"sources": [
										{
											"fileName": "ripple-address-codec/src/index.ts",
											"line": 76,
											"character": 53,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L76"
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						3454
					]
				},
				{
					"title": "Functions",
					"children": [
						44,
						3474,
						3486,
						3480,
						3459,
						61,
						3471,
						3483,
						3477,
						3455,
						49,
						3489,
						68,
						54
					]
				}
			],
			"sources": [
				{
					"fileName": "ripple-address-codec/src/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-address-codec/src/index.ts#L1"
				}
			]
		},
		{
			"id": 71,
			"name": "ripple-binary-codec/src",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3497,
					"name": "XrplDefinitions",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stores the various types and fields for rippled to be used to encode/decode information later on.\nShould be used instead of XrplDefinitionsBase since this defines default "
							},
							{
								"kind": "code",
								"text": "`types`"
							},
							{
								"kind": "text",
								"text": " for serializing/deserializing\nledger data."
							}
						]
					},
					"children": [
						{
							"id": 3498,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions.ts#L25"
								}
							],
							"signatures": [
								{
									"id": 3499,
									"name": "new XrplDefinitions",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Present rippled types in a typed and updatable format.\nFor an example of the input format see "
											},
											{
												"kind": "code",
												"text": "`definitions.json`"
											},
											{
												"kind": "text",
												"text": "\nTo generate a new definitions file from rippled source code, use this tool: https://github.com/RichardAH/xrpl-codec-gen\n\nSee the definitions.test.js file for examples of how to create your own updated definitions.json."
											}
										]
									},
									"parameters": [
										{
											"id": 3500,
											"name": "enums",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A json encoding of the core types, transaction types, transaction results, transaction names, and fields."
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "DefinitionsData"
											}
										},
										{
											"id": 3501,
											"name": "additionalTypes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A list of SerializedType objects with the same name as the fields defined.\n             These types will be included in addition to the coreTypes used on mainnet."
													}
												]
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "query",
														"queryType": {
															"type": "reference",
															"name": "SerializedType"
														}
													}
												],
												"name": "Record",
												"qualifiedName": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3497,
										"name": "XrplDefinitions"
									},
									"overwrites": {
										"type": "reference",
										"id": 3516,
										"name": "XrplDefinitionsBase.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3515,
								"name": "XrplDefinitionsBase.constructor"
							}
						},
						{
							"id": 3508,
							"name": "dataTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L37"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "query",
										"queryType": {
											"type": "reference",
											"name": "SerializedType"
										}
									}
								],
								"name": "Record",
								"qualifiedName": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3525,
								"name": "XrplDefinitionsBase.dataTypes"
							}
						},
						{
							"id": 3502,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L25"
								}
							],
							"type": {
								"type": "reference",
								"name": "FieldLookup"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3519,
								"name": "XrplDefinitionsBase.field"
							}
						},
						{
							"id": 3503,
							"name": "ledgerEntryType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L27"
								}
							],
							"type": {
								"type": "reference",
								"name": "BytesLookup"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3520,
								"name": "XrplDefinitionsBase.ledgerEntryType"
							}
						},
						{
							"id": 3507,
							"name": "transactionNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L35"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3524,
								"name": "XrplDefinitionsBase.transactionNames"
							}
						},
						{
							"id": 3505,
							"name": "transactionResult",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L31"
								}
							],
							"type": {
								"type": "reference",
								"name": "BytesLookup"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3522,
								"name": "XrplDefinitionsBase.transactionResult"
							}
						},
						{
							"id": 3506,
							"name": "transactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L33"
								}
							],
							"type": {
								"type": "reference",
								"name": "BytesLookup"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3523,
								"name": "XrplDefinitionsBase.transactionType"
							}
						},
						{
							"id": 3504,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"name": "BytesLookup"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3521,
								"name": "XrplDefinitionsBase.type"
							}
						},
						{
							"id": 3509,
							"name": "associateTypes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 85,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L85"
								}
							],
							"signatures": [
								{
									"id": 3510,
									"name": "associateTypes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Associates each Field to a corresponding class that TypeScript can recognize."
											}
										]
									},
									"parameters": [
										{
											"id": 3511,
											"name": "types",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a list of type objects with the same name as the fields defined.\n             Defaults to xrpl.js's core type definitions."
													}
												]
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "query",
														"queryType": {
															"type": "reference",
															"name": "SerializedType"
														}
													}
												],
												"name": "Record",
												"qualifiedName": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3527,
										"name": "XrplDefinitionsBase.associateTypes"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3526,
								"name": "XrplDefinitionsBase.associateTypes"
							}
						},
						{
							"id": 3512,
							"name": "getAssociatedTypes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 98,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L98"
								}
							],
							"signatures": [
								{
									"id": 3513,
									"name": "getAssociatedTypes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "query",
												"queryType": {
													"type": "reference",
													"name": "SerializedType"
												}
											}
										],
										"name": "Record",
										"qualifiedName": "Record",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3530,
										"name": "XrplDefinitionsBase.getAssociatedTypes"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3529,
								"name": "XrplDefinitionsBase.getAssociatedTypes"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3498
							]
						},
						{
							"title": "Properties",
							"children": [
								3508,
								3502,
								3503,
								3507,
								3505,
								3506,
								3504
							]
						},
						{
							"title": "Methods",
							"children": [
								3509,
								3512
							]
						}
					],
					"sources": [
						{
							"fileName": "ripple-binary-codec/src/enums/xrpl-definitions.ts",
							"line": 13,
							"character": 13,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions.ts#L13"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3514,
							"name": "XrplDefinitionsBase"
						}
					]
				},
				{
					"id": 3514,
					"name": "XrplDefinitionsBase",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stores the various types and fields for rippled to be used to encode/decode information later on.\nXrplDefinitions should be instantiated instead of this class."
							}
						]
					},
					"children": [
						{
							"id": 3515,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L50"
								}
							],
							"signatures": [
								{
									"id": 3516,
									"name": "new XrplDefinitionsBase",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Present rippled types in a typed and updatable format.\nFor an example of the input format see "
											},
											{
												"kind": "code",
												"text": "`definitions.json`"
											},
											{
												"kind": "text",
												"text": "\nTo generate a new definitions file from rippled source code, use this tool: https://github.com/RichardAH/xrpl-codec-gen\n\nSee the definitions.test.js file for examples of how to create your own updated definitions.json."
											}
										]
									},
									"parameters": [
										{
											"id": 3517,
											"name": "enums",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A json encoding of the core types, transaction types, transaction results, transaction names, and fields."
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "DefinitionsData"
											}
										},
										{
											"id": 3518,
											"name": "types",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A list of type objects with the same name as the fields defined.\n             You can use the coreTypes object if you are not adding new types."
													}
												]
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "query",
														"queryType": {
															"type": "reference",
															"name": "SerializedType"
														}
													}
												],
												"name": "Record",
												"qualifiedName": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3514,
										"name": "XrplDefinitionsBase"
									}
								}
							]
						},
						{
							"id": 3525,
							"name": "dataTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L37"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "query",
										"queryType": {
											"type": "reference",
											"name": "SerializedType"
										}
									}
								],
								"name": "Record",
								"qualifiedName": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 3519,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L25"
								}
							],
							"type": {
								"type": "reference",
								"name": "FieldLookup"
							}
						},
						{
							"id": 3520,
							"name": "ledgerEntryType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L27"
								}
							],
							"type": {
								"type": "reference",
								"name": "BytesLookup"
							}
						},
						{
							"id": 3524,
							"name": "transactionNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L35"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3522,
							"name": "transactionResult",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L31"
								}
							],
							"type": {
								"type": "reference",
								"name": "BytesLookup"
							}
						},
						{
							"id": 3523,
							"name": "transactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L33"
								}
							],
							"type": {
								"type": "reference",
								"name": "BytesLookup"
							}
						},
						{
							"id": 3521,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"name": "BytesLookup"
							}
						},
						{
							"id": 3526,
							"name": "associateTypes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 85,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L85"
								}
							],
							"signatures": [
								{
									"id": 3527,
									"name": "associateTypes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Associates each Field to a corresponding class that TypeScript can recognize."
											}
										]
									},
									"parameters": [
										{
											"id": 3528,
											"name": "types",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "a list of type objects with the same name as the fields defined.\n             Defaults to xrpl.js's core type definitions."
													}
												]
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "query",
														"queryType": {
															"type": "reference",
															"name": "SerializedType"
														}
													}
												],
												"name": "Record",
												"qualifiedName": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3529,
							"name": "getAssociatedTypes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
									"line": 98,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L98"
								}
							],
							"signatures": [
								{
									"id": 3530,
									"name": "getAssociatedTypes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "query",
												"queryType": {
													"type": "reference",
													"name": "SerializedType"
												}
											}
										],
										"name": "Record",
										"qualifiedName": "Record",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3515
							]
						},
						{
							"title": "Properties",
							"children": [
								3525,
								3519,
								3520,
								3524,
								3522,
								3523,
								3521
							]
						},
						{
							"title": "Methods",
							"children": [
								3526,
								3529
							]
						}
					],
					"sources": [
						{
							"fileName": "ripple-binary-codec/src/enums/xrpl-definitions-base.ts",
							"line": 23,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/xrpl-definitions-base.ts#L23"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3497,
							"name": "XrplDefinitions"
						}
					]
				},
				{
					"id": 3531,
					"name": "DEFAULT_DEFINITIONS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "By default, coreTypes from the "
							},
							{
								"kind": "code",
								"text": "`types`"
							},
							{
								"kind": "text",
								"text": " folder is where known type definitions are initialized to avoid import cycles."
							}
						]
					},
					"sources": [
						{
							"fileName": "ripple-binary-codec/src/enums/index.ts",
							"line": 10,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/index.ts#L10"
						}
					],
					"type": {
						"type": "reference",
						"id": 3514,
						"name": "XrplDefinitionsBase"
					},
					"defaultValue": "..."
				},
				{
					"id": 3496,
					"name": "TRANSACTION_TYPES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "ripple-binary-codec/src/enums/index.ts",
							"line": 21,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/enums/index.ts#L21"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "DEFAULT_DEFINITIONS.transactionNames"
				},
				{
					"id": 3532,
					"name": "coreTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "ripple-binary-codec/src/types/index.ts",
							"line": 19,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/types/index.ts#L19"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "query",
								"queryType": {
									"type": "reference",
									"name": "SerializedType"
								}
							}
						],
						"name": "Record",
						"qualifiedName": "Record",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 72,
					"name": "decode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-binary-codec/src/index.ts",
							"line": 29,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/index.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 73,
							"name": "decode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Decode a transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the JSON representation of the transaction"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 74,
									"name": "binary",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "hex-string of the encoded transaction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 75,
									"name": "definitions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom rippled types to use instead of the default. Used for sidechains and amendments."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 3514,
										"name": "XrplDefinitionsBase"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "JsonObject"
							}
						}
					]
				},
				{
					"id": 3492,
					"name": "decodeLedgerData",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-binary-codec/src/ledger-hashes.ts",
							"line": 168,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/ledger-hashes.ts#L168"
						}
					],
					"signatures": [
						{
							"id": 3493,
							"name": "decodeLedgerData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Decodes a serialized ledger header"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A JSON object describing a ledger header"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3494,
									"name": "binary",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A serialized ledger header"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3495,
									"name": "definitions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type definitions to parse the ledger objects.\n     Used if there are non-default ledger objects to decode."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 3514,
										"name": "XrplDefinitionsBase"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					]
				},
				{
					"id": 95,
					"name": "decodeQuality",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-binary-codec/src/index.ts",
							"line": 122,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/index.ts#L122"
						}
					],
					"signatures": [
						{
							"id": 96,
							"name": "decodeQuality",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Decode a quality value"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a string representing the quality"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 97,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "hex-string of a quality"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 76,
					"name": "encode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-binary-codec/src/index.ts",
							"line": 42,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/index.ts#L42"
						}
					],
					"signatures": [
						{
							"id": 77,
							"name": "encode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Encode a transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A hex-string of the encoded transaction"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 78,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The JSON representation of a transaction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 79,
									"name": "definitions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom rippled types to use instead of the default. Used for sidechains and amendments."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 3514,
										"name": "XrplDefinitionsBase"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 87,
					"name": "encodeForMultisigning",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-binary-codec/src/index.ts",
							"line": 92,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/index.ts#L92"
						}
					],
					"signatures": [
						{
							"id": 88,
							"name": "encodeForMultisigning",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Encode a transaction and prepare for multi-signing"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a hex string of the encoded transaction"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 89,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "JSON object representing the transaction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 90,
									"name": "signer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "string representing the account to sign the transaction with"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 91,
									"name": "definitions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom rippled types to use instead of the default. Used for sidechains and amendments."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 3514,
										"name": "XrplDefinitionsBase"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 80,
					"name": "encodeForSigning",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-binary-codec/src/index.ts",
							"line": 57,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/index.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 81,
							"name": "encodeForSigning",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Encode a transaction and prepare for signing"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a hex string of the encoded transaction"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 82,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "JSON object representing the transaction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 83,
									"name": "definitions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom rippled types to use instead of the default. Used for sidechains and amendments."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 3514,
										"name": "XrplDefinitionsBase"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 84,
					"name": "encodeForSigningClaim",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-binary-codec/src/index.ts",
							"line": 77,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/index.ts#L77"
						}
					],
					"signatures": [
						{
							"id": 85,
							"name": "encodeForSigningClaim",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Encode a transaction and prepare for signing with a claim"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a hex string of the encoded transaction"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 86,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "JSON object representing the transaction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 92,
					"name": "encodeQuality",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-binary-codec/src/index.ts",
							"line": 111,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/index.ts#L111"
						}
					],
					"signatures": [
						{
							"id": 93,
							"name": "encodeQuality",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Encode a quality value"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a hex-string representing the quality"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 94,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "string representation of a number"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						3497,
						3514
					]
				},
				{
					"title": "Variables",
					"children": [
						3531,
						3496,
						3532
					]
				},
				{
					"title": "Functions",
					"children": [
						72,
						3492,
						95,
						76,
						87,
						80,
						84,
						92
					]
				}
			],
			"sources": [
				{
					"fileName": "ripple-binary-codec/src/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-binary-codec/src/index.ts#L1"
				}
			]
		},
		{
			"id": 2,
			"name": "ripple-keypairs/src",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 31,
					"name": "decodeSeed",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-keypairs/src/index.ts",
							"line": 158,
							"character": 8,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L158"
						}
					],
					"signatures": [
						{
							"id": 32,
							"name": "decodeSeed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 33,
									"name": "seed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 35,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 38,
													"name": "expectedLength",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
															"line": 51,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 36,
													"name": "versionTypes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
															"line": 49,
															"character": 4
														}
													],
													"type": {
														"type": "tuple",
														"elements": [
															{
																"type": "literal",
																"value": "ed25519"
															},
															{
																"type": "literal",
																"value": "secp256k1"
															}
														]
													}
												},
												{
													"id": 37,
													"name": "versions",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
															"line": 50,
															"character": 4
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														38,
														36,
														37
													]
												}
											],
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
													"line": 48,
													"character": 56
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 39,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 41,
											"name": "bytes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
													"line": 54,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										},
										{
											"id": 42,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
													"line": 55,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ed25519"
													},
													{
														"type": "literal",
														"value": "secp256k1"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 40,
											"name": "version",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
													"line": 53,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												41,
												42,
												40
											]
										}
									],
									"sources": [
										{
											"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
											"line": 52,
											"character": 4
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 25,
					"name": "deriveAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-keypairs/src/index.ts",
							"line": 148,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L148"
						}
					],
					"signatures": [
						{
							"id": 26,
							"name": "deriveAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 27,
									"name": "publicKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 9,
					"name": "deriveKeypair",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-keypairs/src/index.ts",
							"line": 105,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L105"
						}
					],
					"signatures": [
						{
							"id": 10,
							"name": "deriveKeypair",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 11,
									"name": "seed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 15,
											"name": "privateKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-keypairs/src/index.ts",
													"line": 110,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L110"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14,
											"name": "publicKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-keypairs/src/index.ts",
													"line": 109,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L109"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												15,
												14
											]
										}
									],
									"sources": [
										{
											"fileName": "ripple-keypairs/src/index.ts",
											"line": 108,
											"character": 3,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L108"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 28,
					"name": "deriveNodeAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-keypairs/src/index.ts",
							"line": 152,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L152"
						}
					],
					"signatures": [
						{
							"id": 29,
							"name": "deriveNodeAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 30,
									"name": "publicKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3,
					"name": "generateSeed",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-keypairs/src/index.ts",
							"line": 16,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 4,
							"name": "generateSeed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 5,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 8,
													"name": "algorithm",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "ripple-keypairs/src/index.ts",
															"line": 19,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L19"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "ed25519"
															},
															{
																"type": "literal",
																"value": "ecdsa-secp256k1"
															}
														]
													}
												},
												{
													"id": 7,
													"name": "entropy",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "ripple-keypairs/src/index.ts",
															"line": 18,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L18"
														}
													],
													"type": {
														"type": "reference",
														"name": "Uint8Array",
														"qualifiedName": "Uint8Array",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														8,
														7
													]
												}
											],
											"sources": [
												{
													"fileName": "ripple-keypairs/src/index.ts",
													"line": 17,
													"character": 11,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L17"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 16,
					"name": "sign",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-keypairs/src/index.ts",
							"line": 132,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L132"
						}
					],
					"signatures": [
						{
							"id": 17,
							"name": "sign",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 18,
									"name": "messageHex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 19,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 20,
					"name": "verify",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-keypairs/src/index.ts",
							"line": 137,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L137"
						}
					],
					"signatures": [
						{
							"id": 21,
							"name": "verify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 22,
									"name": "messageHex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 23,
									"name": "signature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 24,
									"name": "publicKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						31,
						25,
						9,
						28,
						3,
						16,
						20
					]
				}
			],
			"sources": [
				{
					"fileName": "ripple-keypairs/src/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/ripple-keypairs/src/index.ts#L1"
				}
			]
		},
		{
			"id": 1,
			"name": "xrpl/src",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 775,
					"name": "LedgerEntry",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "LedgerEntry type definitions are exported in their own namespace to prevent\ncollisions of the DepositPreauth SLE and Transaction. LedgerEntries are used\nby the client less often, and in most scenarios, like when parsing a\nresponse, the client won't need to import the type. If it is required to use\na Ledger Entry, import "
							},
							{
								"kind": "code",
								"text": "`LedgerEntry`"
							},
							{
								"kind": "text",
								"text": ", and access individual ledger entry\ntypes on the "
							},
							{
								"kind": "code",
								"text": "`LedgerEntry`"
							},
							{
								"kind": "text",
								"text": " namespace."
							}
						]
					},
					"children": [
						{
							"id": 799,
							"name": "AccountRootFlags",
							"kind": 8,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 807,
									"name": "lsfDefaultRipple",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable rippling on this address's trust lines by default. Required for issuing addresses; discouraged for others."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 179,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L179"
										}
									],
									"type": {
										"type": "literal",
										"value": 8388608
									}
								},
								{
									"id": 808,
									"name": "lsfDepositAuth",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This account can only receive funds from transactions it sends, and from preauthorized accounts.\n(It has DepositAuth enabled.)"
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 184,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L184"
										}
									],
									"type": {
										"type": "literal",
										"value": 16777216
									}
								},
								{
									"id": 804,
									"name": "lsfDisableMaster",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disallows use of the master key to sign transactions for this account."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 167,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L167"
										}
									],
									"type": {
										"type": "literal",
										"value": 1048576
									}
								},
								{
									"id": 810,
									"name": "lsfDisallowIncomingCheck",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disallow incoming Checks from other accounts."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 192,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L192"
										}
									],
									"type": {
										"type": "literal",
										"value": 134217728
									}
								},
								{
									"id": 809,
									"name": "lsfDisallowIncomingNFTokenOffer",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disallow incoming NFTOffers from other accounts."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 188,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L188"
										}
									],
									"type": {
										"type": "literal",
										"value": 67108864
									}
								},
								{
									"id": 811,
									"name": "lsfDisallowIncomingPayChan",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disallow incoming PayChannels from other accounts."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 196,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L196"
										}
									],
									"type": {
										"type": "literal",
										"value": 268435456
									}
								},
								{
									"id": 812,
									"name": "lsfDisallowIncomingTrustline",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disallow incoming Trustlines from other accounts."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 200,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L200"
										}
									],
									"type": {
										"type": "literal",
										"value": 536870912
									}
								},
								{
									"id": 803,
									"name": "lsfDisallowXRP",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Client applications should not send XRP to this account. Not enforced by rippled."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 163,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L163"
										}
									],
									"type": {
										"type": "literal",
										"value": 524288
									}
								},
								{
									"id": 806,
									"name": "lsfGlobalFreeze",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "All assets issued by this address are frozen."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 175,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L175"
										}
									],
									"type": {
										"type": "literal",
										"value": 4194304
									}
								},
								{
									"id": 805,
									"name": "lsfNoFreeze",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This address cannot freeze trust lines connected to it. Once enabled, cannot be disabled."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 171,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L171"
										}
									],
									"type": {
										"type": "literal",
										"value": 2097152
									}
								},
								{
									"id": 800,
									"name": "lsfPasswordSpent",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The account has used its free SetRegularKey transaction."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 151,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L151"
										}
									],
									"type": {
										"type": "literal",
										"value": 65536
									}
								},
								{
									"id": 802,
									"name": "lsfRequireAuth",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This account must individually approve other users for those users to hold this account's issued currencies."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 159,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L159"
										}
									],
									"type": {
										"type": "literal",
										"value": 262144
									}
								},
								{
									"id": 801,
									"name": "lsfRequireDestTag",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Requires incoming payments to specify a Destination Tag."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 155,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L155"
										}
									],
									"type": {
										"type": "literal",
										"value": 131072
									}
								}
							],
							"groups": [
								{
									"title": "Enumeration Members",
									"children": [
										807,
										808,
										804,
										810,
										809,
										811,
										812,
										803,
										806,
										805,
										800,
										802,
										801
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
									"line": 147,
									"character": 12,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L147"
								}
							]
						},
						{
							"id": 978,
							"name": "OfferFlags",
							"kind": 8,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 979,
									"name": "lsfPassive",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 50,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L50"
										}
									],
									"type": {
										"type": "literal",
										"value": 65536
									}
								},
								{
									"id": 980,
									"name": "lsfSell",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 51,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L51"
										}
									],
									"type": {
										"type": "literal",
										"value": 131072
									}
								}
							],
							"groups": [
								{
									"title": "Enumeration Members",
									"children": [
										979,
										980
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 49,
									"character": 12,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L49"
								}
							]
						},
						{
							"id": 1014,
							"name": "RippleStateFlags",
							"kind": 8,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 1018,
									"name": "lsfHighAuth",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 81,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L81"
										}
									],
									"type": {
										"type": "literal",
										"value": 524288
									}
								},
								{
									"id": 1022,
									"name": "lsfHighFreeze",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 87,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L87"
										}
									],
									"type": {
										"type": "literal",
										"value": 8388608
									}
								},
								{
									"id": 1020,
									"name": "lsfHighNoRipple",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 83,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L83"
										}
									],
									"type": {
										"type": "literal",
										"value": 2097152
									}
								},
								{
									"id": 1016,
									"name": "lsfHighReserve",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 79,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L79"
										}
									],
									"type": {
										"type": "literal",
										"value": 131072
									}
								},
								{
									"id": 1017,
									"name": "lsfLowAuth",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 80,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L80"
										}
									],
									"type": {
										"type": "literal",
										"value": 262144
									}
								},
								{
									"id": 1021,
									"name": "lsfLowFreeze",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 85,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L85"
										}
									],
									"type": {
										"type": "literal",
										"value": 4194304
									}
								},
								{
									"id": 1019,
									"name": "lsfLowNoRipple",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 82,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L82"
										}
									],
									"type": {
										"type": "literal",
										"value": 1048576
									}
								},
								{
									"id": 1015,
									"name": "lsfLowReserve",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 78,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L78"
										}
									],
									"type": {
										"type": "literal",
										"value": 65536
									}
								}
							],
							"groups": [
								{
									"title": "Enumeration Members",
									"children": [
										1018,
										1022,
										1020,
										1016,
										1017,
										1021,
										1019,
										1015
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/RippleState.ts",
									"line": 76,
									"character": 12,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L76"
								}
							]
						},
						{
							"id": 1033,
							"name": "SignerListFlags",
							"kind": 8,
							"kindString": "Enumeration",
							"flags": {},
							"children": [
								{
									"id": 1034,
									"name": "lsfOneOwnerCount",
									"kind": 16,
									"kindString": "Enumeration Member",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/SignerList.ts",
											"line": 55,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/SignerList.ts#L55"
										}
									],
									"type": {
										"type": "literal",
										"value": 65536
									}
								}
							],
							"groups": [
								{
									"title": "Enumeration Members",
									"children": [
										1034
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/SignerList.ts",
									"line": 53,
									"character": 12,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/SignerList.ts#L53"
								}
							]
						},
						{
							"id": 776,
							"name": "AccountRoot",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The AccountRoot object type describes a single account, its settings, and\nXRP balance."
									}
								]
							},
							"children": [
								{
									"id": 778,
									"name": "Account",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The identifying (classic) address of this account."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 12,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L12"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 785,
									"name": "AccountTxnID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The identifying hash of the transaction most recently sent by this\naccount. This field must be enabled to use the AccountTxnID transaction\nfield. To enable it, send an AccountSet transaction with the.\n"
											},
											{
												"kind": "code",
												"text": "`asfAccountTxnID`"
											},
											{
												"kind": "text",
												"text": " flag enabled."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 40,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L40"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 779,
									"name": "Balance",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The account's current XRP balance in drops, represented as a string."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 794,
									"name": "BurnedNFTokens",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Total NFTokens this account's issued that have been burned. This number is always equal or less than MintedNFTokens."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 78,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L78"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 786,
									"name": "Domain",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A domain associated with this account. In JSON, this is the hexadecimal\nfor the ASCII representation of the domain."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 45,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L45"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 787,
									"name": "EmailHash",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The md5 hash of an email address."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 47,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L47"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 795,
									"name": "FirstNFTSequence",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sequence that the account first minted an NFToken"
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 80,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L80"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 780,
									"name": "Flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bit-map of boolean flags enabled for this account."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 16,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L16"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 777,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L10"
										}
									],
									"type": {
										"type": "literal",
										"value": "AccountRoot"
									}
								},
								{
									"id": 788,
									"name": "MessageKey",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A public key that may be used to send encrypted messages to this account\nin JSON, uses hexadecimal."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 52,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L52"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 796,
									"name": "MintedNFTokens",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Total NFTokens have been minted by and on behalf of this account."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 82,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L82"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 797,
									"name": "NFTokenMinter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Another account that can mint NFTokens on behalf of this account."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 84,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L84"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 781,
									"name": "OwnerCount",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of objects this account owns in the ledger, which contributes\nto its owner reserve."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 21,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L21"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 782,
									"name": "PreviousTxnID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The identifying hash of the transaction that most recently modified this\nobject."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 26,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L26"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 783,
									"name": "PreviousTxnLgrSeq",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the ledger that contains the transaction that most recently\nmodified this object."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 31,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L31"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 789,
									"name": "RegularKey",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of a key pair that can be used to sign transactions for this\naccount instead of the master key. Use a SetRegularKey transaction to\nchange this value."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 58,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L58"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 784,
									"name": "Sequence",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sequence number of the next valid transaction for this account."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 33,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L33"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 791,
									"name": "TickSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "How many significant digits to use for exchange rates of Offers involving\ncurrencies issued by this address. Valid values are 3 to 15, inclusive."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 69,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L69"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 790,
									"name": "TicketCount",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "How many Tickets this account owns in the ledger. This is updated\nautomatically to ensure that the account stays within the hard limit of 250.\nTickets at a time."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 64,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L64"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 792,
									"name": "TransferRate",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A transfer fee to charge other users for sending currency issued by this\naccount to each other."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 74,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L74"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 793,
									"name": "WalletLocator",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An arbitrary 256-bit value that users can set."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 76,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L76"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 798,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										778,
										785,
										779,
										794,
										786,
										787,
										795,
										780,
										777,
										788,
										796,
										797,
										781,
										782,
										783,
										789,
										784,
										791,
										790,
										792,
										793,
										798
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
									"line": 9,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L9"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 813,
							"name": "AccountRootFlagsInterface",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A boolean map of AccountRootFlags for simplified code checking AccountRoot settings.\nFor submitting settings flags to the ledger, use AccountRootFlags instead."
									}
								]
							},
							"children": [
								{
									"id": 821,
									"name": "lsfDefaultRipple",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable rippling on this address's trust lines by default. Required for issuing addresses; discouraged for others."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 123,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L123"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 822,
									"name": "lsfDepositAuth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This account can only receive funds from transactions it sends, and from preauthorized accounts.\n(It has DepositAuth enabled.)"
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 128,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L128"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 818,
									"name": "lsfDisableMaster",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disallows use of the master key to sign transactions for this account."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 111,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L111"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 824,
									"name": "lsfDisallowIncomingCheck",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disallow incoming Checks from other accounts."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 136,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L136"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 823,
									"name": "lsfDisallowIncomingNFTokenOffer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disallow incoming NFTOffers from other accounts."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 132,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L132"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 825,
									"name": "lsfDisallowIncomingPayChan",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disallow incoming PayChannels from other accounts."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 140,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L140"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 826,
									"name": "lsfDisallowIncomingTrustline",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disallow incoming Trustlines from other accounts."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 144,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L144"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 817,
									"name": "lsfDisallowXRP",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Client applications should not send XRP to this account. Not enforced by rippled."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 107,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L107"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 820,
									"name": "lsfGlobalFreeze",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "All assets issued by this address are frozen."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 119,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L119"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 819,
									"name": "lsfNoFreeze",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This address cannot freeze trust lines connected to it. Once enabled, cannot be disabled."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 115,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L115"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 814,
									"name": "lsfPasswordSpent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The account has used its free SetRegularKey transaction."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 95,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L95"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 816,
									"name": "lsfRequireAuth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This account must individually approve other users for those users to hold this account's issued currencies."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 103,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L103"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 815,
									"name": "lsfRequireDestTag",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Requires incoming payments to specify a Destination Tag."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
											"line": 99,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L99"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										821,
										822,
										818,
										824,
										823,
										825,
										826,
										817,
										820,
										819,
										814,
										816,
										815
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/AccountRoot.ts",
									"line": 91,
									"character": 17,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/AccountRoot.ts#L91"
								}
							]
						},
						{
							"id": 828,
							"name": "Amendments",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Amendments object type contains a list of Amendments that are currently\nactive."
									}
								]
							},
							"children": [
								{
									"id": 830,
									"name": "Amendments",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of 256-bit amendment IDs for all currently-enabled amendments. If\nomitted, there are no enabled amendments."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Amendments.ts",
											"line": 33,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Amendments.ts#L33"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 832,
									"name": "Flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bit-map of boolean flags. No flags are defined for the Amendments object\ntype, so this value is always 0."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Amendments.ts",
											"line": 44,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Amendments.ts#L44"
										}
									],
									"type": {
										"type": "literal",
										"value": 0
									}
								},
								{
									"id": 829,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Amendments.ts",
											"line": 28,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Amendments.ts#L28"
										}
									],
									"type": {
										"type": "literal",
										"value": "Amendments"
									}
								},
								{
									"id": 831,
									"name": "Majorities",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of objects describing the status of amendments that have majority\nsupport but are not yet enabled. If omitted, there are no pending\namendments with majority support."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Amendments.ts",
											"line": 39,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Amendments.ts#L39"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 921,
											"name": "Majority"
										}
									}
								},
								{
									"id": 833,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										830,
										832,
										829,
										831,
										833
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Amendments.ts",
									"line": 27,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Amendments.ts#L27"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 834,
							"name": "Check",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Check object describes a check, similar to a paper personal check, which\ncan be cashed by its destination to get money from its sender."
									}
								]
							},
							"children": [
								{
									"id": 836,
									"name": "Account",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sender of the Check. Cashing the Check debits this address's balance."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 837,
									"name": "Destination",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The intended recipient of the Check. Only this address can cash the Check,\nusing a CheckCash transaction."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L19"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 844,
									"name": "DestinationNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hint indicating which page of the destination's owner directory links to\nthis object, in case the directory consists of multiple pages."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 52,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L52"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 845,
									"name": "DestinationTag",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An arbitrary tag to further specify the destination for this Check, such\nas a hosted recipient at the destination address."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 57,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L57"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 846,
									"name": "Expiration",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates the time after which this Check is considered expired."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 59,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L59"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 838,
									"name": "Flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bit-map of boolean flags. No flags are defined for Checks, so this value\nis always 0."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L24"
										}
									],
									"type": {
										"type": "literal",
										"value": 0
									}
								},
								{
									"id": 847,
									"name": "InvoiceID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Arbitrary 256-bit hash provided by the sender as a specific reason or\nidentifier for this Check."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 64,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L64"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 835,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 12,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L12"
										}
									],
									"type": {
										"type": "literal",
										"value": "Check"
									}
								},
								{
									"id": 839,
									"name": "OwnerNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hint indicating which page of the sender's owner directory links to this\nobject, in case the directory consists of multiple pages."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L29"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 840,
									"name": "PreviousTxnID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The identifying hash of the transaction that most recently modified this\nobject."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 34,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L34"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 841,
									"name": "PreviousTxnLgrSeq",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the ledger that contains the transaction that most recently\nmodified this object."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 39,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L39"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 842,
									"name": "SendMax",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum amount of currency this Check can debit the sender. If the\nCheck is successfully cashed, the destination is credited in the same\ncurrency for up to this amount."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 45,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L45"
										}
									],
									"type": {
										"type": "reference",
										"id": 3001,
										"name": "Amount"
									}
								},
								{
									"id": 843,
									"name": "Sequence",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sequence number of the CheckCreate transaction that created this check."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 47,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L47"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 848,
									"name": "SourceTag",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An arbitrary tag to further specify the source for this Check, such as a\nhosted recipient at the sender's address."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Check.ts",
											"line": 69,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L69"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 849,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										836,
										837,
										844,
										845,
										846,
										838,
										847,
										835,
										839,
										840,
										841,
										842,
										843,
										848,
										849
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Check.ts",
									"line": 11,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Check.ts#L11"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 850,
							"name": "DepositPreauth",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A DepositPreauth object tracks a preauthorization from one account to\nanother. DepositPreauth transactions create these objects."
									}
								]
							},
							"children": [
								{
									"id": 852,
									"name": "Account",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The account that granted the preauthorization."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DepositPreauth.ts",
											"line": 12,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DepositPreauth.ts#L12"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 853,
									"name": "Authorize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The account that received the preauthorization."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DepositPreauth.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DepositPreauth.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 854,
									"name": "Flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bit-map of boolean flags. No flags are defined for DepositPreauth\nobjects, so this value is always 0."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DepositPreauth.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DepositPreauth.ts#L19"
										}
									],
									"type": {
										"type": "literal",
										"value": 0
									}
								},
								{
									"id": 851,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DepositPreauth.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DepositPreauth.ts#L10"
										}
									],
									"type": {
										"type": "literal",
										"value": "DepositPreauth"
									}
								},
								{
									"id": 855,
									"name": "OwnerNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hint indicating which page of the sender's owner directory links to this\nobject, in case the directory consists of multiple pages."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DepositPreauth.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DepositPreauth.ts#L24"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 856,
									"name": "PreviousTxnID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The identifying hash of the transaction that most recently modified this\nobject."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DepositPreauth.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DepositPreauth.ts#L29"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 857,
									"name": "PreviousTxnLgrSeq",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the ledger that contains the transaction that most recently\nmodified this object."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DepositPreauth.ts",
											"line": 34,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DepositPreauth.ts#L34"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 858,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										852,
										853,
										854,
										851,
										855,
										856,
										857,
										858
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/DepositPreauth.ts",
									"line": 9,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DepositPreauth.ts#L9"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 859,
							"name": "DirectoryNode",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The DirectoryNode object type provides a list of links to other objects in\nthe ledger's state tree."
									}
								]
							},
							"children": [
								{
									"id": 861,
									"name": "Flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bit-map of boolean flags enabled for this directory. Currently, the\nprotocol defines no flags for DirectoryNode objects."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DirectoryNode.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DirectoryNode.ts#L15"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 864,
									"name": "IndexNext",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this Directory consists of multiple pages, this ID links to the next\nobject in the chain, wrapping around at the end."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DirectoryNode.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DirectoryNode.ts#L24"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 865,
									"name": "IndexPrevious",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this Directory consists of multiple pages, this ID links to the\nprevious object in the chain, wrapping around at the beginning."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DirectoryNode.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DirectoryNode.ts#L29"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 863,
									"name": "Indexes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contents of this Directory: an array of IDs of other objects."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DirectoryNode.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DirectoryNode.ts#L19"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 860,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DirectoryNode.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DirectoryNode.ts#L10"
										}
									],
									"type": {
										"type": "literal",
										"value": "DirectoryNode"
									}
								},
								{
									"id": 866,
									"name": "Owner",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the account that owns the objects in this directory."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DirectoryNode.ts",
											"line": 31,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DirectoryNode.ts#L31"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 862,
									"name": "RootIndex",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of root object for this directory."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DirectoryNode.ts",
											"line": 17,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DirectoryNode.ts#L17"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 869,
									"name": "TakerGetsCurrency",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The currency code of the TakerGets amount from the offers in this\ndirectory."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DirectoryNode.ts",
											"line": 43,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DirectoryNode.ts#L43"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 870,
									"name": "TakerGetsIssuer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The issuer of the TakerGets amount from the offers in this directory."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DirectoryNode.ts",
											"line": 45,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DirectoryNode.ts#L45"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 867,
									"name": "TakerPaysCurrency",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The currency code of the TakerPays amount from the offers in this\ndirectory."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DirectoryNode.ts",
											"line": 36,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DirectoryNode.ts#L36"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 868,
									"name": "TakerPaysIssuer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The issuer of the TakerPays amount from the offers in this directory."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/DirectoryNode.ts",
											"line": 38,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DirectoryNode.ts#L38"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 871,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										861,
										864,
										865,
										863,
										860,
										866,
										862,
										869,
										870,
										867,
										868,
										871
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/DirectoryNode.ts",
									"line": 9,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/DirectoryNode.ts#L9"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 872,
							"name": "Escrow",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Escrow object type represents a held payment of XRP waiting to be\nexecuted or canceled."
									}
								]
							},
							"children": [
								{
									"id": 874,
									"name": "Account",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the owner (sender) of this held payment. This is the\naccount that provided the XRP, and gets it back if the held payment is\ncanceled."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 16,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L16"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 876,
									"name": "Amount",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The amount of XRP, in drops, to be delivered by the held payment."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 23,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L23"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 878,
									"name": "CancelAfter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The time after which this Escrow is considered expired."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 33,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L33"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 877,
									"name": "Condition",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A PREIMAGE-SHA-256 crypto-condition, as hexadecimal. If present, the\nEscrowFinish transaction must contain a fulfillment that satisfies this\ncondition."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L29"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 875,
									"name": "Destination",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The destination address where the XRP is paid if the held payment is\nsuccessful."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 21,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L21"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 884,
									"name": "DestinationNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hint indicating which page of the destination's owner directory links to\nthis object, in case the directory consists of multiple pages."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 63,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L63"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 882,
									"name": "DestinationTag",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An arbitrary tag to further specify the destination for this held payment,\nsuch as a hosted recipient at the destination address."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 53,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L53"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 879,
									"name": "FinishAfter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The time, in seconds, since the Ripple Epoch, after which this held payment\ncan be finished. Any EscrowFinish transaction before this time fails."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 38,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L38"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 880,
									"name": "Flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bit-map of boolean flags. No flags are defined for the Escrow type, so\nthis value is always 0."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 43,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L43"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 873,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L10"
										}
									],
									"type": {
										"type": "literal",
										"value": "Escrow"
									}
								},
								{
									"id": 883,
									"name": "OwnerNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hint indicating which page of the owner directory links to this object,\nin case the directory consists of multiple pages."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 58,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L58"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 885,
									"name": "PreviousTxnID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The identifying hash of the transaction that most recently modified this\nobject."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 68,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L68"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 886,
									"name": "PreviousTxnLgrSeq",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the ledger that contains the transaction that most recently\nmodified this object."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 73,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L73"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 881,
									"name": "SourceTag",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An arbitrary tag to further specify the source for this held payment, such\nas a hosted recipient at the owner's address."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Escrow.ts",
											"line": 48,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L48"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 887,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										874,
										876,
										878,
										877,
										875,
										884,
										882,
										879,
										880,
										873,
										883,
										885,
										886,
										881,
										887
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Escrow.ts",
									"line": 9,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Escrow.ts#L9"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 895,
							"name": "FeeSettingsPostAmendmentFields",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 896,
									"name": "BaseFeeDrops",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction cost of the \"reference transaction\" in drops of XRP as hexadecimal."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/FeeSettings.ts",
											"line": 22,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/FeeSettings.ts#L22"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 897,
									"name": "ReserveBaseDrops",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The base reserve for an account in the XRP Ledger, as drops of XRP."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/FeeSettings.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/FeeSettings.ts#L24"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 898,
									"name": "ReserveIncrementDrops",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The incremental owner reserve for owning objects, as drops of XRP."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/FeeSettings.ts",
											"line": 26,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/FeeSettings.ts#L26"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										896,
										897,
										898
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/FeeSettings.ts",
									"line": 20,
									"character": 17,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/FeeSettings.ts#L20"
								}
							]
						},
						{
							"id": 890,
							"name": "FeeSettingsPreAmendmentFields",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 891,
									"name": "BaseFee",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction cost of the \"reference transaction\" in drops of XRP as hexadecimal."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/FeeSettings.ts",
											"line": 11,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/FeeSettings.ts#L11"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 892,
									"name": "ReferenceFeeUnits",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The BaseFee translated into \"fee units\"."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/FeeSettings.ts",
											"line": 13,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/FeeSettings.ts#L13"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 893,
									"name": "ReserveBase",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The base reserve for an account in the XRP Ledger, as drops of XRP."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/FeeSettings.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/FeeSettings.ts#L15"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 894,
									"name": "ReserveIncrement",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The incremental owner reserve for owning objects, as drops of XRP."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/FeeSettings.ts",
											"line": 17,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/FeeSettings.ts#L17"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										891,
										892,
										893,
										894
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/FeeSettings.ts",
									"line": 9,
									"character": 17,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/FeeSettings.ts#L9"
								}
							]
						},
						{
							"id": 899,
							"name": "Ledger",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A ledger is a block of transactions and shared state data. It has a unique\nheader that describes its contents using cryptographic hashes."
									}
								]
							},
							"children": [
								{
									"id": 901,
									"name": "accountState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "All the state information in this ledger."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L15"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 914,
											"name": "LedgerEntry"
										}
									}
								},
								{
									"id": 900,
									"name": "account_hash",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The SHA-512Half of this ledger's state tree information."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 13,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L13"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 902,
									"name": "close_flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bit-map of flags relating to the closing of this ledger."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 17,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L17"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 903,
									"name": "close_time",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The approximate time this ledger version closed, as the number of seconds\nsince the Ripple Epoch of 2000-01-01 00:00:00. This value is rounded based\non the close_time_resolution."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 23,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L23"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 904,
									"name": "close_time_human",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The approximate time this ledger was closed, in human-readable format.\nAlways uses the UTC time zone."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 28,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L28"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 905,
									"name": "close_time_resolution",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An integer in the range [2,120] indicating the maximum number of seconds\nby which the close_time could be rounded."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 33,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L33"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 906,
									"name": "closed",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether or not this ledger has been closed."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 35,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L35"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 907,
									"name": "ledger_hash",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The SHA-512Half of this ledger version. This serves as a unique identifier\nfor this ledger and all its contents."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 40,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L40"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 908,
									"name": "ledger_index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ledger index of the ledger. Some API methods display this as a quoted\ninteger; some display it as a native JSON number."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 45,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L45"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 909,
									"name": "parent_close_time",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The approximate time at which the previous ledger was closed."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 47,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L47"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 910,
									"name": "parent_hash",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Unique identifying hash of the ledger that came immediately before this\none."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 52,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L52"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 911,
									"name": "total_coins",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Total number of XRP drops in the network, as a quoted integer."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 54,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L54"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 912,
									"name": "transaction_hash",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hash of the transaction information included in this ledger, as hex."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 56,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L56"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 913,
									"name": "transactions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Transactions applied in this ledger version. By default, members are the\ntransactions' identifying Hash strings. If the request specified expand as\ntrue, members are full representations of the transactions instead, in\neither JSON or binary depending on whether the request specified binary\nas true."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ledger.ts",
											"line": 64,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L64"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "Object"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										901,
										900,
										902,
										903,
										904,
										905,
										906,
										907,
										908,
										909,
										910,
										911,
										912,
										913
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ledger.ts",
									"line": 11,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L11"
								}
							]
						},
						{
							"id": 915,
							"name": "LedgerHashes",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The LedgerHashes objects exist to make it possible to look up a previous\nledger's hash with only the current ledger version and at most one lookup of\na previous ledger version."
									}
								]
							},
							"children": [
								{
									"id": 919,
									"name": "Flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bit-map of boolean flags for this object. No flags are defined for this\ntype."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/LedgerHashes.ts",
											"line": 23,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/LedgerHashes.ts#L23"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 918,
									"name": "Hashes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of up to 256 ledger hashes. The contents depend on which sub-type\nof LedgerHashes object this is."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/LedgerHashes.ts",
											"line": 18,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/LedgerHashes.ts#L18"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 917,
									"name": "LastLedgerSequence",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Ledger Index of the last entry in this object's Hashes array."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/LedgerHashes.ts",
											"line": 13,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/LedgerHashes.ts#L13"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 916,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/LedgerHashes.ts",
											"line": 11,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/LedgerHashes.ts#L11"
										}
									],
									"type": {
										"type": "literal",
										"value": "LedgerHashes"
									}
								},
								{
									"id": 920,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										919,
										918,
										917,
										916,
										920
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/LedgerHashes.ts",
									"line": 10,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/LedgerHashes.ts#L10"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 921,
							"name": "Majority",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 922,
									"name": "Majority",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Amendments.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Amendments.ts#L10"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 923,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 924,
													"name": "Amendment",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The Amendment ID of the pending amendment."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/ledger/Amendments.ts",
															"line": 12,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Amendments.ts#L12"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 925,
													"name": "CloseTime",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The "
															},
															{
																"kind": "code",
																"text": "`close_time`"
															},
															{
																"kind": "text",
																"text": " field of the ledger version where this amendment most\nrecently gained a majority."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/ledger/Amendments.ts",
															"line": 17,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Amendments.ts#L17"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														924,
														925
													]
												}
											],
											"sources": [
												{
													"fileName": "xrpl/src/models/ledger/Amendments.ts",
													"line": 10,
													"character": 12,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Amendments.ts#L10"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										922
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Amendments.ts",
									"line": 9,
									"character": 17,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Amendments.ts#L9"
								}
							]
						},
						{
							"id": 956,
							"name": "NFToken",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 957,
									"name": "NFToken",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
											"line": 4,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L4"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 958,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 959,
													"name": "Flags",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
															"line": 5,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L5"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 960,
													"name": "Issuer",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
															"line": 6,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L6"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 961,
													"name": "NFTokenID",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
															"line": 7,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L7"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 962,
													"name": "NFTokenTaxon",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
															"line": 8,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L8"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 963,
													"name": "URI",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
															"line": 9,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L9"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														959,
														960,
														961,
														962,
														963
													]
												}
											],
											"sources": [
												{
													"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
													"line": 4,
													"character": 11,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L4"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										957
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
									"line": 3,
									"character": 17,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L3"
								}
							]
						},
						{
							"id": 936,
							"name": "NFTokenOffer",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 938,
									"name": "Amount",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenOffer.ts",
											"line": 7,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenOffer.ts#L7"
										}
									],
									"type": {
										"type": "reference",
										"id": 3001,
										"name": "Amount"
									}
								},
								{
									"id": 939,
									"name": "Destination",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenOffer.ts",
											"line": 8,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenOffer.ts#L8"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 940,
									"name": "Expiration",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenOffer.ts",
											"line": 9,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenOffer.ts#L9"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 941,
									"name": "Flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenOffer.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenOffer.ts#L10"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 937,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenOffer.ts",
											"line": 6,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenOffer.ts#L6"
										}
									],
									"type": {
										"type": "literal",
										"value": "NFTokenOffer"
									}
								},
								{
									"id": 942,
									"name": "NFTokenOfferNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenOffer.ts",
											"line": 11,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenOffer.ts#L11"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 943,
									"name": "Owner",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenOffer.ts",
											"line": 12,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenOffer.ts#L12"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 944,
									"name": "OwnerNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenOffer.ts",
											"line": 13,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenOffer.ts#L13"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 945,
									"name": "PreviousTxnID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenOffer.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenOffer.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 946,
									"name": "PreviousTxnLgrSeq",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenOffer.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenOffer.ts#L15"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 947,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										938,
										939,
										940,
										941,
										937,
										942,
										943,
										944,
										945,
										946,
										947
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/NFTokenOffer.ts",
									"line": 5,
									"character": 17,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenOffer.ts#L5"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 948,
							"name": "NFTokenPage",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 949,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L14"
										}
									],
									"type": {
										"type": "literal",
										"value": "NFTokenPage"
									}
								},
								{
									"id": 951,
									"name": "NFTokens",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
											"line": 16,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L16"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 956,
											"name": "NFToken"
										}
									}
								},
								{
									"id": 950,
									"name": "NextPageMin",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L15"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 952,
									"name": "PreviousPageMin",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
											"line": 17,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L17"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 953,
									"name": "PreviousTxnID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
											"line": 18,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L18"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 954,
									"name": "PreviousTxnLgrSeq",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L19"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 955,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										949,
										951,
										950,
										952,
										953,
										954,
										955
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/NFTokenPage.ts",
									"line": 13,
									"character": 17,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NFTokenPage.ts#L13"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 927,
							"name": "NegativeUNL",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The NegativeUNL object type contains the current status of the Negative UNL,\na list of trusted validators currently believed to be offline."
									}
								]
							},
							"children": [
								{
									"id": 929,
									"name": "DisabledValidators",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of trusted validators that are currently disabled."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NegativeUNL.ts",
											"line": 20,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NegativeUNL.ts#L20"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 930,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 931,
														"name": "FirstLedgerSequence",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "xrpl/src/models/ledger/NegativeUNL.ts",
																"line": 21,
																"character": 4,
																"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NegativeUNL.ts#L21"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 932,
														"name": "PublicKey",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "xrpl/src/models/ledger/NegativeUNL.ts",
																"line": 22,
																"character": 4,
																"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NegativeUNL.ts#L22"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															931,
															932
														]
													}
												],
												"sources": [
													{
														"fileName": "xrpl/src/models/ledger/NegativeUNL.ts",
														"line": 20,
														"character": 29,
														"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NegativeUNL.ts#L20"
													}
												]
											}
										}
									}
								},
								{
									"id": 928,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NegativeUNL.ts",
											"line": 16,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NegativeUNL.ts#L16"
										}
									],
									"type": {
										"type": "literal",
										"value": "NegativeUNL"
									}
								},
								{
									"id": 933,
									"name": "ValidatorToDisable",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The public key of a trusted validator that is scheduled to be disabled in\nthe next flag ledger."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NegativeUNL.ts",
											"line": 28,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NegativeUNL.ts#L28"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 934,
									"name": "ValidatorToReEnable",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The public key of a trusted validator in the Negative UNL that is\nscheduled to be re-enabled in the next flag ledger."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/NegativeUNL.ts",
											"line": 33,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NegativeUNL.ts#L33"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 935,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										929,
										928,
										933,
										934,
										935
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/NegativeUNL.ts",
									"line": 15,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NegativeUNL.ts#L15"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 964,
							"name": "Offer",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 967,
									"name": "Account",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the account that placed this Offer."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L10"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 971,
									"name": "BookDirectory",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the Offer Directory that links to this Offer."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L24"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 972,
									"name": "BookNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hint indicating which page of the Offer Directory links to this object,\nin case the directory consists of multiple pages."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L29"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 976,
									"name": "Expiration",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The time this Offer expires, in seconds since the Ripple Epoch."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 46,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L46"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 966,
									"name": "Flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bit-map of boolean flags enabled for this Offer."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 8,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L8"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 965,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 6,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L6"
										}
									],
									"type": {
										"type": "literal",
										"value": "Offer"
									}
								},
								{
									"id": 973,
									"name": "OwnerNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hint indicating which page of the Owner Directory links to this object,\nin case the directory consists of multiple pages."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 34,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L34"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 974,
									"name": "PreviousTxnID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The identifying hash of the transaction that most recently modified this\nobject."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 39,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L39"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 975,
									"name": "PreviousTxnLgrSeq",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the ledger that contains the transaction that most recently\nmodified this object."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 44,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L44"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 968,
									"name": "Sequence",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Sequence value of the OfferCreate transaction that created this Offer\nobject. Used in combination with the Account to identify this Offer."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L15"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 970,
									"name": "TakerGets",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The remaining amount and type of currency being provided by the Offer\ncreator."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 22,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L22"
										}
									],
									"type": {
										"type": "reference",
										"id": 3001,
										"name": "Amount"
									}
								},
								{
									"id": 969,
									"name": "TakerPays",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The remaining amount and type of currency requested by the Offer creator."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Offer.ts",
											"line": 17,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L17"
										}
									],
									"type": {
										"type": "reference",
										"id": 3001,
										"name": "Amount"
									}
								},
								{
									"id": 977,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										967,
										971,
										972,
										976,
										966,
										965,
										973,
										974,
										975,
										968,
										970,
										969,
										977
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 5,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L5"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 1707,
									"name": "BookOffer"
								}
							]
						},
						{
							"id": 981,
							"name": "PayChannel",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The PayChannel object type represents a payment channel. Payment channels\nenable small, rapid off-ledger payments of XRP that can be later reconciled\nwith the consensus ledger. A payment channel holds a balance of XRP that can\nonly be paid out to a specific destination address until the channel is\nclosed."
									}
								]
							},
							"children": [
								{
									"id": 983,
									"name": "Account",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The source address that owns this payment channel. This comes from the\nsending address of the transaction that created the channel."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 18,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L18"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 985,
									"name": "Amount",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Total XRP, in drops, that has been allocated to this channel. This\nincludes XRP that has been paid to the destination address. This is\ninitially set by the transaction that created the channel and can be\nincreased if the source address sends a PaymentChannelFund transaction."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 32,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L32"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 986,
									"name": "Balance",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Total XRP, in drops, already paid out by the channel. The difference\nbetween this value and the Amount field is how much XRP can still be paid\nto the destination address with PaymentChannelClaim transactions. If the\nchannel closes, the remaining difference is returned to the source address."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 39,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L39"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 994,
									"name": "CancelAfter",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The immutable expiration time for this payment channel, in seconds since\nthe Ripple Epoch. This channel is expired if this value is present and\nsmaller than the previous ledger's close_time field. This is optionally\nset by the transaction that created the channel, and cannot be changed."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 91,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L91"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 984,
									"name": "Destination",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The destination address for this payment channel. While the payment\nchannel is open, this address is the only one that can receive XRP from the\nchannel. This comes from the Destination field of the transaction that\ncreated the channel."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 25,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L25"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 997,
									"name": "DestinationNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hint indicating which page of the destination's owner directory links to\nthis object, in case the directory consists of multiple pages."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 106,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L106"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 996,
									"name": "DestinationTag",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An arbitrary tag to further specify the destination for this payment\nchannel, such as a hosted recipient at the destination address."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 101,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L101"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 993,
									"name": "Expiration",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The mutable expiration time for this payment channel, in seconds since the\nRipple Epoch. The channel is expired if this value is present and smaller\nthan the previous ledger's close_time field. See Setting Channel Expiration\nfor more details."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 84,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L84"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 992,
									"name": "Flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bit-map of boolean flags enabled for this payment channel. Currently,\nthe protocol defines no flags for PayChannel objects."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 77,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L77"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 982,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 13,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L13"
										}
									],
									"type": {
										"type": "literal",
										"value": "PayChannel"
									}
								},
								{
									"id": 989,
									"name": "OwnerNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hint indicating which page of the source address's owner directory links\nto this object, in case the directory consists of multiple pages."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 62,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L62"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 990,
									"name": "PreviousTxnID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The identifying hash of the transaction that most recently modified this\nobject."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 67,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L67"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 991,
									"name": "PreviousTxnLgrSeq",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the ledger that contains the transaction that most recently\nmodified this object."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 72,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L72"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 987,
									"name": "PublicKey",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Public key, in hexadecimal, of the key pair that can be used to sign\nclaims against this channel. This can be any valid secp256k1 or Ed25519\npublic key. This is set by the transaction that created the channel and\nmust match the public key used in claims against the channel. The channel\nsource address can also send XRP from this channel to the destination\nwithout signed claims."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 48,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L48"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 988,
									"name": "SettleDelay",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Number of seconds the source address must wait to close the channel if\nit still has any XRP in it. Smaller values mean that the destination\naddress has less time to redeem any outstanding claims after the source\naddress requests to close the channel. Can be any value that fits in a\n32-bit unsigned integer (0 to 2^32-1). This is set by the transaction that\ncreates the channel."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 57,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L57"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 995,
									"name": "SourceTag",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An arbitrary tag to further specify the source for this payment channel\nuseful for specifying a hosted recipient at the owner's address."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/PayChannel.ts",
											"line": 96,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L96"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 998,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										983,
										985,
										986,
										994,
										984,
										997,
										996,
										993,
										992,
										982,
										989,
										990,
										991,
										987,
										988,
										995,
										998
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/PayChannel.ts",
									"line": 12,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/PayChannel.ts#L12"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 999,
							"name": "RippleState",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The RippleState object type connects two accounts in a single currency."
									}
								]
							},
							"children": [
								{
									"id": 1002,
									"name": "Balance",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The balance of the trust line, from the perspective of the low account. A\nnegative balance indicates that the low account has issued currency to the\nhigh account. The issuer is always the neutral value ACCOUNT_ONE."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L19"
										}
									],
									"type": {
										"type": "reference",
										"id": 2997,
										"name": "IssuedCurrencyAmount"
									}
								},
								{
									"id": 1001,
									"name": "Flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bit-map of boolean options enabled for this object."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 13,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L13"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1004,
									"name": "HighLimit",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The limit that the high account has set on the trust line. The issuer is\nthe address of the high account that set this limit."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L29"
										}
									],
									"type": {
										"type": "reference",
										"id": 2997,
										"name": "IssuedCurrencyAmount"
									}
								},
								{
									"id": 1008,
									"name": "HighNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hint indicating which page of the high account's owner directory links\nto this object, in case the directory consists of multiple pages."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 49,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L49"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1011,
									"name": "HighQualityIn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inbound quality set by the high account, as an integer in the implied\nratio HighQualityIn:1,000,000,000. As a special case, the value 0 is\nequivalent to 1 billion, or face value."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 67,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L67"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1012,
									"name": "HighQualityOut",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The outbound quality set by the high account, as an integer in the implied\nratio HighQualityOut:1,000,000,000. As a special case, the value 0 is\nequivalent to 1 billion, or face value."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 73,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L73"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1000,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 11,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L11"
										}
									],
									"type": {
										"type": "literal",
										"value": "RippleState"
									}
								},
								{
									"id": 1003,
									"name": "LowLimit",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The limit that the low account has set on the trust line. The issuer is\nthe address of the low account that set this limit."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L24"
										}
									],
									"type": {
										"type": "reference",
										"id": 2997,
										"name": "IssuedCurrencyAmount"
									}
								},
								{
									"id": 1007,
									"name": "LowNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hint indicating which page of the low account's owner directory links to\nthis object, in case the directory consists of multiple pages."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 44,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L44"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1009,
									"name": "LowQualityIn",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inbound quality set by the low account, as an integer in the implied\nratio LowQualityIn:1,000,000,000. As a special case, the value 0 is\nequivalent to 1 billion, or face value."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 55,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L55"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1010,
									"name": "LowQualityOut",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The outbound quality set by the low account, as an integer in the implied\nratio LowQualityOut:1,000,000,000. As a special case, the value 0 is\nequivalent to 1 billion, or face value."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 61,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L61"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1005,
									"name": "PreviousTxnID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The identifying hash of the transaction that most recently modified this\nobject."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 34,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L34"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1006,
									"name": "PreviousTxnLgrSeq",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the ledger that contains the transaction that most recently\nmodified this object."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/RippleState.ts",
											"line": 39,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L39"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1013,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1002,
										1001,
										1004,
										1008,
										1011,
										1012,
										1000,
										1003,
										1007,
										1009,
										1010,
										1005,
										1006,
										1013
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/RippleState.ts",
									"line": 10,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/RippleState.ts#L10"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 1023,
							"name": "SignerList",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SignerList object type represents a list of parties that, as a group,\nare authorized to sign a transaction in place of an individual account. You\ncan create, replace, or remove a signer list using a SignerListSet\ntransaction."
									}
								]
							},
							"children": [
								{
									"id": 1025,
									"name": "Flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bit-map of Boolean flags enabled for this signer list. For more\ninformation, see SignerList Flags."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/SignerList.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/SignerList.ts#L19"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1024,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/SignerList.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/SignerList.ts#L14"
										}
									],
									"type": {
										"type": "literal",
										"value": "SignerList"
									}
								},
								{
									"id": 1028,
									"name": "OwnerNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hint indicating which page of the owner directory links to this object,\nin case the directory consists of multiple pages."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/SignerList.ts",
											"line": 34,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/SignerList.ts#L34"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1026,
									"name": "PreviousTxnID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The identifying hash of the transaction that most recently modified this\nobject."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/SignerList.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/SignerList.ts#L24"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1027,
									"name": "PreviousTxnLgrSeq",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the ledger that contains the transaction that most recently\nmodified this object."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/SignerList.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/SignerList.ts#L29"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1029,
									"name": "SignerEntries",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of Signer Entry objects representing the parties who are part of\nthis signer list."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/SignerList.ts",
											"line": 39,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/SignerList.ts#L39"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 3020,
											"name": "SignerEntry"
										}
									}
								},
								{
									"id": 1030,
									"name": "SignerListID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An ID for this signer list. Currently always set to 0. If a future\namendment allows multiple signer lists for an account, this may change."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/SignerList.ts",
											"line": 44,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/SignerList.ts#L44"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1031,
									"name": "SignerQuorum",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A target number for signer weights. To produce a valid signature for the\nowner of this SignerList, the signers must provide valid signatures whose\nweights sum to this value or more."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/SignerList.ts",
											"line": 50,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/SignerList.ts#L50"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1032,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1025,
										1024,
										1028,
										1026,
										1027,
										1029,
										1030,
										1031,
										1032
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/SignerList.ts",
									"line": 13,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/SignerList.ts#L13"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 1035,
							"name": "Ticket",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Ticket object type represents a Ticket, which tracks an account sequence\nnumber that has been set aside for future use. You can create new tickets\nwith a TicketCreate transaction."
									}
								]
							},
							"children": [
								{
									"id": 1037,
									"name": "Account",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The account that owns this Ticket."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ticket.ts",
											"line": 13,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ticket.ts#L13"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1038,
									"name": "Flags",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bit-map of Boolean flags enabled for this Ticket. Currently, there are\nno flags defined for Tickets."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ticket.ts",
											"line": 18,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ticket.ts#L18"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1036,
									"name": "LedgerEntryType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ticket.ts",
											"line": 11,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ticket.ts#L11"
										}
									],
									"type": {
										"type": "literal",
										"value": "Ticket"
									}
								},
								{
									"id": 1039,
									"name": "OwnerNode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hint indicating which page of the owner directory links to this object,\nin case the directory consists of multiple pages."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ticket.ts",
											"line": 23,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ticket.ts#L23"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1040,
									"name": "PreviousTxnID",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The identifying hash of the transaction that most recently modified this\nobject."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ticket.ts",
											"line": 28,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ticket.ts#L28"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1041,
									"name": "PreviousTxnLgrSeq",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the ledger that contains the transaction that most recently\nmodified this object."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ticket.ts",
											"line": 33,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ticket.ts#L33"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1042,
									"name": "TicketSequence",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Sequence Number this Ticket sets aside."
											}
										]
									},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/Ticket.ts",
											"line": 35,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ticket.ts#L35"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1043,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseLedgerEntry.index"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1037,
										1038,
										1036,
										1039,
										1040,
										1041,
										1042,
										1043
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ticket.ts",
									"line": 10,
									"character": 25,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ticket.ts#L10"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "default"
								}
							]
						},
						{
							"id": 889,
							"name": "FeeSettings",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The FeeSettings object type contains the current base transaction cost and\nreserve amounts as determined by fee voting.\n\nThe fields will be based on the status of the "
									},
									{
										"kind": "code",
										"text": "`XRPFees`"
									},
									{
										"kind": "text",
										"text": " amendment.\n- Before: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "FeeSettingsPreAmendmentFields",
										"target": 890
									},
									{
										"kind": "text",
										"text": "\n- After: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "FeeSettingsPostAmendmentFields",
										"target": 895
									}
								],
								"blockTags": [
									{
										"tag": "@interface",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/FeeSettings.ts",
									"line": 49,
									"character": 5,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/FeeSettings.ts#L49"
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "FeeSettingsBase"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 890,
												"name": "FeeSettingsPreAmendmentFields"
											},
											{
												"type": "reference",
												"id": 895,
												"name": "FeeSettingsPostAmendmentFields"
											}
										]
									}
								]
							}
						},
						{
							"id": 914,
							"name": "LedgerEntry",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/LedgerEntry.ts",
									"line": 16,
									"character": 5,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/LedgerEntry.ts#L16"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 776,
										"name": "AccountRoot"
									},
									{
										"type": "reference",
										"id": 828,
										"name": "Amendments"
									},
									{
										"type": "reference",
										"id": 834,
										"name": "Check"
									},
									{
										"type": "reference",
										"id": 850,
										"name": "DepositPreauth"
									},
									{
										"type": "reference",
										"id": 859,
										"name": "DirectoryNode"
									},
									{
										"type": "reference",
										"id": 872,
										"name": "Escrow"
									},
									{
										"type": "reference",
										"id": 889,
										"name": "FeeSettings"
									},
									{
										"type": "reference",
										"id": 915,
										"name": "LedgerHashes"
									},
									{
										"type": "reference",
										"id": 927,
										"name": "NegativeUNL"
									},
									{
										"type": "reference",
										"id": 964,
										"name": "Offer"
									},
									{
										"type": "reference",
										"id": 981,
										"name": "PayChannel"
									},
									{
										"type": "reference",
										"id": 999,
										"name": "RippleState"
									},
									{
										"type": "reference",
										"id": 1023,
										"name": "SignerList"
									},
									{
										"type": "reference",
										"id": 1035,
										"name": "Ticket"
									}
								]
							}
						},
						{
							"id": 827,
							"name": "AMENDMENTS_ID",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique id for the Amendments object https://xrpl.org/amendments-object.html#amendments-id-format"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Amendments.ts",
									"line": 6,
									"character": 13,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Amendments.ts#L6"
								}
							],
							"type": {
								"type": "literal",
								"value": "7DB0788C020F02780A673DC74757F23823FA3014C1866E72CC4CD8B226CD6EF4"
							},
							"defaultValue": "'7DB0788C020F02780A673DC74757F23823FA3014C1866E72CC4CD8B226CD6EF4'"
						},
						{
							"id": 888,
							"name": "FEE_SETTINGS_ID",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique id for the FeeSettings object https://xrpl.org/feesettings.html#feesettings-id-format"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/FeeSettings.ts",
									"line": 6,
									"character": 13,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/FeeSettings.ts#L6"
								}
							],
							"type": {
								"type": "literal",
								"value": "4BC50C9B0D8515D3EAAE1E74B29A95804346C491EE1A95BF25E4AAB854A6A651"
							},
							"defaultValue": "'4BC50C9B0D8515D3EAAE1E74B29A95804346C491EE1A95BF25E4AAB854A6A651'"
						},
						{
							"id": 926,
							"name": "NEGATIVE_UNL_ID",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique id for the nUNL object https://xrpl.org/negativeunl.html#negativeunl-id-format"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/NegativeUNL.ts",
									"line": 6,
									"character": 13,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/NegativeUNL.ts#L6"
								}
							],
							"type": {
								"type": "literal",
								"value": "2E8A59AA9D3B5B186B0B9E0F62E6C02587CA74A4D778938E957B6357D364B244"
							},
							"defaultValue": "'2E8A59AA9D3B5B186B0B9E0F62E6C02587CA74A4D778938E957B6357D364B244'"
						}
					],
					"groups": [
						{
							"title": "Enumerations",
							"children": [
								799,
								978,
								1014,
								1033
							]
						},
						{
							"title": "Interfaces",
							"children": [
								776,
								813,
								828,
								834,
								850,
								859,
								872,
								895,
								890,
								899,
								915,
								921,
								956,
								936,
								948,
								927,
								964,
								981,
								999,
								1023,
								1035
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								889,
								914
							]
						},
						{
							"title": "Variables",
							"children": [
								827,
								888,
								926
							]
						}
					],
					"categories": [
						{
							"title": "CATEGORY",
							"children": [
								799,
								978,
								1014,
								1033,
								813,
								895,
								890,
								921,
								956,
								936,
								948,
								964,
								914,
								827,
								888,
								926
							]
						},
						{
							"title": "Ledger Entries",
							"children": [
								776,
								828,
								834,
								850,
								859,
								872,
								899,
								915,
								927,
								981,
								999,
								1023,
								1035,
								889
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/ledger/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/index.ts#L1"
						}
					]
				},
				{
					"id": 2356,
					"name": "AccountSetAsfFlags",
					"kind": 8,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enum for AccountSet Flags."
							}
						]
					},
					"children": [
						{
							"id": 2361,
							"name": "asfAccountTxnID",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Track the ID of this account's most recent transaction. Required for\nAccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L34"
								}
							],
							"type": {
								"type": "literal",
								"value": 5
							}
						},
						{
							"id": 2366,
							"name": "asfAuthorizedNFTokenMinter",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow another account to mint and burn tokens on behalf of this account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L49"
								}
							],
							"type": {
								"type": "literal",
								"value": 10
							}
						},
						{
							"id": 2364,
							"name": "asfDefaultRipple",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable rippling on this account's trust lines by default."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 43,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L43"
								}
							],
							"type": {
								"type": "literal",
								"value": 8
							}
						},
						{
							"id": 2365,
							"name": "asfDepositAuth",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable Deposit Authorization on this account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L45"
								}
							],
							"type": {
								"type": "literal",
								"value": 9
							}
						},
						{
							"id": 2360,
							"name": "asfDisableMaster",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disallow use of the master key pair. Can only be enabled if the account\nhas configured another way to sign transactions, such as a Regular Key or a\nSigner List."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L29"
								}
							],
							"type": {
								"type": "literal",
								"value": 4
							}
						},
						{
							"id": 2368,
							"name": "asfDisallowIncomingCheck",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disallow other accounts from creating incoming Checks"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L54"
								}
							],
							"type": {
								"type": "literal",
								"value": 13
							}
						},
						{
							"id": 2367,
							"name": "asfDisallowIncomingNFTokenOffer",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disallow other accounts from creating incoming NFTOffers"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L52"
								}
							],
							"type": {
								"type": "literal",
								"value": 12
							}
						},
						{
							"id": 2369,
							"name": "asfDisallowIncomingPayChan",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disallow other accounts from creating incoming PayChannels"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L56"
								}
							],
							"type": {
								"type": "literal",
								"value": 14
							}
						},
						{
							"id": 2370,
							"name": "asfDisallowIncomingTrustline",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disallow other accounts from creating incoming Trustlines"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 58,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L58"
								}
							],
							"type": {
								"type": "literal",
								"value": 15
							}
						},
						{
							"id": 2359,
							"name": "asfDisallowXRP",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "XRP should not be sent to this account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L23"
								}
							],
							"type": {
								"type": "literal",
								"value": 3
							}
						},
						{
							"id": 2363,
							"name": "asfGlobalFreeze",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Freeze all assets issued by this account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 41,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L41"
								}
							],
							"type": {
								"type": "literal",
								"value": 7
							}
						},
						{
							"id": 2362,
							"name": "asfNoFreeze",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Permanently give up the ability to freeze individual trust lines or\ndisable Global Freeze. This flag can never be disabled after being enabled."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L39"
								}
							],
							"type": {
								"type": "literal",
								"value": 6
							}
						},
						{
							"id": 2358,
							"name": "asfRequireAuth",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Require authorization for users to hold balances issued by this address\ncan only be enabled if the address has no trust lines connected to it."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L21"
								}
							],
							"type": {
								"type": "literal",
								"value": 2
							}
						},
						{
							"id": 2357,
							"name": "asfRequireDest",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Require a destination tag to send transactions to this account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L16"
								}
							],
							"type": {
								"type": "literal",
								"value": 1
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								2361,
								2366,
								2364,
								2365,
								2360,
								2368,
								2367,
								2369,
								2370,
								2359,
								2363,
								2362,
								2358,
								2357
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/accountSet.ts",
							"line": 14,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L14"
						}
					]
				},
				{
					"id": 2371,
					"name": "AccountSetTfFlags",
					"kind": 8,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enum for AccountSet Transaction Flags."
							}
						]
					},
					"children": [
						{
							"id": 2377,
							"name": "tfAllowXRP",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The same as ClearFlag: asfDisallowXRP."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 78,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L78"
								}
							],
							"type": {
								"type": "literal",
								"value": 2097152
							}
						},
						{
							"id": 2376,
							"name": "tfDisallowXRP",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The same as SetFlag: asfDisallowXRP."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 76,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L76"
								}
							],
							"type": {
								"type": "literal",
								"value": 1048576
							}
						},
						{
							"id": 2375,
							"name": "tfOptionalAuth",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The same as ClearFlag: asfRequireAuth."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 74,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L74"
								}
							],
							"type": {
								"type": "literal",
								"value": 524288
							}
						},
						{
							"id": 2373,
							"name": "tfOptionalDestTag",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The same as ClearFlag: asfRequireDest."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 70,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L70"
								}
							],
							"type": {
								"type": "literal",
								"value": 131072
							}
						},
						{
							"id": 2374,
							"name": "tfRequireAuth",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The same as SetFlag: asfRequireAuth."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 72,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L72"
								}
							],
							"type": {
								"type": "literal",
								"value": 262144
							}
						},
						{
							"id": 2372,
							"name": "tfRequireDestTag",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The same as SetFlag: asfRequireDest."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 68,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L68"
								}
							],
							"type": {
								"type": "literal",
								"value": 65536
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								2377,
								2376,
								2375,
								2373,
								2374,
								2372
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/accountSet.ts",
							"line": 66,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L66"
						}
					]
				},
				{
					"id": 688,
					"name": "ECDSA",
					"kind": 8,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 689,
							"name": "ed25519",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/ECDSA.ts",
									"line": 2,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/ECDSA.ts#L2"
								}
							],
							"type": {
								"type": "literal",
								"value": "ed25519"
							}
						},
						{
							"id": 690,
							"name": "secp256k1",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/ECDSA.ts",
									"line": 3,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/ECDSA.ts#L3"
								}
							],
							"type": {
								"type": "literal",
								"value": "ecdsa-secp256k1"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								689,
								690
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/ECDSA.ts",
							"line": 1,
							"character": 5,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/ECDSA.ts#L1"
						}
					]
				},
				{
					"id": 2570,
					"name": "EnableAmendmentFlags",
					"kind": 8,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Transaction Flags for an EnableAmendment Transaction."
							}
						]
					},
					"children": [
						{
							"id": 2571,
							"name": "tfGotMajority",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Support for this amendment increased to at least 80% of trusted validators starting with this ledger version."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/enableAmendment.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/enableAmendment.ts#L10"
								}
							],
							"type": {
								"type": "literal",
								"value": 65536
							}
						},
						{
							"id": 2572,
							"name": "tfLostMajority",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Support for this amendment decreased to less than 80% of trusted validators starting with this ledger version."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/enableAmendment.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/enableAmendment.ts#L12"
								}
							],
							"type": {
								"type": "literal",
								"value": 131072
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								2571,
								2572
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/enableAmendment.ts",
							"line": 8,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/enableAmendment.ts#L8"
						}
					]
				},
				{
					"id": 2644,
					"name": "NFTokenCreateOfferFlags",
					"kind": 8,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Transaction Flags for an NFTokenCreateOffer Transaction."
							}
						]
					},
					"children": [
						{
							"id": 2645,
							"name": "tfSellNFToken",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If set, indicates that the offer is a sell offer.\nOtherwise, it is a buy offer."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenCreateOffer.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCreateOffer.ts#L23"
								}
							],
							"type": {
								"type": "literal",
								"value": 1
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								2645
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/NFTokenCreateOffer.ts",
							"line": 18,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCreateOffer.ts#L18"
						}
					]
				},
				{
					"id": 2667,
					"name": "NFTokenMintFlags",
					"kind": 8,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Transaction Flags for an NFTokenMint Transaction."
							}
						]
					},
					"children": [
						{
							"id": 2668,
							"name": "tfBurnable",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If set, indicates that the minted token may be burned by the issuer even\nif the issuer does not currently hold the token. The current holder of\nthe token may always burn it."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L17"
								}
							],
							"type": {
								"type": "literal",
								"value": 1
							}
						},
						{
							"id": 2669,
							"name": "tfOnlyXRP",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If set, indicates that the token may only be offered or sold for XRP."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L21"
								}
							],
							"type": {
								"type": "literal",
								"value": 2
							}
						},
						{
							"id": 2671,
							"name": "tfTransferable",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If set, indicates that this NFT can be transferred. This flag has no\neffect if the token is being transferred from the issuer or to the\nissuer."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L32"
								}
							],
							"type": {
								"type": "literal",
								"value": 8
							}
						},
						{
							"id": 2670,
							"name": "tfTrustLine",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If set, indicates that the issuer wants a trustline to be automatically\ncreated."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L26"
								}
							],
							"type": {
								"type": "literal",
								"value": 4
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								2668,
								2669,
								2671,
								2670
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
							"line": 11,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L11"
						}
					]
				},
				{
					"id": 2693,
					"name": "OfferCreateFlags",
					"kind": 8,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Transaction Flags for an OfferCreate Transaction."
							}
						]
					},
					"children": [
						{
							"id": 2696,
							"name": "tfFillOrKill",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Treat the offer as a Fill or Kill order . Only try to match existing\noffers in the ledger, and only do so if the entire TakerPays quantity can\nbe obtained. If the fix1578 amendment is enabled and the offer cannot be\nexecuted when placed, the transaction has the result code tecKILLED;\notherwise, the transaction uses the result code tesSUCCESS even when it was\nkilled without trading any currency."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L40"
								}
							],
							"type": {
								"type": "literal",
								"value": 262144
							}
						},
						{
							"id": 2695,
							"name": "tfImmediateOrCancel",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Treat the offer as an Immediate or Cancel order. If enabled, the offer\nnever becomes a ledger object: it only tries to match existing offers in\nthe ledger. If the offer cannot match any offers immediately, it executes\n\"successfully\" without trading any currency. In this case, the transaction\nhas the result code tesSUCCESS, but creates no Offer objects in the ledger."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L31"
								}
							],
							"type": {
								"type": "literal",
								"value": 131072
							}
						},
						{
							"id": 2694,
							"name": "tfPassive",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If enabled, the offer does not consume offers that exactly match it, and\ninstead becomes an Offer object in the ledger. It still consumes offers\nthat cross it."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L23"
								}
							],
							"type": {
								"type": "literal",
								"value": 65536
							}
						},
						{
							"id": 2697,
							"name": "tfSell",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Exchange the entire TakerGets amount, even if it means obtaining more than\nthe TakerPays amount in exchange."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L45"
								}
							],
							"type": {
								"type": "literal",
								"value": 524288
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								2696,
								2695,
								2694,
								2697
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/offerCreate.ts",
							"line": 17,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L17"
						}
					]
				},
				{
					"id": 2752,
					"name": "PaymentChannelClaimFlags",
					"kind": 8,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enum representing values for PaymentChannelClaim transaction flags."
							}
						]
					},
					"children": [
						{
							"id": 2754,
							"name": "tfClose",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Request to close the channel. Only the channel source and destination\naddresses can use this flag. This flag closes the channel immediately if it\nhas no more XRP allocated to it after processing the current claim, or if\nthe destination address uses it. If the source address uses this flag when\nthe channel still holds XRP, this schedules the channel to close after\nSettleDelay seconds have passed. (Specifically, this sets the Expiration of\nthe channel to the close time of the previous ledger plus the channel's\nSettleDelay time, unless the channel already has an earlier Expiration\ntime.) If the destination address uses this flag when the channel still\nholds XRP, any XRP that remains after processing the claim is returned to\nthe source address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L31"
								}
							],
							"type": {
								"type": "literal",
								"value": 131072
							}
						},
						{
							"id": 2753,
							"name": "tfRenew",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear the channel's Expiration time. (Expiration is different from the\nchannel's immutable CancelAfter time.) Only the source address of the\npayment channel can use this flag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L17"
								}
							],
							"type": {
								"type": "literal",
								"value": 65536
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								2754,
								2753
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
							"line": 11,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L11"
						}
					]
				},
				{
					"id": 2722,
					"name": "PaymentFlags",
					"kind": 8,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enum representing values for Payment Transaction Flags."
							}
						]
					},
					"children": [
						{
							"id": 2725,
							"name": "tfLimitQuality",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Only take paths where all the conversions have an input:output ratio that\nis equal or better than the ratio of Amount:SendMax. See Limit Quality for\ndetails."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L36"
								}
							],
							"type": {
								"type": "literal",
								"value": 262144
							}
						},
						{
							"id": 2723,
							"name": "tfNoDirectRipple",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Do not use the default path; only use paths included in the Paths field.\nThis is intended to force the transaction to take arbitrage opportunities.\nMost clients do not need this."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L24"
								}
							],
							"type": {
								"type": "literal",
								"value": 65536
							}
						},
						{
							"id": 2724,
							"name": "tfPartialPayment",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the specified Amount cannot be sent without spending more than SendMax,\nreduce the received amount instead of failing outright. See Partial.\nPayments for more details."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L30"
								}
							],
							"type": {
								"type": "literal",
								"value": 131072
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								2725,
								2723,
								2724
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/payment.ts",
							"line": 18,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L18"
						}
					]
				},
				{
					"id": 2912,
					"name": "TrustSetFlags",
					"kind": 8,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enum representing values of "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "TrustSet",
								"target": 2918
							},
							{
								"kind": "text",
								"text": " transaction flags."
							}
						]
					},
					"children": [
						{
							"id": 2917,
							"name": "tfClearFreeze",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unfreeze the trust line."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L32"
								}
							],
							"type": {
								"type": "literal",
								"value": 2097152
							}
						},
						{
							"id": 2915,
							"name": "tfClearNoRipple",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disable the No Ripple flag, allowing rippling on this trust line."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L28"
								}
							],
							"type": {
								"type": "literal",
								"value": 262144
							}
						},
						{
							"id": 2916,
							"name": "tfSetFreeze",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Freeze the trust line."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L30"
								}
							],
							"type": {
								"type": "literal",
								"value": 1048576
							}
						},
						{
							"id": 2914,
							"name": "tfSetNoRipple",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable the No Ripple flag, which blocks rippling between two trust lines.\nof the same currency if this flag is enabled on both."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L26"
								}
							],
							"type": {
								"type": "literal",
								"value": 131072
							}
						},
						{
							"id": 2913,
							"name": "tfSetfAuth",
							"kind": 16,
							"kindString": "Enumeration Member",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Authorize the other party to hold currency issued by this account. (No\neffect unless using the asfRequireAuth AccountSet flag.) Cannot be unset."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L21"
								}
							],
							"type": {
								"type": "literal",
								"value": 65536
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								2917,
								2915,
								2916,
								2914,
								2913
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/trustSet.ts",
							"line": 16,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L16"
						}
					]
				},
				{
					"id": 98,
					"name": "BroadcastClient",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Client that can rely on multiple different servers."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "since version 2.2.0.\nWill be deleted in version 3.0.0.\n\nCurrently this implementation does not provide better reliability.\nTo get better reliability, implement reconnect/error handling logic\nand choose a reliable endpoint.\n\nIf you need the ability to fall-back to different endpoints, consider\nusing [xrpl-client](https://github.com/XRPL-Labs/xrpl-client/)"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 99,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/BroadcastClient.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/BroadcastClient.ts#L28"
								}
							],
							"signatures": [
								{
									"id": 100,
									"name": "new BroadcastClient",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates a new BroadcastClient."
											}
										]
									},
									"parameters": [
										{
											"id": 101,
											"name": "servers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An array of names of servers."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 102,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Options for the clients."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 667,
												"name": "ClientOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 98,
										"name": "BroadcastClient"
									},
									"overwrites": {
										"type": "reference",
										"id": 386,
										"name": "Client.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 385,
								"name": "Client.constructor"
							}
						},
						{
							"id": 292,
							"name": "autofill",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 666,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L666"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 293,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/autofill.ts",
											"line": 70,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/autofill.ts#L70"
										}
									],
									"signatures": [
										{
											"id": 294,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"typeParameter": [
												{
													"id": 295,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2355,
														"name": "Transaction"
													}
												}
											],
											"parameters": [
												{
													"id": 296,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 297,
													"name": "transaction",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 295,
														"name": "T"
													}
												},
												{
													"id": 298,
													"name": "signersCount",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 295,
														"name": "T"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "autofill",
							"inheritedFrom": {
								"type": "reference",
								"id": 575,
								"name": "Client.autofill"
							}
						},
						{
							"id": 110,
							"name": "buildVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rippled Version used by the server this client is connected to"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 218,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L218"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 393,
								"name": "Client.buildVersion"
							}
						},
						{
							"id": 106,
							"name": "connection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 190,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L190"
								}
							],
							"type": {
								"type": "reference",
								"name": "Connection"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 389,
								"name": "Client.connection"
							}
						},
						{
							"id": 107,
							"name": "feeCushion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Factor to multiply estimated fee by to provide a cushion in case the\nrequired fee rises during submission of a transaction. Defaults to 1.2."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 198,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L198"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 390,
								"name": "Client.feeCushion"
							}
						},
						{
							"id": 370,
							"name": "fundWallet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 705,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L705"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 371,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/Wallet/fundWallet.ts",
											"line": 89,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L89"
										}
									],
									"signatures": [
										{
											"id": 372,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 373,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 374,
													"name": "wallet",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 691,
																"name": "Wallet"
															}
														]
													}
												},
												{
													"id": 375,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 376,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 379,
																	"name": "amount",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/fundWallet.ts",
																			"line": 95,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L95"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 377,
																	"name": "faucetHost",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/fundWallet.ts",
																			"line": 93,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L93"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 378,
																	"name": "faucetPath",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/fundWallet.ts",
																			"line": 94,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L94"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 380,
																	"name": "usageContext",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/fundWallet.ts",
																			"line": 96,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L96"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		379,
																		377,
																		378,
																		380
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/fundWallet.ts",
																	"line": 92,
																	"character": 12,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L92"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 381,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 383,
																	"name": "balance",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/fundWallet.ts",
																			"line": 100,
																			"character": 2,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L100"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 382,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/fundWallet.ts",
																			"line": 99,
																			"character": 2,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L99"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 691,
																		"name": "Wallet"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		383,
																		382
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/fundWallet.ts",
																	"line": 98,
																	"character": 11,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L98"
																}
															]
														}
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "fundWallet",
							"inheritedFrom": {
								"type": "reference",
								"id": 653,
								"name": "Client.fundWallet"
							}
						},
						{
							"id": 336,
							"name": "getBalances",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 690,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L690"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 337,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/balances.ts",
											"line": 80,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L80"
										}
									],
									"signatures": [
										{
											"id": 338,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 339,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 340,
													"name": "address",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 341,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 342,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 343,
																	"name": "ledger_hash",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/balances.ts",
																			"line": 84,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L84"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 344,
																	"name": "ledger_index",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/balances.ts",
																			"line": 85,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L85"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 2990,
																		"name": "LedgerIndex"
																	}
																},
																{
																	"id": 346,
																	"name": "limit",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/balances.ts",
																			"line": 87,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L87"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 345,
																	"name": "peer",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/balances.ts",
																			"line": 86,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L86"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		343,
																		344,
																		346,
																		345
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/sugar/balances.ts",
																	"line": 83,
																	"character": 11,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L83"
																}
															]
														}
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 347,
																"name": "__type",
																"kind": 65536,
																"kindString": "Type literal",
																"flags": {},
																"children": [
																	{
																		"id": 349,
																		"name": "currency",
																		"kind": 1024,
																		"kindString": "Property",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "xrpl/src/sugar/balances.ts",
																				"line": 90,
																				"character": 25,
																				"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L90"
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 350,
																		"name": "issuer",
																		"kind": 1024,
																		"kindString": "Property",
																		"flags": {
																			"isOptional": true
																		},
																		"sources": [
																			{
																				"fileName": "xrpl/src/sugar/balances.ts",
																				"line": 90,
																				"character": 43,
																				"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L90"
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 348,
																		"name": "value",
																		"kind": 1024,
																		"kindString": "Property",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "xrpl/src/sugar/balances.ts",
																				"line": 90,
																				"character": 10,
																				"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L90"
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			349,
																			350,
																			348
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "xrpl/src/sugar/balances.ts",
																		"line": 90,
																		"character": 8,
																		"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L90"
																	}
																]
															}
														}
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "getBalances",
							"inheritedFrom": {
								"type": "reference",
								"id": 619,
								"name": "Client.getBalances"
							}
						},
						{
							"id": 366,
							"name": "getLedgerIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 700,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L700"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 367,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/getLedgerIndex.ts",
											"line": 9,
											"character": 30,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getLedgerIndex.ts#L9"
										}
									],
									"signatures": [
										{
											"id": 368,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 369,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "getLedgerIndex",
							"inheritedFrom": {
								"type": "reference",
								"id": 649,
								"name": "Client.getLedgerIndex"
							}
						},
						{
							"id": 351,
							"name": "getOrderbook",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 695,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L695"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 352,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/getOrderbook.ts",
											"line": 52,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L52"
										}
									],
									"signatures": [
										{
											"id": 353,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 354,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 355,
													"name": "currency1",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1725,
														"name": "BookOfferCurrency"
													}
												},
												{
													"id": 356,
													"name": "currency2",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1725,
														"name": "BookOfferCurrency"
													}
												},
												{
													"id": 357,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 358,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 361,
																	"name": "ledger_hash",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/getOrderbook.ts",
																			"line": 59,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L59"
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																},
																{
																	"id": 360,
																	"name": "ledger_index",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/getOrderbook.ts",
																			"line": 58,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L58"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 2990,
																		"name": "LedgerIndex"
																	}
																},
																{
																	"id": 359,
																	"name": "limit",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/getOrderbook.ts",
																			"line": 57,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L57"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 362,
																	"name": "taker",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/getOrderbook.ts",
																			"line": 60,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L60"
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		361,
																		360,
																		359,
																		362
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/sugar/getOrderbook.ts",
																	"line": 56,
																	"character": 11,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L56"
																}
															]
														}
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 363,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 364,
																	"name": "buy",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/getOrderbook.ts",
																			"line": 63,
																			"character": 2,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L63"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 1707,
																			"name": "BookOffer"
																		}
																	}
																},
																{
																	"id": 365,
																	"name": "sell",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/getOrderbook.ts",
																			"line": 64,
																			"character": 2,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L64"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 1707,
																			"name": "BookOffer"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		364,
																		365
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/sugar/getOrderbook.ts",
																	"line": 62,
																	"character": 11,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L62"
																}
															]
														}
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "getOrderbook",
							"inheritedFrom": {
								"type": "reference",
								"id": 634,
								"name": "Client.getOrderbook"
							}
						},
						{
							"id": 327,
							"name": "getXrpBalance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 685,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L685"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 328,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/balances.ts",
											"line": 46,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L46"
										}
									],
									"signatures": [
										{
											"id": 329,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 330,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 331,
													"name": "address",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 332,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 333,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 334,
																	"name": "ledger_hash",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/balances.ts",
																			"line": 50,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L50"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 335,
																	"name": "ledger_index",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/balances.ts",
																			"line": 51,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L51"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 2990,
																		"name": "LedgerIndex"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		334,
																		335
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/sugar/balances.ts",
																	"line": 49,
																	"character": 11,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L49"
																}
															]
														}
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "getXrpBalance",
							"inheritedFrom": {
								"type": "reference",
								"id": 610,
								"name": "Client.getXrpBalance"
							}
						},
						{
							"id": 108,
							"name": "maxFeeXRP",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Maximum transaction cost to allow, in decimal XRP. Must be a string-encoded\nnumber. Defaults to '2'."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 206,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L206"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 391,
								"name": "Client.maxFeeXRP"
							}
						},
						{
							"id": 109,
							"name": "networkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Network ID of the server this client is connected to"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 212,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L212"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 392,
								"name": "Client.networkID"
							}
						},
						{
							"id": 320,
							"name": "prepareTransaction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 680,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L680"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 321,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/autofill.ts",
											"line": 70,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/autofill.ts#L70"
										}
									],
									"signatures": [
										{
											"id": 322,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@deprecated",
														"content": [
															{
																"kind": "text",
																"text": "Use autofill instead, provided for users familiar with v1"
															}
														]
													}
												]
											},
											"typeParameter": [
												{
													"id": 323,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2355,
														"name": "Transaction"
													}
												}
											],
											"parameters": [
												{
													"id": 324,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 325,
													"name": "transaction",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 295,
														"name": "T"
													}
												},
												{
													"id": 326,
													"name": "signersCount",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 295,
														"name": "T"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "autofill",
							"inheritedFrom": {
								"type": "reference",
								"id": 603,
								"name": "Client.prepareTransaction"
							}
						},
						{
							"id": 299,
							"name": "submit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 671,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L671"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 300,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/submit.ts",
											"line": 36,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L36"
										}
									],
									"signatures": [
										{
											"id": 301,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 302,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 303,
													"name": "transaction",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"id": 2355,
																"name": "Transaction"
															}
														]
													}
												},
												{
													"id": 304,
													"name": "opts",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 305,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 306,
																	"name": "autofill",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/submit.ts",
																			"line": 41,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L41"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 307,
																	"name": "failHard",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/submit.ts",
																			"line": 43,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L43"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 308,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/submit.ts",
																			"line": 45,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L45"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 691,
																		"name": "Wallet"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		306,
																		307,
																		308
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/sugar/submit.ts",
																	"line": 39,
																	"character": 9,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L39"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1606,
														"name": "SubmitResponse"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "submit",
							"inheritedFrom": {
								"type": "reference",
								"id": 582,
								"name": "Client.submit"
							}
						},
						{
							"id": 309,
							"name": "submitAndWait",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 675,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L675"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 310,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/submit.ts",
											"line": 108,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L108"
										}
									],
									"signatures": [
										{
											"id": 311,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"typeParameter": [
												{
													"id": 312,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2355,
														"name": "Transaction"
													},
													"default": {
														"type": "reference",
														"id": 2355,
														"name": "Transaction"
													}
												}
											],
											"parameters": [
												{
													"id": 313,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 314,
													"name": "transaction",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"id": 312,
																"name": "T"
															}
														]
													}
												},
												{
													"id": 315,
													"name": "opts",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 316,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 317,
																	"name": "autofill",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/submit.ts",
																			"line": 113,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L113"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 318,
																	"name": "failHard",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/submit.ts",
																			"line": 115,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L115"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 319,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/submit.ts",
																			"line": 117,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L117"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 691,
																		"name": "Wallet"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		317,
																		318,
																		319
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/sugar/submit.ts",
																	"line": 111,
																	"character": 9,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L111"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1680,
														"typeArguments": [
															{
																"type": "reference",
																"id": 312,
																"name": "T"
															}
														],
														"name": "TxResponse"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "submitAndWait",
							"inheritedFrom": {
								"type": "reference",
								"id": 592,
								"name": "Client.submitAndWait"
							}
						},
						{
							"id": 111,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 298,
									"character": 13,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L298"
								}
							],
							"getSignature": {
								"id": 112,
								"name": "url",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Get the url that the client is connected to."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": [
												{
													"kind": "text",
													"text": "The URL of the server this client is connected to."
												}
											]
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "string"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "Client.url"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 394,
								"name": "Client.url"
							}
						},
						{
							"id": 286,
							"name": "connect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 618,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L618"
								}
							],
							"signatures": [
								{
									"id": 287,
									"name": "connect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Tells the Client instance to connect to its rippled server."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "Client.connect() establishes a connection between a Client object and the server.\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst { Client } = require('xrpl')\nconst client = new Client('wss://s.altnet.rippletest.net:51233')\nawait client.connect()\n// do something with the client\nawait client.disconnect()\n```"
													},
													{
														"kind": "text",
														"text": "\nIf you open a client connection, be sure to close it with "
													},
													{
														"kind": "code",
														"text": "`await client.disconnect()`"
													},
													{
														"kind": "text",
														"text": "\nbefore exiting your application."
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A promise that resolves with a void value when a connection is established."
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 570,
										"name": "Client.connect"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 569,
								"name": "Client.connect"
							}
						},
						{
							"id": 288,
							"name": "disconnect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 645,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L645"
								}
							],
							"signatures": [
								{
									"id": 289,
									"name": "disconnect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disconnects the XRPL client from the server and cancels all pending requests and subscriptions. Call when\nyou want to disconnect the client from the server, such as when you're finished using the client or when you\nneed to switch to a different server."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To use the disconnect() method, you first need to create a new Client object and connect it to a server:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst { Client } = require('xrpl')\nconst client = new Client('wss://s.altnet.rippletest.net:51233')\nawait client.connect()\n// do something with the client\nawait client.disconnect()\n```"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A promise that resolves with a void value when a connection is destroyed."
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 572,
										"name": "Client.disconnect"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 571,
								"name": "Client.disconnect"
							}
						},
						{
							"id": 284,
							"name": "getServerInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 586,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L586"
								}
							],
							"signatures": [
								{
									"id": 285,
									"name": "getServerInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get networkID and buildVersion from server_info"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 568,
										"name": "Client.getServerInfo"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 567,
								"name": "Client.getServerInfo"
							}
						},
						{
							"id": 290,
							"name": "isConnected",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 659,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L659"
								}
							],
							"signatures": [
								{
									"id": 291,
									"name": "isConnected",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Checks if the Client instance is connected to its rippled server."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Whether the client instance is connected."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 574,
										"name": "Client.isConnected"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 573,
								"name": "Client.isConnected"
							}
						},
						{
							"id": 209,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 455,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L455"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 456,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L456"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 457,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L457"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 461,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L461"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 465,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L465"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 469,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L469"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 473,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L473"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 477,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L477"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 481,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L481"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 483,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L483"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 492,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L492"
								}
							],
							"signatures": [
								{
									"id": 210,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst api = new Client('wss://s.altnet.rippletest.net:51233')\n\napi.on('transactions', (tx: TransactionStream) => {\n console.log(\"Received Transaction\")\n console.log(tx)\n})\n\nawait api.connect()\nconst response = await api.request({\n    command: 'subscribe',\n    streams: ['transactions_proposed']\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 211,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "connected"
											}
										},
										{
											"id": 212,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 213,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 455,
															"character": 42,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L455"
														}
													],
													"signatures": [
														{
															"id": 214,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 98,
										"name": "BroadcastClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 493,
										"name": "Client.on"
									}
								},
								{
									"id": 215,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 216,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "disconnected"
											}
										},
										{
											"id": 217,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 218,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 456,
															"character": 45,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L456"
														}
													],
													"signatures": [
														{
															"id": 219,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 220,
																	"name": "code",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 98,
										"name": "BroadcastClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 498,
										"name": "Client.on"
									}
								},
								{
									"id": 221,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 222,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "ledgerClosed"
											}
										},
										{
											"id": 223,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 224,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 459,
															"character": 14,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L459"
														}
													],
													"signatures": [
														{
															"id": 225,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 226,
																	"name": "ledger",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 1894,
																		"name": "LedgerStream"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 98,
										"name": "BroadcastClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 504,
										"name": "Client.on"
									}
								},
								{
									"id": 227,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 228,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "validationReceived"
											}
										},
										{
											"id": 229,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 230,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 463,
															"character": 14,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L463"
														}
													],
													"signatures": [
														{
															"id": 231,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 232,
																	"name": "validation",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 1914,
																		"name": "ValidationStream"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 98,
										"name": "BroadcastClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 510,
										"name": "Client.on"
									}
								},
								{
									"id": 233,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 234,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "transaction"
											}
										},
										{
											"id": 235,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 236,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 467,
															"character": 14,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L467"
														}
													],
													"signatures": [
														{
															"id": 237,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 238,
																	"name": "tx",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 1931,
																		"name": "TransactionStream"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 98,
										"name": "BroadcastClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 516,
										"name": "Client.on"
									}
								},
								{
									"id": 239,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 240,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "peerStatusChange"
											}
										},
										{
											"id": 241,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 242,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 471,
															"character": 14,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L471"
														}
													],
													"signatures": [
														{
															"id": 243,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 244,
																	"name": "status",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 1959,
																		"name": "PeerStatusStream"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 98,
										"name": "BroadcastClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 522,
										"name": "Client.on"
									}
								},
								{
									"id": 245,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 246,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "consensusPhase"
											}
										},
										{
											"id": 247,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 248,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 475,
															"character": 14,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L475"
														}
													],
													"signatures": [
														{
															"id": 249,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 250,
																	"name": "phase",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 1979,
																		"name": "ConsensusStream"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 98,
										"name": "BroadcastClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 528,
										"name": "Client.on"
									}
								},
								{
									"id": 251,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 252,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "manifestReceived"
											}
										},
										{
											"id": 253,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 254,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 479,
															"character": 14,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L479"
														}
													],
													"signatures": [
														{
															"id": 255,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 256,
																	"name": "manifest",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 2039,
																		"name": "ManifestResponse"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 98,
										"name": "BroadcastClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 534,
										"name": "Client.on"
									}
								},
								{
									"id": 257,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 258,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "path_find"
											}
										},
										{
											"id": 259,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 260,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 481,
															"character": 42,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L481"
														}
													],
													"signatures": [
														{
															"id": 261,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 262,
																	"name": "path",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 1947,
																		"name": "PathFindStream"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 98,
										"name": "BroadcastClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 540,
										"name": "Client.on"
									}
								},
								{
									"id": 263,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 264,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 265,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 266,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 483,
															"character": 38,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L483"
														}
													],
													"signatures": [
														{
															"id": 267,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 268,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 98,
										"name": "BroadcastClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 546,
										"name": "Client.on"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 492,
								"name": "Client.on"
							}
						},
						{
							"id": 113,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 305,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L305"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 308,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L308"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 311,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L311"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 312,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L312"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 313,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L313"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 314,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L314"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 317,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L317"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 318,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L318"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 319,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L319"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 320,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L320"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 321,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L321"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 324,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L324"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 325,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L325"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 328,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L328"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 329,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L329"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 330,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L330"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 331,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L331"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 332,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L332"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 333,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L333"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 334,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L334"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 335,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L335"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 336,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L336"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 337,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L337"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 338,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L338"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 339,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L339"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 340,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L340"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 341,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L341"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 342,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L342"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 345,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L345"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 346,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L346"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 347,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L347"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 348,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L348"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 351,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L351"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 352,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L352"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 353,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L353"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 356,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L356"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 357,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L357"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 368,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L368"
								}
							],
							"signatures": [
								{
									"id": 114,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 115,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1087,
												"name": "AccountChannelsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1097,
												"name": "AccountChannelsResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 397,
										"name": "Client.request"
									}
								},
								{
									"id": 116,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 117,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1114,
												"name": "AccountCurrenciesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1122,
												"name": "AccountCurrenciesResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 399,
										"name": "Client.request"
									}
								},
								{
									"id": 118,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 119,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1151,
												"name": "AccountInfoRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1161,
												"name": "AccountInfoResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 401,
										"name": "Client.request"
									}
								},
								{
									"id": 120,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 121,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1192,
												"name": "AccountLinesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1202,
												"name": "AccountLinesResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 403,
										"name": "Client.request"
									}
								},
								{
									"id": 122,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 123,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1239,
												"name": "AccountNFTsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1248,
												"name": "AccountNFTsResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 405,
										"name": "Client.request"
									}
								},
								{
									"id": 124,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 125,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1266,
												"name": "AccountObjectsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1277,
												"name": "AccountObjectsResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 407,
										"name": "Client.request"
									}
								},
								{
									"id": 126,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 127,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1302,
												"name": "AccountOffersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1312,
												"name": "AccountOffersResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 409,
										"name": "Client.request"
									}
								},
								{
									"id": 128,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 129,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1328,
												"name": "AccountTxRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1341,
												"name": "AccountTxResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 411,
										"name": "Client.request"
									}
								},
								{
									"id": 130,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 131,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1697,
												"name": "BookOffersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1728,
												"name": "BookOffersResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 413,
										"name": "Client.request"
									}
								},
								{
									"id": 132,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 133,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1847,
												"name": "ChannelVerifyRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1855,
												"name": "ChannelVerifyResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 415,
										"name": "Client.request"
									}
								},
								{
									"id": 134,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 135,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1743,
												"name": "DepositAuthorizedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1751,
												"name": "DepositAuthorizedResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 417,
										"name": "Client.request"
									}
								},
								{
									"id": 136,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 137,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2003,
												"name": "FeeRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2007,
												"name": "FeeResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 419,
										"name": "Client.request"
									}
								},
								{
									"id": 138,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 139,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1367,
												"name": "GatewayBalancesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1376,
												"name": "GatewayBalancesResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 421,
										"name": "Client.request"
									}
								},
								{
									"id": 140,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 141,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1425,
												"name": "LedgerRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1438,
												"name": "LedgerResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 423,
										"name": "Client.request"
									}
								},
								{
									"id": 142,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 143,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1485,
												"name": "LedgerClosedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1489,
												"name": "LedgerClosedResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 425,
										"name": "Client.request"
									}
								},
								{
									"id": 144,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 145,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1501,
												"name": "LedgerCurrentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1505,
												"name": "LedgerCurrentResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 427,
										"name": "Client.request"
									}
								},
								{
									"id": 146,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 147,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1516,
												"name": "LedgerDataRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1530,
												"name": "LedgerDataResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 429,
										"name": "Client.request"
									}
								},
								{
									"id": 148,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 149,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1548,
												"name": "LedgerEntryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1585,
												"name": "LedgerEntryResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 431,
										"name": "Client.request"
									}
								},
								{
									"id": 150,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 151,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2034,
												"name": "ManifestRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2039,
												"name": "ManifestResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 433,
										"name": "Client.request"
									}
								},
								{
									"id": 152,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 153,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2244,
												"name": "NFTBuyOffersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2251,
												"name": "NFTBuyOffersResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 435,
										"name": "Client.request"
									}
								},
								{
									"id": 154,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 155,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2263,
												"name": "NFTSellOffersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2270,
												"name": "NFTSellOffersResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 437,
										"name": "Client.request"
									}
								},
								{
									"id": 156,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 157,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2282,
												"name": "NFTInfoRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2289,
												"name": "NFTInfoResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 439,
										"name": "Client.request"
									}
								},
								{
									"id": 158,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 159,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2298,
												"name": "NFTHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2311,
												"name": "NFTHistoryResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 441,
										"name": "Client.request"
									}
								},
								{
									"id": 160,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 161,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1402,
												"name": "NoRippleCheckRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1412,
												"name": "NoRippleCheckResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 443,
										"name": "Client.request"
									}
								},
								{
									"id": 162,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 163,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1768,
												"name": "PathFindRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1793,
												"name": "PathFindResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 445,
										"name": "Client.request"
									}
								},
								{
									"id": 164,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 165,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2204,
												"name": "PingRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2208,
												"name": "PingResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 447,
										"name": "Client.request"
									}
								},
								{
									"id": 166,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 167,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2220,
												"name": "RandomRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2224,
												"name": "RandomResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 449,
										"name": "Client.request"
									}
								},
								{
									"id": 168,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 169,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1814,
												"name": "RipplePathFindRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1825,
												"name": "RipplePathFindResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 451,
										"name": "Client.request"
									}
								},
								{
									"id": 170,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 171,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2057,
												"name": "ServerInfoRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2061,
												"name": "ServerInfoResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 453,
										"name": "Client.request"
									}
								},
								{
									"id": 172,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 173,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2129,
												"name": "ServerStateRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2133,
												"name": "ServerStateResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 455,
										"name": "Client.request"
									}
								},
								{
									"id": 174,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 175,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1600,
												"name": "SubmitRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1606,
												"name": "SubmitResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 457,
										"name": "Client.request"
									}
								},
								{
									"id": 176,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 177,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1630,
												"name": "SubmitMultisignedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1636,
												"name": "SubmitMultisignedResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 459,
										"name": "Client.request"
									}
								},
								{
									"id": 178,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 179,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1866,
												"name": "SubscribeRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1877,
												"name": "SubscribeResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 461,
										"name": "Client.request"
									}
								},
								{
									"id": 180,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 181,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1982,
												"name": "UnsubscribeRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1990,
												"name": "UnsubscribeResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 463,
										"name": "Client.request"
									}
								},
								{
									"id": 182,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 183,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1651,
												"name": "TransactionEntryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1658,
												"name": "TransactionEntryResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 465,
										"name": "Client.request"
									}
								},
								{
									"id": 184,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 185,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1672,
												"name": "TxRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1680,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2355,
														"name": "Transaction"
													}
												],
												"name": "TxResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 467,
										"name": "Client.request"
									}
								},
								{
									"id": 186,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"typeParameter": [
										{
											"id": 187,
											"name": "R",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1050,
												"name": "BaseRequest"
											}
										},
										{
											"id": 188,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1056,
												"name": "BaseResponse"
											}
										}
									],
									"parameters": [
										{
											"id": 189,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 187,
												"name": "R"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 188,
												"name": "T"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 469,
										"name": "Client.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 396,
								"name": "Client.request"
							}
						},
						{
							"id": 269,
							"name": "requestAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 499,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L499"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 502,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L502"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 505,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L505"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 508,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L508"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 511,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L511"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 512,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L512"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 513,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L513"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 532,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L532"
								}
							],
							"signatures": [
								{
									"id": 270,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 271,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1087,
												"name": "AccountChannelsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1097,
													"name": "AccountChannelsResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 553,
										"name": "Client.requestAll"
									}
								},
								{
									"id": 272,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes multiple paged requests to the client to return a given number of\nresources. Multiple paged requests will be made until the "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": "\nnumber of resources is reached (if no "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": " is provided, a single request\nwill be made).\n\nIf the command is unknown, an additional "
											},
											{
												"kind": "code",
												"text": "`collect`"
											},
											{
												"kind": "text",
												"text": " property is required to\nknow which response key contains the array of resources.\n\nNOTE: This command is used by existing methods and is not recommended for\ngeneral use. Instead, use rippled's built-in pagination and make multiple\nrequests as needed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The array of all responses."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if there is no collection key (either from a known command or for the unknown command)."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 273,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1192,
												"name": "AccountLinesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1202,
													"name": "AccountLinesResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 555,
										"name": "Client.requestAll"
									}
								},
								{
									"id": 274,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes multiple paged requests to the client to return a given number of\nresources. Multiple paged requests will be made until the "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": "\nnumber of resources is reached (if no "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": " is provided, a single request\nwill be made).\n\nIf the command is unknown, an additional "
											},
											{
												"kind": "code",
												"text": "`collect`"
											},
											{
												"kind": "text",
												"text": " property is required to\nknow which response key contains the array of resources.\n\nNOTE: This command is used by existing methods and is not recommended for\ngeneral use. Instead, use rippled's built-in pagination and make multiple\nrequests as needed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The array of all responses."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if there is no collection key (either from a known command or for the unknown command)."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 275,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1266,
												"name": "AccountObjectsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1277,
													"name": "AccountObjectsResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 557,
										"name": "Client.requestAll"
									}
								},
								{
									"id": 276,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes multiple paged requests to the client to return a given number of\nresources. Multiple paged requests will be made until the "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": "\nnumber of resources is reached (if no "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": " is provided, a single request\nwill be made).\n\nIf the command is unknown, an additional "
											},
											{
												"kind": "code",
												"text": "`collect`"
											},
											{
												"kind": "text",
												"text": " property is required to\nknow which response key contains the array of resources.\n\nNOTE: This command is used by existing methods and is not recommended for\ngeneral use. Instead, use rippled's built-in pagination and make multiple\nrequests as needed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The array of all responses."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if there is no collection key (either from a known command or for the unknown command)."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 277,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1302,
												"name": "AccountOffersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1312,
													"name": "AccountOffersResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 559,
										"name": "Client.requestAll"
									}
								},
								{
									"id": 278,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes multiple paged requests to the client to return a given number of\nresources. Multiple paged requests will be made until the "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": "\nnumber of resources is reached (if no "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": " is provided, a single request\nwill be made).\n\nIf the command is unknown, an additional "
											},
											{
												"kind": "code",
												"text": "`collect`"
											},
											{
												"kind": "text",
												"text": " property is required to\nknow which response key contains the array of resources.\n\nNOTE: This command is used by existing methods and is not recommended for\ngeneral use. Instead, use rippled's built-in pagination and make multiple\nrequests as needed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The array of all responses."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if there is no collection key (either from a known command or for the unknown command)."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 279,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1328,
												"name": "AccountTxRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1341,
													"name": "AccountTxResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 561,
										"name": "Client.requestAll"
									}
								},
								{
									"id": 280,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes multiple paged requests to the client to return a given number of\nresources. Multiple paged requests will be made until the "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": "\nnumber of resources is reached (if no "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": " is provided, a single request\nwill be made).\n\nIf the command is unknown, an additional "
											},
											{
												"kind": "code",
												"text": "`collect`"
											},
											{
												"kind": "text",
												"text": " property is required to\nknow which response key contains the array of resources.\n\nNOTE: This command is used by existing methods and is not recommended for\ngeneral use. Instead, use rippled's built-in pagination and make multiple\nrequests as needed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The array of all responses."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if there is no collection key (either from a known command or for the unknown command)."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 281,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1697,
												"name": "BookOffersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1728,
													"name": "BookOffersResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 563,
										"name": "Client.requestAll"
									}
								},
								{
									"id": 282,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes multiple paged requests to the client to return a given number of\nresources. Multiple paged requests will be made until the "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": "\nnumber of resources is reached (if no "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": " is provided, a single request\nwill be made).\n\nIf the command is unknown, an additional "
											},
											{
												"kind": "code",
												"text": "`collect`"
											},
											{
												"kind": "text",
												"text": " property is required to\nknow which response key contains the array of resources.\n\nNOTE: This command is used by existing methods and is not recommended for\ngeneral use. Instead, use rippled's built-in pagination and make multiple\nrequests as needed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The array of all responses."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if there is no collection key (either from a known command or for the unknown command)."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 283,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1516,
												"name": "LedgerDataRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1530,
													"name": "LedgerDataResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 565,
										"name": "Client.requestAll"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 552,
								"name": "Client.requestAll"
							}
						},
						{
							"id": 190,
							"name": "requestNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 389,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L389"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 393,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L393"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 397,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L397"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 401,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L401"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 405,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L405"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 409,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L409"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 420,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L420"
								}
							],
							"signatures": [
								{
									"id": 191,
									"name": "requestNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 192,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1087,
												"name": "AccountChannelsRequest"
											}
										},
										{
											"id": 193,
											"name": "resp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1097,
												"name": "AccountChannelsResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1097,
												"name": "AccountChannelsResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 474,
										"name": "Client.requestNextPage"
									}
								},
								{
									"id": 194,
									"name": "requestNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Requests the next page of data."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response with the next page of data."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 195,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Request to send."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1192,
												"name": "AccountLinesRequest"
											}
										},
										{
											"id": 196,
											"name": "resp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Response with the marker to use in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1202,
												"name": "AccountLinesResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1202,
												"name": "AccountLinesResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 477,
										"name": "Client.requestNextPage"
									}
								},
								{
									"id": 197,
									"name": "requestNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Requests the next page of data."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response with the next page of data."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 198,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Request to send."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1266,
												"name": "AccountObjectsRequest"
											}
										},
										{
											"id": 199,
											"name": "resp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Response with the marker to use in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1277,
												"name": "AccountObjectsResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1277,
												"name": "AccountObjectsResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 480,
										"name": "Client.requestNextPage"
									}
								},
								{
									"id": 200,
									"name": "requestNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Requests the next page of data."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response with the next page of data."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 201,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Request to send."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1302,
												"name": "AccountOffersRequest"
											}
										},
										{
											"id": 202,
											"name": "resp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Response with the marker to use in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1312,
												"name": "AccountOffersResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1312,
												"name": "AccountOffersResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 483,
										"name": "Client.requestNextPage"
									}
								},
								{
									"id": 203,
									"name": "requestNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Requests the next page of data."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response with the next page of data."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 204,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Request to send."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1328,
												"name": "AccountTxRequest"
											}
										},
										{
											"id": 205,
											"name": "resp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Response with the marker to use in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1341,
												"name": "AccountTxResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1341,
												"name": "AccountTxResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 486,
										"name": "Client.requestNextPage"
									}
								},
								{
									"id": 206,
									"name": "requestNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Requests the next page of data."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response with the next page of data."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 207,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Request to send."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1516,
												"name": "LedgerDataRequest"
											}
										},
										{
											"id": 208,
											"name": "resp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Response with the marker to use in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1530,
												"name": "LedgerDataResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1530,
												"name": "LedgerDataResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 489,
										"name": "Client.requestNextPage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 473,
								"name": "Client.requestNextPage"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								99
							]
						},
						{
							"title": "Properties",
							"children": [
								292,
								110,
								106,
								107,
								370,
								336,
								366,
								351,
								327,
								108,
								109,
								320,
								299,
								309
							]
						},
						{
							"title": "Accessors",
							"children": [
								111
							]
						},
						{
							"title": "Methods",
							"children": [
								286,
								288,
								284,
								290,
								209,
								113,
								269,
								190
							]
						}
					],
					"categories": [
						{
							"title": "Constructor",
							"children": [
								99
							]
						},
						{
							"title": "Abstraction",
							"children": [
								336,
								366,
								351,
								327
							]
						},
						{
							"title": "CATEGORY",
							"children": [
								110,
								106,
								109,
								320,
								284
							]
						},
						{
							"title": "Core",
							"children": [
								292,
								299,
								309
							]
						},
						{
							"title": "Faucet",
							"children": [
								370
							]
						},
						{
							"title": "Fee",
							"children": [
								107,
								108
							]
						},
						{
							"title": "Network",
							"children": [
								111,
								286,
								288,
								290,
								209,
								113,
								269,
								190
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/client/BroadcastClient.ts",
							"line": 18,
							"character": 13,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/BroadcastClient.ts#L18"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 384,
							"name": "Client"
						}
					]
				},
				{
					"id": 384,
					"name": "Client",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Client for interacting with rippled servers."
							}
						]
					},
					"children": [
						{
							"id": 385,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 228,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L228"
								}
							],
							"signatures": [
								{
									"id": 386,
									"name": "new Client",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates a new Client with a websocket connection to a rippled server."
											}
										]
									},
									"parameters": [
										{
											"id": 387,
											"name": "server",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "URL of the server to connect to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 388,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Options for client settings."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 667,
												"name": "ClientOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 384,
										"name": "Client"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.constructor"
							}
						},
						{
							"id": 575,
							"name": "autofill",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 666,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L666"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 576,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/autofill.ts",
											"line": 70,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/autofill.ts#L70"
										}
									],
									"signatures": [
										{
											"id": 577,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"typeParameter": [
												{
													"id": 578,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2355,
														"name": "Transaction"
													}
												}
											],
											"parameters": [
												{
													"id": 579,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 580,
													"name": "transaction",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 295,
														"name": "T"
													}
												},
												{
													"id": 581,
													"name": "signersCount",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 295,
														"name": "T"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "autofill"
						},
						{
							"id": 393,
							"name": "buildVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rippled Version used by the server this client is connected to"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 218,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L218"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 389,
							"name": "connection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 190,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L190"
								}
							],
							"type": {
								"type": "reference",
								"name": "Connection"
							}
						},
						{
							"id": 390,
							"name": "feeCushion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Factor to multiply estimated fee by to provide a cushion in case the\nrequired fee rises during submission of a transaction. Defaults to 1.2."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 198,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L198"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 653,
							"name": "fundWallet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 705,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L705"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 654,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/Wallet/fundWallet.ts",
											"line": 89,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L89"
										}
									],
									"signatures": [
										{
											"id": 655,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 656,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 657,
													"name": "wallet",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 691,
																"name": "Wallet"
															}
														]
													}
												},
												{
													"id": 658,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 659,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 662,
																	"name": "amount",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/fundWallet.ts",
																			"line": 95,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L95"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 660,
																	"name": "faucetHost",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/fundWallet.ts",
																			"line": 93,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L93"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 661,
																	"name": "faucetPath",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/fundWallet.ts",
																			"line": 94,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L94"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 663,
																	"name": "usageContext",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/fundWallet.ts",
																			"line": 96,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L96"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		662,
																		660,
																		661,
																		663
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/fundWallet.ts",
																	"line": 92,
																	"character": 12,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L92"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 664,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 666,
																	"name": "balance",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/fundWallet.ts",
																			"line": 100,
																			"character": 2,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L100"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 665,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/fundWallet.ts",
																			"line": 99,
																			"character": 2,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L99"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 691,
																		"name": "Wallet"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		666,
																		665
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/fundWallet.ts",
																	"line": 98,
																	"character": 11,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/fundWallet.ts#L98"
																}
															]
														}
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "fundWallet"
						},
						{
							"id": 619,
							"name": "getBalances",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 690,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L690"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 620,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/balances.ts",
											"line": 80,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L80"
										}
									],
									"signatures": [
										{
											"id": 621,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 622,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 623,
													"name": "address",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 624,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 625,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 626,
																	"name": "ledger_hash",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/balances.ts",
																			"line": 84,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L84"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 627,
																	"name": "ledger_index",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/balances.ts",
																			"line": 85,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L85"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 2990,
																		"name": "LedgerIndex"
																	}
																},
																{
																	"id": 629,
																	"name": "limit",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/balances.ts",
																			"line": 87,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L87"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 628,
																	"name": "peer",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/balances.ts",
																			"line": 86,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L86"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		626,
																		627,
																		629,
																		628
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/sugar/balances.ts",
																	"line": 83,
																	"character": 11,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L83"
																}
															]
														}
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 630,
																"name": "__type",
																"kind": 65536,
																"kindString": "Type literal",
																"flags": {},
																"children": [
																	{
																		"id": 632,
																		"name": "currency",
																		"kind": 1024,
																		"kindString": "Property",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "xrpl/src/sugar/balances.ts",
																				"line": 90,
																				"character": 25,
																				"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L90"
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 633,
																		"name": "issuer",
																		"kind": 1024,
																		"kindString": "Property",
																		"flags": {
																			"isOptional": true
																		},
																		"sources": [
																			{
																				"fileName": "xrpl/src/sugar/balances.ts",
																				"line": 90,
																				"character": 43,
																				"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L90"
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 631,
																		"name": "value",
																		"kind": 1024,
																		"kindString": "Property",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "xrpl/src/sugar/balances.ts",
																				"line": 90,
																				"character": 10,
																				"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L90"
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			632,
																			633,
																			631
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "xrpl/src/sugar/balances.ts",
																		"line": 90,
																		"character": 8,
																		"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L90"
																	}
																]
															}
														}
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "getBalances"
						},
						{
							"id": 649,
							"name": "getLedgerIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 700,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L700"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 650,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/getLedgerIndex.ts",
											"line": 9,
											"character": 30,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getLedgerIndex.ts#L9"
										}
									],
									"signatures": [
										{
											"id": 651,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 652,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "getLedgerIndex"
						},
						{
							"id": 634,
							"name": "getOrderbook",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 695,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L695"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 635,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/getOrderbook.ts",
											"line": 52,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L52"
										}
									],
									"signatures": [
										{
											"id": 636,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 637,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 638,
													"name": "currency1",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1725,
														"name": "BookOfferCurrency"
													}
												},
												{
													"id": 639,
													"name": "currency2",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1725,
														"name": "BookOfferCurrency"
													}
												},
												{
													"id": 640,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 641,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 644,
																	"name": "ledger_hash",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/getOrderbook.ts",
																			"line": 59,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L59"
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																},
																{
																	"id": 643,
																	"name": "ledger_index",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/getOrderbook.ts",
																			"line": 58,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L58"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 2990,
																		"name": "LedgerIndex"
																	}
																},
																{
																	"id": 642,
																	"name": "limit",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/getOrderbook.ts",
																			"line": 57,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L57"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 645,
																	"name": "taker",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/getOrderbook.ts",
																			"line": 60,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L60"
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		644,
																		643,
																		642,
																		645
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/sugar/getOrderbook.ts",
																	"line": 56,
																	"character": 11,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L56"
																}
															]
														}
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 646,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 647,
																	"name": "buy",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/getOrderbook.ts",
																			"line": 63,
																			"character": 2,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L63"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 1707,
																			"name": "BookOffer"
																		}
																	}
																},
																{
																	"id": 648,
																	"name": "sell",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/getOrderbook.ts",
																			"line": 64,
																			"character": 2,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L64"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 1707,
																			"name": "BookOffer"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		647,
																		648
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/sugar/getOrderbook.ts",
																	"line": 62,
																	"character": 11,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/getOrderbook.ts#L62"
																}
															]
														}
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "getOrderbook"
						},
						{
							"id": 610,
							"name": "getXrpBalance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 685,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L685"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 611,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/balances.ts",
											"line": 46,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L46"
										}
									],
									"signatures": [
										{
											"id": 612,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 613,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 614,
													"name": "address",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 615,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 616,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 617,
																	"name": "ledger_hash",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/balances.ts",
																			"line": 50,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L50"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 618,
																	"name": "ledger_index",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/balances.ts",
																			"line": 51,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L51"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 2990,
																		"name": "LedgerIndex"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		617,
																		618
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/sugar/balances.ts",
																	"line": 49,
																	"character": 11,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/balances.ts#L49"
																}
															]
														}
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "getXrpBalance"
						},
						{
							"id": 391,
							"name": "maxFeeXRP",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Maximum transaction cost to allow, in decimal XRP. Must be a string-encoded\nnumber. Defaults to '2'."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 206,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L206"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 392,
							"name": "networkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Network ID of the server this client is connected to"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 212,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L212"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 603,
							"name": "prepareTransaction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 680,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L680"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 604,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/autofill.ts",
											"line": 70,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/autofill.ts#L70"
										}
									],
									"signatures": [
										{
											"id": 605,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@deprecated",
														"content": [
															{
																"kind": "text",
																"text": "Use autofill instead, provided for users familiar with v1"
															}
														]
													}
												]
											},
											"typeParameter": [
												{
													"id": 606,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2355,
														"name": "Transaction"
													}
												}
											],
											"parameters": [
												{
													"id": 607,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 608,
													"name": "transaction",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 295,
														"name": "T"
													}
												},
												{
													"id": 609,
													"name": "signersCount",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 295,
														"name": "T"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "autofill"
						},
						{
							"id": 582,
							"name": "submit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 671,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L671"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 583,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/submit.ts",
											"line": 36,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L36"
										}
									],
									"signatures": [
										{
											"id": 584,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 585,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 586,
													"name": "transaction",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"id": 2355,
																"name": "Transaction"
															}
														]
													}
												},
												{
													"id": 587,
													"name": "opts",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 588,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 589,
																	"name": "autofill",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/submit.ts",
																			"line": 41,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L41"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 590,
																	"name": "failHard",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/submit.ts",
																			"line": 43,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L43"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 591,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/submit.ts",
																			"line": 45,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L45"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 691,
																		"name": "Wallet"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		589,
																		590,
																		591
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/sugar/submit.ts",
																	"line": 39,
																	"character": 9,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L39"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1606,
														"name": "SubmitResponse"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "submit"
						},
						{
							"id": 592,
							"name": "submitAndWait",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 675,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L675"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 593,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/sugar/submit.ts",
											"line": 108,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L108"
										}
									],
									"signatures": [
										{
											"id": 594,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"typeParameter": [
												{
													"id": 595,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2355,
														"name": "Transaction"
													},
													"default": {
														"type": "reference",
														"id": 2355,
														"name": "Transaction"
													}
												}
											],
											"parameters": [
												{
													"id": 596,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 384,
														"name": "Client"
													}
												},
												{
													"id": 597,
													"name": "transaction",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"id": 312,
																"name": "T"
															}
														]
													}
												},
												{
													"id": 598,
													"name": "opts",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 599,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 600,
																	"name": "autofill",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/submit.ts",
																			"line": 113,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L113"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 601,
																	"name": "failHard",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/submit.ts",
																			"line": 115,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L115"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 602,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/sugar/submit.ts",
																			"line": 117,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L117"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 691,
																		"name": "Wallet"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		600,
																		601,
																		602
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/sugar/submit.ts",
																	"line": 111,
																	"character": 9,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/sugar/submit.ts#L111"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1680,
														"typeArguments": [
															{
																"type": "reference",
																"id": 312,
																"name": "T"
															}
														],
														"name": "TxResponse"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"defaultValue": "submitAndWait"
						},
						{
							"id": 394,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 298,
									"character": 13,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L298"
								}
							],
							"getSignature": {
								"id": 395,
								"name": "url",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Get the url that the client is connected to."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": [
												{
													"kind": "text",
													"text": "The URL of the server this client is connected to."
												}
											]
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 569,
							"name": "connect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 618,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L618"
								}
							],
							"signatures": [
								{
									"id": 570,
									"name": "connect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Tells the Client instance to connect to its rippled server."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "Client.connect() establishes a connection between a Client object and the server.\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst { Client } = require('xrpl')\nconst client = new Client('wss://s.altnet.rippletest.net:51233')\nawait client.connect()\n// do something with the client\nawait client.disconnect()\n```"
													},
													{
														"kind": "text",
														"text": "\nIf you open a client connection, be sure to close it with "
													},
													{
														"kind": "code",
														"text": "`await client.disconnect()`"
													},
													{
														"kind": "text",
														"text": "\nbefore exiting your application."
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A promise that resolves with a void value when a connection is established."
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 571,
							"name": "disconnect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 645,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L645"
								}
							],
							"signatures": [
								{
									"id": 572,
									"name": "disconnect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disconnects the XRPL client from the server and cancels all pending requests and subscriptions. Call when\nyou want to disconnect the client from the server, such as when you're finished using the client or when you\nneed to switch to a different server."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To use the disconnect() method, you first need to create a new Client object and connect it to a server:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst { Client } = require('xrpl')\nconst client = new Client('wss://s.altnet.rippletest.net:51233')\nawait client.connect()\n// do something with the client\nawait client.disconnect()\n```"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A promise that resolves with a void value when a connection is destroyed."
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 567,
							"name": "getServerInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 586,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L586"
								}
							],
							"signatures": [
								{
									"id": 568,
									"name": "getServerInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get networkID and buildVersion from server_info"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 573,
							"name": "isConnected",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 659,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L659"
								}
							],
							"signatures": [
								{
									"id": 574,
									"name": "isConnected",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Checks if the Client instance is connected to its rippled server."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Whether the client instance is connected."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 492,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 455,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L455"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 456,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L456"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 457,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L457"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 461,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L461"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 465,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L465"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 469,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L469"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 473,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L473"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 477,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L477"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 481,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L481"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 483,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L483"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 492,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L492"
								}
							],
							"signatures": [
								{
									"id": 493,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst api = new Client('wss://s.altnet.rippletest.net:51233')\n\napi.on('transactions', (tx: TransactionStream) => {\n console.log(\"Received Transaction\")\n console.log(tx)\n})\n\nawait api.connect()\nconst response = await api.request({\n    command: 'subscribe',\n    streams: ['transactions_proposed']\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 494,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "connected"
											}
										},
										{
											"id": 495,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 496,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 455,
															"character": 42,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L455"
														}
													],
													"signatures": [
														{
															"id": 497,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 384,
										"name": "Client"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 498,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 499,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "disconnected"
											}
										},
										{
											"id": 500,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 501,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 456,
															"character": 45,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L456"
														}
													],
													"signatures": [
														{
															"id": 502,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 503,
																	"name": "code",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 384,
										"name": "Client"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 504,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 505,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "ledgerClosed"
											}
										},
										{
											"id": 506,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 507,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 459,
															"character": 14,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L459"
														}
													],
													"signatures": [
														{
															"id": 508,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 509,
																	"name": "ledger",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 1894,
																		"name": "LedgerStream"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 384,
										"name": "Client"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 510,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 511,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "validationReceived"
											}
										},
										{
											"id": 512,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 513,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 463,
															"character": 14,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L463"
														}
													],
													"signatures": [
														{
															"id": 514,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 515,
																	"name": "validation",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 1914,
																		"name": "ValidationStream"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 384,
										"name": "Client"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 516,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 517,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "transaction"
											}
										},
										{
											"id": 518,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 519,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 467,
															"character": 14,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L467"
														}
													],
													"signatures": [
														{
															"id": 520,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 521,
																	"name": "tx",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 1931,
																		"name": "TransactionStream"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 384,
										"name": "Client"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 522,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 523,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "peerStatusChange"
											}
										},
										{
											"id": 524,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 525,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 471,
															"character": 14,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L471"
														}
													],
													"signatures": [
														{
															"id": 526,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 527,
																	"name": "status",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 1959,
																		"name": "PeerStatusStream"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 384,
										"name": "Client"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 528,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 529,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "consensusPhase"
											}
										},
										{
											"id": 530,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 531,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 475,
															"character": 14,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L475"
														}
													],
													"signatures": [
														{
															"id": 532,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 533,
																	"name": "phase",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 1979,
																		"name": "ConsensusStream"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 384,
										"name": "Client"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 534,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 535,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "manifestReceived"
											}
										},
										{
											"id": 536,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 537,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 479,
															"character": 14,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L479"
														}
													],
													"signatures": [
														{
															"id": 538,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 539,
																	"name": "manifest",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 2039,
																		"name": "ManifestResponse"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 384,
										"name": "Client"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 540,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 541,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "path_find"
											}
										},
										{
											"id": 542,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 543,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 481,
															"character": 42,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L481"
														}
													],
													"signatures": [
														{
															"id": 544,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 545,
																	"name": "path",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 1947,
																		"name": "PathFindStream"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 384,
										"name": "Client"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 546,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler for subscription streams."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "This, because it inherits from EventEmitter."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 547,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 548,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to run on event."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 549,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/client/index.ts",
															"line": 483,
															"character": 38,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L483"
														}
													],
													"signatures": [
														{
															"id": 550,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 551,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 384,
										"name": "Client"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.on"
							}
						},
						{
							"id": 396,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 305,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L305"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 308,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L308"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 311,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L311"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 312,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L312"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 313,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L313"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 314,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L314"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 317,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L317"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 318,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L318"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 319,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L319"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 320,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L320"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 321,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L321"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 324,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L324"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 325,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L325"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 328,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L328"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 329,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L329"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 330,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L330"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 331,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L331"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 332,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L332"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 333,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L333"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 334,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L334"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 335,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L335"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 336,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L336"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 337,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L337"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 338,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L338"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 339,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L339"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 340,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L340"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 341,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L341"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 342,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L342"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 345,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L345"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 346,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L346"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 347,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L347"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 348,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L348"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 351,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L351"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 352,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L352"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 353,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L353"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 356,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L356"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 357,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L357"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 368,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L368"
								}
							],
							"signatures": [
								{
									"id": 397,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 398,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1087,
												"name": "AccountChannelsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1097,
												"name": "AccountChannelsResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 399,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 400,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1114,
												"name": "AccountCurrenciesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1122,
												"name": "AccountCurrenciesResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 401,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 402,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1151,
												"name": "AccountInfoRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1161,
												"name": "AccountInfoResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 403,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 404,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1192,
												"name": "AccountLinesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1202,
												"name": "AccountLinesResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 405,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 406,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1239,
												"name": "AccountNFTsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1248,
												"name": "AccountNFTsResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 407,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 408,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1266,
												"name": "AccountObjectsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1277,
												"name": "AccountObjectsResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 409,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 410,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1302,
												"name": "AccountOffersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1312,
												"name": "AccountOffersResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 411,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 412,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1328,
												"name": "AccountTxRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1341,
												"name": "AccountTxResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 413,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 414,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1697,
												"name": "BookOffersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1728,
												"name": "BookOffersResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 415,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 416,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1847,
												"name": "ChannelVerifyRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1855,
												"name": "ChannelVerifyResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 417,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 418,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1743,
												"name": "DepositAuthorizedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1751,
												"name": "DepositAuthorizedResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 419,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 420,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2003,
												"name": "FeeRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2007,
												"name": "FeeResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 421,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 422,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1367,
												"name": "GatewayBalancesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1376,
												"name": "GatewayBalancesResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 423,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 424,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1425,
												"name": "LedgerRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1438,
												"name": "LedgerResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 425,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 426,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1485,
												"name": "LedgerClosedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1489,
												"name": "LedgerClosedResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 427,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 428,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1501,
												"name": "LedgerCurrentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1505,
												"name": "LedgerCurrentResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 429,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 430,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1516,
												"name": "LedgerDataRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1530,
												"name": "LedgerDataResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 431,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 432,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1548,
												"name": "LedgerEntryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1585,
												"name": "LedgerEntryResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 433,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 434,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2034,
												"name": "ManifestRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2039,
												"name": "ManifestResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 435,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 436,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2244,
												"name": "NFTBuyOffersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2251,
												"name": "NFTBuyOffersResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 437,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 438,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2263,
												"name": "NFTSellOffersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2270,
												"name": "NFTSellOffersResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 439,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 440,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2282,
												"name": "NFTInfoRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2289,
												"name": "NFTInfoResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 441,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 442,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2298,
												"name": "NFTHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2311,
												"name": "NFTHistoryResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 443,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 444,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1402,
												"name": "NoRippleCheckRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1412,
												"name": "NoRippleCheckResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 445,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 446,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1768,
												"name": "PathFindRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1793,
												"name": "PathFindResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 447,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 448,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2204,
												"name": "PingRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2208,
												"name": "PingResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 449,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 450,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2220,
												"name": "RandomRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2224,
												"name": "RandomResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 451,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 452,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1814,
												"name": "RipplePathFindRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1825,
												"name": "RipplePathFindResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 453,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 454,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2057,
												"name": "ServerInfoRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2061,
												"name": "ServerInfoResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 455,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 456,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2129,
												"name": "ServerStateRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2133,
												"name": "ServerStateResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 457,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 458,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1600,
												"name": "SubmitRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1606,
												"name": "SubmitResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 459,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 460,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1630,
												"name": "SubmitMultisignedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1636,
												"name": "SubmitMultisignedResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 461,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 462,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1866,
												"name": "SubscribeRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1877,
												"name": "SubscribeResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 463,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 464,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1982,
												"name": "UnsubscribeRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1990,
												"name": "UnsubscribeResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 465,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 466,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1651,
												"name": "TransactionEntryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1658,
												"name": "TransactionEntryResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 467,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 468,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1672,
												"name": "TxRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1680,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2355,
														"name": "Transaction"
													}
												],
												"name": "TxResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 469,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes a request to the client with the given command and\nadditional request body parameters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response from the server."
													}
												]
											}
										]
									},
									"typeParameter": [
										{
											"id": 470,
											"name": "R",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1050,
												"name": "BaseRequest"
											}
										},
										{
											"id": 471,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1056,
												"name": "BaseResponse"
											}
										}
									],
									"parameters": [
										{
											"id": 472,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 187,
												"name": "R"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 188,
												"name": "T"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 552,
							"name": "requestAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 499,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L499"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 502,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L502"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 505,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L505"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 508,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L508"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 511,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L511"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 512,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L512"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 513,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L513"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 532,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L532"
								}
							],
							"signatures": [
								{
									"id": 553,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 554,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1087,
												"name": "AccountChannelsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1097,
													"name": "AccountChannelsResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 555,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes multiple paged requests to the client to return a given number of\nresources. Multiple paged requests will be made until the "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": "\nnumber of resources is reached (if no "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": " is provided, a single request\nwill be made).\n\nIf the command is unknown, an additional "
											},
											{
												"kind": "code",
												"text": "`collect`"
											},
											{
												"kind": "text",
												"text": " property is required to\nknow which response key contains the array of resources.\n\nNOTE: This command is used by existing methods and is not recommended for\ngeneral use. Instead, use rippled's built-in pagination and make multiple\nrequests as needed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The array of all responses."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if there is no collection key (either from a known command or for the unknown command)."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 556,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1192,
												"name": "AccountLinesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1202,
													"name": "AccountLinesResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 557,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes multiple paged requests to the client to return a given number of\nresources. Multiple paged requests will be made until the "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": "\nnumber of resources is reached (if no "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": " is provided, a single request\nwill be made).\n\nIf the command is unknown, an additional "
											},
											{
												"kind": "code",
												"text": "`collect`"
											},
											{
												"kind": "text",
												"text": " property is required to\nknow which response key contains the array of resources.\n\nNOTE: This command is used by existing methods and is not recommended for\ngeneral use. Instead, use rippled's built-in pagination and make multiple\nrequests as needed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The array of all responses."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if there is no collection key (either from a known command or for the unknown command)."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 558,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1266,
												"name": "AccountObjectsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1277,
													"name": "AccountObjectsResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 559,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes multiple paged requests to the client to return a given number of\nresources. Multiple paged requests will be made until the "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": "\nnumber of resources is reached (if no "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": " is provided, a single request\nwill be made).\n\nIf the command is unknown, an additional "
											},
											{
												"kind": "code",
												"text": "`collect`"
											},
											{
												"kind": "text",
												"text": " property is required to\nknow which response key contains the array of resources.\n\nNOTE: This command is used by existing methods and is not recommended for\ngeneral use. Instead, use rippled's built-in pagination and make multiple\nrequests as needed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The array of all responses."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if there is no collection key (either from a known command or for the unknown command)."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 560,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1302,
												"name": "AccountOffersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1312,
													"name": "AccountOffersResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 561,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes multiple paged requests to the client to return a given number of\nresources. Multiple paged requests will be made until the "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": "\nnumber of resources is reached (if no "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": " is provided, a single request\nwill be made).\n\nIf the command is unknown, an additional "
											},
											{
												"kind": "code",
												"text": "`collect`"
											},
											{
												"kind": "text",
												"text": " property is required to\nknow which response key contains the array of resources.\n\nNOTE: This command is used by existing methods and is not recommended for\ngeneral use. Instead, use rippled's built-in pagination and make multiple\nrequests as needed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The array of all responses."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if there is no collection key (either from a known command or for the unknown command)."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 562,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1328,
												"name": "AccountTxRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1341,
													"name": "AccountTxResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 563,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes multiple paged requests to the client to return a given number of\nresources. Multiple paged requests will be made until the "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": "\nnumber of resources is reached (if no "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": " is provided, a single request\nwill be made).\n\nIf the command is unknown, an additional "
											},
											{
												"kind": "code",
												"text": "`collect`"
											},
											{
												"kind": "text",
												"text": " property is required to\nknow which response key contains the array of resources.\n\nNOTE: This command is used by existing methods and is not recommended for\ngeneral use. Instead, use rippled's built-in pagination and make multiple\nrequests as needed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The array of all responses."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if there is no collection key (either from a known command or for the unknown command)."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 564,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1697,
												"name": "BookOffersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1728,
													"name": "BookOffersResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 565,
									"name": "requestAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Makes multiple paged requests to the client to return a given number of\nresources. Multiple paged requests will be made until the "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": "\nnumber of resources is reached (if no "
											},
											{
												"kind": "code",
												"text": "`limit`"
											},
											{
												"kind": "text",
												"text": " is provided, a single request\nwill be made).\n\nIf the command is unknown, an additional "
											},
											{
												"kind": "code",
												"text": "`collect`"
											},
											{
												"kind": "text",
												"text": " property is required to\nknow which response key contains the array of resources.\n\nNOTE: This command is used by existing methods and is not recommended for\ngeneral use. Instead, use rippled's built-in pagination and make multiple\nrequests as needed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The array of all responses."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if there is no collection key (either from a known command or for the unknown command)."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 566,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1516,
												"name": "LedgerDataRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1530,
													"name": "LedgerDataResponse"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 473,
							"name": "requestNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 389,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L389"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 393,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L393"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 397,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L397"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 401,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L401"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 405,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L405"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 409,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L409"
								},
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 420,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L420"
								}
							],
							"signatures": [
								{
									"id": 474,
									"name": "requestNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 475,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1087,
												"name": "AccountChannelsRequest"
											}
										},
										{
											"id": 476,
											"name": "resp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1097,
												"name": "AccountChannelsResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1097,
												"name": "AccountChannelsResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 477,
									"name": "requestNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Requests the next page of data."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response with the next page of data."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 478,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Request to send."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1192,
												"name": "AccountLinesRequest"
											}
										},
										{
											"id": 479,
											"name": "resp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Response with the marker to use in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1202,
												"name": "AccountLinesResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1202,
												"name": "AccountLinesResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 480,
									"name": "requestNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Requests the next page of data."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response with the next page of data."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 481,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Request to send."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1266,
												"name": "AccountObjectsRequest"
											}
										},
										{
											"id": 482,
											"name": "resp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Response with the marker to use in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1277,
												"name": "AccountObjectsResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1277,
												"name": "AccountObjectsResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 483,
									"name": "requestNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Requests the next page of data."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response with the next page of data."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 484,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Request to send."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1302,
												"name": "AccountOffersRequest"
											}
										},
										{
											"id": 485,
											"name": "resp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Response with the marker to use in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1312,
												"name": "AccountOffersResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1312,
												"name": "AccountOffersResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 486,
									"name": "requestNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Requests the next page of data."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response with the next page of data."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 487,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Request to send."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1328,
												"name": "AccountTxRequest"
											}
										},
										{
											"id": 488,
											"name": "resp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Response with the marker to use in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1341,
												"name": "AccountTxResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1341,
												"name": "AccountTxResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 489,
									"name": "requestNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Requests the next page of data."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The response with the next page of data."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 490,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Request to send."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1516,
												"name": "LedgerDataRequest"
											}
										},
										{
											"id": 491,
											"name": "resp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Response with the marker to use in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 1530,
												"name": "LedgerDataResponse"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1530,
												"name": "LedgerDataResponse"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								385
							]
						},
						{
							"title": "Properties",
							"children": [
								575,
								393,
								389,
								390,
								653,
								619,
								649,
								634,
								610,
								391,
								392,
								603,
								582,
								592
							]
						},
						{
							"title": "Accessors",
							"children": [
								394
							]
						},
						{
							"title": "Methods",
							"children": [
								569,
								571,
								567,
								573,
								492,
								396,
								552,
								473
							]
						}
					],
					"categories": [
						{
							"title": "Constructor",
							"children": [
								385
							]
						},
						{
							"title": "Abstraction",
							"children": [
								619,
								649,
								634,
								610
							]
						},
						{
							"title": "CATEGORY",
							"children": [
								393,
								389,
								392,
								603,
								567
							]
						},
						{
							"title": "Core",
							"children": [
								575,
								582,
								592
							]
						},
						{
							"title": "Faucet",
							"children": [
								653
							]
						},
						{
							"title": "Fee",
							"children": [
								390,
								391
							]
						},
						{
							"title": "Network",
							"children": [
								394,
								569,
								571,
								573,
								492,
								396,
								552,
								473
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/client/index.ts",
							"line": 186,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L186"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "EventEmitter",
							"qualifiedName": "EventEmitter",
							"package": "@types/node"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 98,
							"name": "BroadcastClient"
						}
					]
				},
				{
					"id": 3324,
					"name": "ConnectionError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error thrown when xrpl.js has an error with connection to rippled."
							}
						]
					},
					"children": [
						{
							"id": 3325,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 3326,
									"name": "new ConnectionError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Construct an XrplError."
											}
										]
									},
									"parameters": [
										{
											"id": 3327,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The error message."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 3328,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data that caused the error."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3324,
										"name": "ConnectionError"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3302,
										"name": "XrplError.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3301,
								"name": "XrplError.constructor"
							}
						},
						{
							"id": 3331,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 13,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3307,
								"name": "XrplError.data"
							}
						},
						{
							"id": 3330,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 12,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3306,
								"name": "XrplError.message"
							}
						},
						{
							"id": 3329,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 11,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3305,
								"name": "XrplError.name"
							}
						},
						{
							"id": 3334,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 54,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 3335,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Console.log in node uses util.inspect on object, and util.inspect allows\nus to customize its output:\nhttps://nodejs.org/api/util.html#util_custom_inspect_function_on_objects."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3311,
										"name": "XrplError.inspect"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3310,
								"name": "XrplError.inspect"
							}
						},
						{
							"id": 3332,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 38,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 3333,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Converts the Error to a human-readable String form."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3309,
										"name": "XrplError.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3308,
								"name": "XrplError.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3325
							]
						},
						{
							"title": "Properties",
							"children": [
								3331,
								3330,
								3329
							]
						},
						{
							"title": "Methods",
							"children": [
								3334,
								3332
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/errors.ts",
							"line": 78,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L78"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3300,
							"name": "XrplError"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3348,
							"name": "NotConnectedError"
						},
						{
							"type": "reference",
							"id": 3360,
							"name": "DisconnectedError"
						},
						{
							"type": "reference",
							"id": 3372,
							"name": "RippledNotInitializedError"
						},
						{
							"type": "reference",
							"id": 3384,
							"name": "TimeoutError"
						},
						{
							"type": "reference",
							"id": 3396,
							"name": "ResponseFormatError"
						}
					]
				},
				{
					"id": 3360,
					"name": "DisconnectedError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error thrown when xrpl.js has disconnected from rippled server."
							}
						]
					},
					"children": [
						{
							"id": 3361,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 3362,
									"name": "new DisconnectedError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Construct an XrplError."
											}
										]
									},
									"parameters": [
										{
											"id": 3363,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The error message."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 3364,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data that caused the error."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3360,
										"name": "DisconnectedError"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3326,
										"name": "ConnectionError.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3325,
								"name": "ConnectionError.constructor"
							}
						},
						{
							"id": 3367,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 13,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3331,
								"name": "ConnectionError.data"
							}
						},
						{
							"id": 3366,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 12,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3330,
								"name": "ConnectionError.message"
							}
						},
						{
							"id": 3365,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 11,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3329,
								"name": "ConnectionError.name"
							}
						},
						{
							"id": 3370,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 54,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 3371,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Console.log in node uses util.inspect on object, and util.inspect allows\nus to customize its output:\nhttps://nodejs.org/api/util.html#util_custom_inspect_function_on_objects."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3335,
										"name": "ConnectionError.inspect"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3334,
								"name": "ConnectionError.inspect"
							}
						},
						{
							"id": 3368,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 38,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 3369,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Converts the Error to a human-readable String form."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3333,
										"name": "ConnectionError.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3332,
								"name": "ConnectionError.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3361
							]
						},
						{
							"title": "Properties",
							"children": [
								3367,
								3366,
								3365
							]
						},
						{
							"title": "Methods",
							"children": [
								3370,
								3368
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/errors.ts",
							"line": 92,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L92"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3324,
							"name": "ConnectionError"
						}
					]
				},
				{
					"id": 3348,
					"name": "NotConnectedError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error thrown when xrpl.js is not connected to rippled server."
							}
						]
					},
					"children": [
						{
							"id": 3349,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 3350,
									"name": "new NotConnectedError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Construct an XrplError."
											}
										]
									},
									"parameters": [
										{
											"id": 3351,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The error message."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 3352,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data that caused the error."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3348,
										"name": "NotConnectedError"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3326,
										"name": "ConnectionError.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3325,
								"name": "ConnectionError.constructor"
							}
						},
						{
							"id": 3355,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 13,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3331,
								"name": "ConnectionError.data"
							}
						},
						{
							"id": 3354,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 12,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3330,
								"name": "ConnectionError.message"
							}
						},
						{
							"id": 3353,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 11,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3329,
								"name": "ConnectionError.name"
							}
						},
						{
							"id": 3358,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 54,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 3359,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Console.log in node uses util.inspect on object, and util.inspect allows\nus to customize its output:\nhttps://nodejs.org/api/util.html#util_custom_inspect_function_on_objects."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3335,
										"name": "ConnectionError.inspect"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3334,
								"name": "ConnectionError.inspect"
							}
						},
						{
							"id": 3356,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 38,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 3357,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Converts the Error to a human-readable String form."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3333,
										"name": "ConnectionError.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3332,
								"name": "ConnectionError.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3349
							]
						},
						{
							"title": "Properties",
							"children": [
								3355,
								3354,
								3353
							]
						},
						{
							"title": "Methods",
							"children": [
								3358,
								3356
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/errors.ts",
							"line": 85,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L85"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3324,
							"name": "ConnectionError"
						}
					]
				},
				{
					"id": 3420,
					"name": "NotFoundError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error thrown when xrpl.js cannot retrieve a transaction, ledger, account, etc.\nFrom rippled."
							}
						]
					},
					"children": [
						{
							"id": 3421,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L143"
								}
							],
							"signatures": [
								{
									"id": 3422,
									"name": "new NotFoundError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Construct an XrplError."
											}
										]
									},
									"parameters": [
										{
											"id": 3423,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The error message. Defaults to \"Not found\"."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'Not found'"
										}
									],
									"type": {
										"type": "reference",
										"id": 3420,
										"name": "NotFoundError"
									},
									"overwrites": {
										"type": "reference",
										"id": 3302,
										"name": "XrplError.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3301,
								"name": "XrplError.constructor"
							}
						},
						{
							"id": 3426,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 13,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3307,
								"name": "XrplError.data"
							}
						},
						{
							"id": 3425,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 12,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3306,
								"name": "XrplError.message"
							}
						},
						{
							"id": 3424,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 11,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3305,
								"name": "XrplError.name"
							}
						},
						{
							"id": 3429,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 54,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 3430,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Console.log in node uses util.inspect on object, and util.inspect allows\nus to customize its output:\nhttps://nodejs.org/api/util.html#util_custom_inspect_function_on_objects."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3311,
										"name": "XrplError.inspect"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3310,
								"name": "XrplError.inspect"
							}
						},
						{
							"id": 3427,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 38,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 3428,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Converts the Error to a human-readable String form."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3309,
										"name": "XrplError.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3308,
								"name": "XrplError.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3421
							]
						},
						{
							"title": "Properties",
							"children": [
								3426,
								3425,
								3424
							]
						},
						{
							"title": "Methods",
							"children": [
								3429,
								3427
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/errors.ts",
							"line": 137,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L137"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3300,
							"name": "XrplError"
						}
					]
				},
				{
					"id": 3396,
					"name": "ResponseFormatError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error thrown when xrpl.js sees a response in the wrong format."
							}
						]
					},
					"children": [
						{
							"id": 3397,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 3398,
									"name": "new ResponseFormatError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Construct an XrplError."
											}
										]
									},
									"parameters": [
										{
											"id": 3399,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The error message."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 3400,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data that caused the error."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3396,
										"name": "ResponseFormatError"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3326,
										"name": "ConnectionError.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3325,
								"name": "ConnectionError.constructor"
							}
						},
						{
							"id": 3403,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 13,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3331,
								"name": "ConnectionError.data"
							}
						},
						{
							"id": 3402,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 12,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3330,
								"name": "ConnectionError.message"
							}
						},
						{
							"id": 3401,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 11,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3329,
								"name": "ConnectionError.name"
							}
						},
						{
							"id": 3406,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 54,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 3407,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Console.log in node uses util.inspect on object, and util.inspect allows\nus to customize its output:\nhttps://nodejs.org/api/util.html#util_custom_inspect_function_on_objects."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3335,
										"name": "ConnectionError.inspect"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3334,
								"name": "ConnectionError.inspect"
							}
						},
						{
							"id": 3404,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 38,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 3405,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Converts the Error to a human-readable String form."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3333,
										"name": "ConnectionError.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3332,
								"name": "ConnectionError.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3397
							]
						},
						{
							"title": "Properties",
							"children": [
								3403,
								3402,
								3401
							]
						},
						{
							"title": "Methods",
							"children": [
								3406,
								3404
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/errors.ts",
							"line": 113,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L113"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3324,
							"name": "ConnectionError"
						}
					]
				},
				{
					"id": 3336,
					"name": "RippledError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error thrown when rippled responds with an error."
							}
						]
					},
					"children": [
						{
							"id": 3337,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 3338,
									"name": "new RippledError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Construct an XrplError."
											}
										]
									},
									"parameters": [
										{
											"id": 3339,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The error message."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 3340,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data that caused the error."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3336,
										"name": "RippledError"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3302,
										"name": "XrplError.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3301,
								"name": "XrplError.constructor"
							}
						},
						{
							"id": 3343,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 13,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3307,
								"name": "XrplError.data"
							}
						},
						{
							"id": 3342,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 12,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3306,
								"name": "XrplError.message"
							}
						},
						{
							"id": 3341,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 11,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3305,
								"name": "XrplError.name"
							}
						},
						{
							"id": 3346,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 54,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 3347,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Console.log in node uses util.inspect on object, and util.inspect allows\nus to customize its output:\nhttps://nodejs.org/api/util.html#util_custom_inspect_function_on_objects."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3311,
										"name": "XrplError.inspect"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3310,
								"name": "XrplError.inspect"
							}
						},
						{
							"id": 3344,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 38,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 3345,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Converts the Error to a human-readable String form."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3309,
										"name": "XrplError.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3308,
								"name": "XrplError.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3337
							]
						},
						{
							"title": "Properties",
							"children": [
								3343,
								3342,
								3341
							]
						},
						{
							"title": "Methods",
							"children": [
								3346,
								3344
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/errors.ts",
							"line": 64,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L64"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3300,
							"name": "XrplError"
						}
					]
				},
				{
					"id": 3372,
					"name": "RippledNotInitializedError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error thrown when rippled is not initialized."
							}
						]
					},
					"children": [
						{
							"id": 3373,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 3374,
									"name": "new RippledNotInitializedError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Construct an XrplError."
											}
										]
									},
									"parameters": [
										{
											"id": 3375,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The error message."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 3376,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data that caused the error."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3372,
										"name": "RippledNotInitializedError"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3326,
										"name": "ConnectionError.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3325,
								"name": "ConnectionError.constructor"
							}
						},
						{
							"id": 3379,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 13,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3331,
								"name": "ConnectionError.data"
							}
						},
						{
							"id": 3378,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 12,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3330,
								"name": "ConnectionError.message"
							}
						},
						{
							"id": 3377,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 11,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3329,
								"name": "ConnectionError.name"
							}
						},
						{
							"id": 3382,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 54,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 3383,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Console.log in node uses util.inspect on object, and util.inspect allows\nus to customize its output:\nhttps://nodejs.org/api/util.html#util_custom_inspect_function_on_objects."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3335,
										"name": "ConnectionError.inspect"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3334,
								"name": "ConnectionError.inspect"
							}
						},
						{
							"id": 3380,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 38,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 3381,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Converts the Error to a human-readable String form."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3333,
										"name": "ConnectionError.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3332,
								"name": "ConnectionError.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3373
							]
						},
						{
							"title": "Properties",
							"children": [
								3379,
								3378,
								3377
							]
						},
						{
							"title": "Methods",
							"children": [
								3382,
								3380
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/errors.ts",
							"line": 99,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L99"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3324,
							"name": "ConnectionError"
						}
					]
				},
				{
					"id": 3384,
					"name": "TimeoutError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error thrown when xrpl.js times out."
							}
						]
					},
					"children": [
						{
							"id": 3385,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 3386,
									"name": "new TimeoutError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Construct an XrplError."
											}
										]
									},
									"parameters": [
										{
											"id": 3387,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The error message."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 3388,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data that caused the error."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3384,
										"name": "TimeoutError"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3326,
										"name": "ConnectionError.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3325,
								"name": "ConnectionError.constructor"
							}
						},
						{
							"id": 3391,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 13,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3331,
								"name": "ConnectionError.data"
							}
						},
						{
							"id": 3390,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 12,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3330,
								"name": "ConnectionError.message"
							}
						},
						{
							"id": 3389,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 11,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3329,
								"name": "ConnectionError.name"
							}
						},
						{
							"id": 3394,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 54,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 3395,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Console.log in node uses util.inspect on object, and util.inspect allows\nus to customize its output:\nhttps://nodejs.org/api/util.html#util_custom_inspect_function_on_objects."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3335,
										"name": "ConnectionError.inspect"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3334,
								"name": "ConnectionError.inspect"
							}
						},
						{
							"id": 3392,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 38,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 3393,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Converts the Error to a human-readable String form."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3333,
										"name": "ConnectionError.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3332,
								"name": "ConnectionError.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3385
							]
						},
						{
							"title": "Properties",
							"children": [
								3391,
								3390,
								3389
							]
						},
						{
							"title": "Methods",
							"children": [
								3394,
								3392
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/errors.ts",
							"line": 106,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L106"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3324,
							"name": "ConnectionError"
						}
					]
				},
				{
					"id": 3312,
					"name": "UnexpectedError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error thrown when xrpl.js cannot specify error type."
							}
						]
					},
					"children": [
						{
							"id": 3313,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 3314,
									"name": "new UnexpectedError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Construct an XrplError."
											}
										]
									},
									"parameters": [
										{
											"id": 3315,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The error message."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 3316,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data that caused the error."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3312,
										"name": "UnexpectedError"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3302,
										"name": "XrplError.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3301,
								"name": "XrplError.constructor"
							}
						},
						{
							"id": 3319,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 13,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3307,
								"name": "XrplError.data"
							}
						},
						{
							"id": 3318,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 12,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3306,
								"name": "XrplError.message"
							}
						},
						{
							"id": 3317,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 11,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3305,
								"name": "XrplError.name"
							}
						},
						{
							"id": 3322,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 54,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 3323,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Console.log in node uses util.inspect on object, and util.inspect allows\nus to customize its output:\nhttps://nodejs.org/api/util.html#util_custom_inspect_function_on_objects."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3311,
										"name": "XrplError.inspect"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3310,
								"name": "XrplError.inspect"
							}
						},
						{
							"id": 3320,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 38,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 3321,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Converts the Error to a human-readable String form."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3309,
										"name": "XrplError.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3308,
								"name": "XrplError.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3313
							]
						},
						{
							"title": "Properties",
							"children": [
								3319,
								3318,
								3317
							]
						},
						{
							"title": "Methods",
							"children": [
								3322,
								3320
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/errors.ts",
							"line": 71,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L71"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3300,
							"name": "XrplError"
						}
					]
				},
				{
					"id": 3408,
					"name": "ValidationError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error thrown when xrpl.js sees a malformed transaction."
							}
						]
					},
					"children": [
						{
							"id": 3409,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 3410,
									"name": "new ValidationError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Construct an XrplError."
											}
										]
									},
									"parameters": [
										{
											"id": 3411,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The error message."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 3412,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data that caused the error."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3408,
										"name": "ValidationError"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3302,
										"name": "XrplError.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3301,
								"name": "XrplError.constructor"
							}
						},
						{
							"id": 3415,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 13,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3307,
								"name": "XrplError.data"
							}
						},
						{
							"id": 3414,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 12,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3306,
								"name": "XrplError.message"
							}
						},
						{
							"id": 3413,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 11,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3305,
								"name": "XrplError.name"
							}
						},
						{
							"id": 3418,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 54,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 3419,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Console.log in node uses util.inspect on object, and util.inspect allows\nus to customize its output:\nhttps://nodejs.org/api/util.html#util_custom_inspect_function_on_objects."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3311,
										"name": "XrplError.inspect"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3310,
								"name": "XrplError.inspect"
							}
						},
						{
							"id": 3416,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 38,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 3417,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Converts the Error to a human-readable String form."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3309,
										"name": "XrplError.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3308,
								"name": "XrplError.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3409
							]
						},
						{
							"title": "Properties",
							"children": [
								3415,
								3414,
								3413
							]
						},
						{
							"title": "Methods",
							"children": [
								3418,
								3416
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/errors.ts",
							"line": 120,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L120"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3300,
							"name": "XrplError"
						}
					]
				},
				{
					"id": 691,
					"name": "Wallet",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A utility for deriving a wallet composed of a keypair (publicKey/privateKey).\nA wallet can be derived from either a seed, mnemonic, or entropy (array of random numbers).\nIt provides functionality to sign/verify transactions offline."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\n\n// Derive a wallet from a base58 encoded seed.\nconst seedWallet = Wallet.fromSeed('ssZkdwURFMBXenJPbrpE14b6noJSu')\nconsole.log(seedWallet)\n// Wallet {\n// publicKey: '02FE9932A9C4AA2AC9F0ED0F2B89302DE7C2C95F91D782DA3CF06E64E1C1216449',\n// privateKey: '00445D0A16DD05EFAF6D5AF45E6B8A6DE4170D93C0627021A0B8E705786CBCCFF7',\n// classicAddress: 'rG88FVLjvYiQaGftSa1cKuE2qNx7aK5ivo',\n// seed: 'ssZkdwURFMBXenJPbrpE14b6noJSu'\n// }.\n\n// Sign a JSON Transaction\n const signed = seedWallet.signTransaction({\n     TransactionType: 'Payment',\n     Account: 'rG88FVLjvYiQaGftSa1cKuE2qNx7aK5ivo'\n     ...........\n}).\n\nconsole.log(signed)\n// '1200007321......B01BE1DFF3'.\nconsole.log(decode(signed))\n// {\n//   TransactionType: 'Payment',\n//   SigningPubKey: '02FE9932A9C4AA2AC9F0ED0F2B89302DE7C2C95F91D782DA3CF06E64E1C1216449',\n//   TxnSignature: '3045022100AAD......5B631ABD21171B61B07D304',\n//   Account: 'rG88FVLjvYiQaGftSa1cKuE2qNx7aK5ivo'\n//   ...........\n// }\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 740,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 94,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L94"
								}
							],
							"signatures": [
								{
									"id": 741,
									"name": "new Wallet",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates a new Wallet."
											}
										]
									},
									"parameters": [
										{
											"id": 742,
											"name": "publicKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The public key for the account."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 743,
											"name": "privateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The private key used for signing transactions for the account."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 744,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "(Optional) Options to initialize a Wallet."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 745,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 746,
															"name": "masterAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Include if a Wallet uses a Regular Key Pair. It must be the master address of the account."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/index.ts",
																	"line": 98,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L98"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 747,
															"name": "seed",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The seed used to derive the account keys."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/index.ts",
																	"line": 99,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L99"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																746,
																747
															]
														}
													],
													"sources": [
														{
															"fileName": "xrpl/src/Wallet/index.ts",
															"line": 97,
															"character": 10,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L97"
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 691,
										"name": "Wallet"
									}
								}
							]
						},
						{
							"id": 750,
							"name": "classicAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 82,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L82"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 749,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 81,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L81"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 748,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 80,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 751,
							"name": "seed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 83,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L83"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 702,
							"name": "fromSecret",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 172,
									"character": 16,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L172"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 703,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/Wallet/index.ts",
											"line": 152,
											"character": 16,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L152"
										}
									],
									"signatures": [
										{
											"id": 704,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Derives a wallet from a secret (AKA a seed)."
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "A Wallet derived from a secret (AKA a seed)."
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 705,
													"name": "seed",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 706,
													"name": "opts",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "(Optional) Options to derive a Wallet."
															}
														]
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 707,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 709,
																	"name": "algorithm",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The digital signature algorithm to generate an address for."
																			}
																		]
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/index.ts",
																			"line": 154,
																			"character": 36,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L154"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 688,
																		"name": "ECDSA"
																	}
																},
																{
																	"id": 708,
																	"name": "masterAddress",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Include if a Wallet uses a Regular Key Pair. It must be the master address of the account."
																			}
																		]
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/Wallet/index.ts",
																			"line": 154,
																			"character": 12,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L154"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		709,
																		708
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/index.ts",
																	"line": 154,
																	"character": 10,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L154"
																}
															]
														}
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"id": 691,
												"name": "Wallet"
											}
										}
									]
								}
							},
							"defaultValue": "Wallet.fromSeed"
						},
						{
							"id": 752,
							"name": "address",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 115,
									"character": 13,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L115"
								}
							],
							"getSignature": {
								"id": 753,
								"name": "address",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Alias for wallet.classicAddress."
										}
									],
									"blockTags": [
										{
											"tag": "@returns",
											"content": [
												{
													"kind": "text",
													"text": "The wallet's classic address."
												}
											]
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 765,
							"name": "getXAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 455,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L455"
								}
							],
							"signatures": [
								{
									"id": 766,
									"name": "getXAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Gets an X-address in Testnet/Mainnet format."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An X-address."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 767,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A tag to be included within the X-address."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "literal",
														"value": false
													}
												]
											},
											"defaultValue": "false"
										},
										{
											"id": 768,
											"name": "isTestnet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A boolean to indicate if X-address should be in Testnet (true) or Mainnet (false) format."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 754,
							"name": "sign",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 367,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L367"
								}
							],
							"signatures": [
								{
									"id": 755,
									"name": "sign",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Signs a transaction offline."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst { Client, Wallet } = require('xrpl')\nconst client = new Client('wss://s.altnet.rippletest.net:51233')\n\nasync function signTransaction() {\n  await client.connect()\n  const { balance: balance1, wallet: wallet1 } = client.fundWallet()\n  const { balance: balance2, wallet: wallet2 } = client.fundWallet()\n\n  const transaction = {\n    TransactionType: 'Payment',\n    Account: wallet1.address,\n    Destination: wallet2.address,\n    Amount: '10'\n  }\n\n  try {\n    await client.autofill(transaction)\n    const { tx_blob: signed_tx_blob, hash} = await wallet1.sign(transaction)\n    console.log(signed_tx_blob)\n  } catch (error) {\n    console.error(`Failed to sign transaction: ${error}`)\n  }\n  const result = await client.submit(signed_tx_blob)\n  await client.disconnect()\n}\n\nsignTransaction()\n```"
													},
													{
														"kind": "text",
														"text": "\nIn order for a transaction to be validated, it must be signed by the account sending the transaction to prove\nThat the owner is actually the one deciding to take that action.\n\nIn this example, we created, signed, and then submitted a transaction to testnet. You may notice that the\nOutput of "
													},
													{
														"kind": "code",
														"text": "`sign`"
													},
													{
														"kind": "text",
														"text": " includes a "
													},
													{
														"kind": "code",
														"text": "`tx_blob`"
													},
													{
														"kind": "text",
														"text": " and a "
													},
													{
														"kind": "code",
														"text": "`hash`"
													},
													{
														"kind": "text",
														"text": ", both of which are needed to submit & verify the results.\nNote: If you pass a "
													},
													{
														"kind": "code",
														"text": "`Wallet`"
													},
													{
														"kind": "text",
														"text": " to "
													},
													{
														"kind": "code",
														"text": "`client.submit`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`client.submitAndWait`"
													},
													{
														"kind": "text",
														"text": " it will do signing like this under the hood.\n\n"
													},
													{
														"kind": "code",
														"text": "`tx_blob`"
													},
													{
														"kind": "text",
														"text": " is a binary representation of a transaction on the XRP Ledger. It's essentially a byte array\nthat encodes all of the data necessary to execute the transaction, including the source address, the destination\naddress, the amount, and any additional fields required for the specific transaction type.\n\n"
													},
													{
														"kind": "code",
														"text": "`hash`"
													},
													{
														"kind": "text",
														"text": " is a unique identifier that's generated from the signed transaction data on the XRP Ledger. It's essentially\nA cryptographic digest of the signed transaction blob, created using a hash function. The signed transaction hash is\nUseful for identifying and tracking specific transactions on the XRP Ledger. It can be used to query transaction\nInformation, verify the authenticity of a transaction, and detect any tampering with the transaction data."
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A signed transaction."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if the transaction is already signed or does not encode/decode to same result."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "XrplError if the issued currency being signed is XRP ignoring case."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 756,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Wallet instance."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 691,
												"name": "Wallet"
											}
										},
										{
											"id": 757,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A transaction to be signed offline."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2355,
												"name": "Transaction"
											}
										},
										{
											"id": 758,
											"name": "multisign",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Specify true/false to use multisign or actual address (classic/x-address) to make multisign tx request."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 759,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 761,
													"name": "hash",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/Wallet/index.ts",
															"line": 373,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L373"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 760,
													"name": "tx_blob",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/Wallet/index.ts",
															"line": 372,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L372"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														761,
														760
													]
												}
											],
											"sources": [
												{
													"fileName": "xrpl/src/Wallet/index.ts",
													"line": 371,
													"character": 5,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L371"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 762,
							"name": "verifyTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 438,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L438"
								}
							],
							"signatures": [
								{
									"id": 763,
									"name": "verifyTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Verifies a signed transaction offline."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Returns true if a signedTransaction is valid."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 764,
											"name": "signedTransaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A signed transaction (hex string of signTransaction result) to be verified offline."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 2355,
														"name": "Transaction"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 710,
							"name": "fromEntropy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 183,
									"character": 16,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L183"
								}
							],
							"signatures": [
								{
									"id": 711,
									"name": "fromEntropy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Derives a wallet from an entropy (array of random numbers)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A Wallet derived from an entropy."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 712,
											"name": "entropy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An array of random numbers to generate a seed used to derive a wallet."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Uint8Array",
														"qualifiedName": "Uint8Array",
														"package": "typescript"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												]
											}
										},
										{
											"id": 713,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "(Optional) Options to derive a Wallet."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 714,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 716,
															"name": "algorithm",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The digital signature algorithm to generate an address for."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/index.ts",
																	"line": 185,
																	"character": 36,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L185"
																}
															],
															"type": {
																"type": "reference",
																"id": 688,
																"name": "ECDSA"
															}
														},
														{
															"id": 715,
															"name": "masterAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Include if a Wallet uses a Regular Key Pair. It must be the master address of the account."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/index.ts",
																	"line": 185,
																	"character": 12,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L185"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																716,
																715
															]
														}
													],
													"sources": [
														{
															"fileName": "xrpl/src/Wallet/index.ts",
															"line": 185,
															"character": 10,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L185"
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 691,
										"name": "Wallet"
									}
								}
							]
						},
						{
							"id": 717,
							"name": "fromMnemonic",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 219,
									"character": 16,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L219"
								}
							],
							"signatures": [
								{
									"id": 718,
									"name": "fromMnemonic",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Derives a wallet from a bip39 or RFC1751 mnemonic (Defaults to bip39)."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "since version 2.6.1.\nWill be deleted in version 3.0.0.\nThis representation is currently deprecated in rippled.\nYou should use another method to represent your keys such as a seed or public/private keypair."
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A Wallet derived from a mnemonic."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError if unable to derive private key from mnemonic input."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 719,
											"name": "mnemonic",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A string consisting of words (whitespace delimited) used to derive a wallet."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 720,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "(Optional) Options to derive a Wallet."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 721,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 725,
															"name": "algorithm",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Only used if opts.mnemonicEncoding is 'rfc1751'. Allows the mnemonic to generate its\n                        secp256k1 seed, or its ed25519 seed. By default, it will generate the secp256k1 seed\n                        to match the rippled "
																	},
																	{
																		"kind": "code",
																		"text": "`wallet_propose`"
																	},
																	{
																		"kind": "text",
																		"text": " default algorithm."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/index.ts",
																	"line": 225,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L225"
																}
															],
															"type": {
																"type": "reference",
																"id": 688,
																"name": "ECDSA"
															}
														},
														{
															"id": 723,
															"name": "derivationPath",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The path to derive a keypair (publicKey/privateKey). Only used for bip39 conversions."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/index.ts",
																	"line": 223,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L223"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 722,
															"name": "masterAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Include if a Wallet uses a Regular Key Pair. It must be the master address of the account."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/index.ts",
																	"line": 222,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L222"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 724,
															"name": "mnemonicEncoding",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "If set to 'rfc1751', this interprets the mnemonic as a rippled RFC1751 mnemonic like\n                         "
																	},
																	{
																		"kind": "code",
																		"text": "`wallet_propose`"
																	},
																	{
																		"kind": "text",
																		"text": " generates in rippled. Otherwise the function defaults to bip39 decoding."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/index.ts",
																	"line": 224,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L224"
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "bip39"
																	},
																	{
																		"type": "literal",
																		"value": "rfc1751"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																725,
																723,
																722,
																724
															]
														}
													],
													"sources": [
														{
															"fileName": "xrpl/src/Wallet/index.ts",
															"line": 221,
															"character": 10,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L221"
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 691,
										"name": "Wallet"
									}
								}
							]
						},
						{
							"id": 695,
							"name": "fromSeed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 152,
									"character": 16,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L152"
								}
							],
							"signatures": [
								{
									"id": 696,
									"name": "fromSeed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Derives a wallet from a seed."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A Wallet derived from a seed."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 697,
											"name": "seed",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A string used to generate a keypair (publicKey/privateKey) to derive a wallet."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 698,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "(Optional) Options to derive a Wallet."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 699,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 701,
															"name": "algorithm",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The digital signature algorithm to generate an address for."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/index.ts",
																	"line": 154,
																	"character": 36,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L154"
																}
															],
															"type": {
																"type": "reference",
																"id": 688,
																"name": "ECDSA"
															}
														},
														{
															"id": 700,
															"name": "masterAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Include if a Wallet uses a Regular Key Pair. It must be the master address of the account."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/Wallet/index.ts",
																	"line": 154,
																	"character": 12,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L154"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																701,
																700
															]
														}
													],
													"sources": [
														{
															"fileName": "xrpl/src/Wallet/index.ts",
															"line": 154,
															"character": 10,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L154"
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 691,
										"name": "Wallet"
									}
								}
							]
						},
						{
							"id": 692,
							"name": "generate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/Wallet/index.ts",
									"line": 135,
									"character": 16,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L135"
								}
							],
							"signatures": [
								{
									"id": 693,
									"name": "generate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`generate()`"
											},
											{
												"kind": "text",
												"text": " creates a new random Wallet. In order to make this a valid account on ledger, you must\nSend XRP to it. On test networks that can be done with \"faucets\" which send XRP to any account which asks\nFor it. You can call "
											},
											{
												"kind": "code",
												"text": "`client.fundWallet()`"
											},
											{
												"kind": "text",
												"text": " in order to generate credentials and fund the account on test networks."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst { Wallet } = require('xrpl')\nconst wallet = Wallet.generate()\n```"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A new Wallet derived from a generated seed."
													}
												]
											},
											{
												"tag": "@throws",
												"content": [
													{
														"kind": "text",
														"text": "ValidationError when signing algorithm isn't valid"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 694,
											"name": "algorithm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The digital signature algorithm to generate an address for."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 688,
												"name": "ECDSA"
											},
											"defaultValue": "DEFAULT_ALGORITHM"
										}
									],
									"type": {
										"type": "reference",
										"id": 691,
										"name": "Wallet"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								740
							]
						},
						{
							"title": "Properties",
							"children": [
								750,
								749,
								748,
								751,
								702
							]
						},
						{
							"title": "Accessors",
							"children": [
								752
							]
						},
						{
							"title": "Methods",
							"children": [
								765,
								754,
								762,
								710,
								717,
								695,
								692
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/Wallet/index.ts",
							"line": 79,
							"character": 13,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/index.ts#L79"
						}
					]
				},
				{
					"id": 3431,
					"name": "XRPLFaucetError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error thrown when a client cannot generate a wallet from the testnet/devnet\nfaucets, or when the client cannot infer the faucet URL (i.e. when the Client\nis connected to mainnet)."
							}
						]
					},
					"children": [
						{
							"id": 3432,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 3433,
									"name": "new XRPLFaucetError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Construct an XrplError."
											}
										]
									},
									"parameters": [
										{
											"id": 3434,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The error message."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 3435,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data that caused the error."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3431,
										"name": "XRPLFaucetError"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3302,
										"name": "XrplError.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3301,
								"name": "XrplError.constructor"
							}
						},
						{
							"id": 3438,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 13,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3307,
								"name": "XrplError.data"
							}
						},
						{
							"id": 3437,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 12,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3306,
								"name": "XrplError.message"
							}
						},
						{
							"id": 3436,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 11,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3305,
								"name": "XrplError.name"
							}
						},
						{
							"id": 3441,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 54,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 3442,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Console.log in node uses util.inspect on object, and util.inspect allows\nus to customize its output:\nhttps://nodejs.org/api/util.html#util_custom_inspect_function_on_objects."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3311,
										"name": "XrplError.inspect"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3310,
								"name": "XrplError.inspect"
							}
						},
						{
							"id": 3439,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 38,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 3440,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Converts the Error to a human-readable String form."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3309,
										"name": "XrplError.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3308,
								"name": "XrplError.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3432
							]
						},
						{
							"title": "Properties",
							"children": [
								3438,
								3437,
								3436
							]
						},
						{
							"title": "Methods",
							"children": [
								3441,
								3439
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/errors.ts",
							"line": 129,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L129"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3300,
							"name": "XrplError"
						}
					]
				},
				{
					"id": 3300,
					"name": "XrplError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Base Error class for xrpl.js. All Errors thrown by xrpl.js should throw\nXrplErrors."
							}
						]
					},
					"children": [
						{
							"id": 3301,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 3302,
									"name": "new XrplError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Construct an XrplError."
											}
										]
									},
									"parameters": [
										{
											"id": 3303,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The error message."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 3304,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data that caused the error."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3300,
										"name": "XrplError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 3307,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 13,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 3306,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 12,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 3305,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 11,
									"character": 18,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 3310,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 54,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 3311,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Console.log in node uses util.inspect on object, and util.inspect allows\nus to customize its output:\nhttps://nodejs.org/api/util.html#util_custom_inspect_function_on_objects."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 3308,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/errors.ts",
									"line": 38,
									"character": 9,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 3309,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Converts the Error to a human-readable String form."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The String output of the Error."
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3301
							]
						},
						{
							"title": "Properties",
							"children": [
								3307,
								3306,
								3305
							]
						},
						{
							"title": "Methods",
							"children": [
								3310,
								3308
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/errors.ts",
							"line": 10,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/errors.ts#L10"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error",
							"qualifiedName": "Error",
							"package": "typescript"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3312,
							"name": "UnexpectedError"
						},
						{
							"type": "reference",
							"id": 3324,
							"name": "ConnectionError"
						},
						{
							"type": "reference",
							"id": 3336,
							"name": "RippledError"
						},
						{
							"type": "reference",
							"id": 3408,
							"name": "ValidationError"
						},
						{
							"type": "reference",
							"id": 3420,
							"name": "NotFoundError"
						},
						{
							"type": "reference",
							"id": 3431,
							"name": "XRPLFaucetError"
						}
					]
				},
				{
					"id": 1087,
					"name": "AccountChannelsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The account_channels method returns information about an account's Payment\nChannels. This includes only channels where the specified account is the\nchannel's source, not the destination. (A channel's \"source\" and \"owner\" are\nthe same.) All information retrieved is relative to a particular version of\nthe ledger. Returns an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountChannelsResponse",
								"target": 1097
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1089,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique identifier of an account, typically the account's address. The\nrequest returns channels where this account is the channel's owner/source."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L36"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1094,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1088,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L30"
								}
							],
							"type": {
								"type": "literal",
								"value": "account_channels"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1090,
							"name": "destination_account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique identifier of an account, typically the account's address. If\nprovided, filter results to payment channels whose destination is this\naccount."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L42"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1093,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1095,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1096,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1091,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of transactions to retrieve. Cannot be less than 10 or\nmore than 400. The default is 200."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L47"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1092,
							"name": "marker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value from a previous paginated response. Resume retrieving data where\nthat response left off."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L52"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1089,
								1094,
								1088,
								1090,
								1093,
								1095,
								1096,
								1091,
								1092
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountChannels.ts",
							"line": 27,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L27"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1097,
					"name": "AccountChannelsResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The expected response from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountChannelsRequest",
								"target": 1087
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1113,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1112,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1107,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1098,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L61"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1099,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1100,
											"name": "account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The address of the source/owner of the payment channels. This\ncorresponds to the account field of the request."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountChannels.ts",
													"line": 66,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L66"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1101,
											"name": "channels",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Payment channels owned by this account."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountChannels.ts",
													"line": 68,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L68"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1074,
													"name": "Channel"
												}
											}
										},
										{
											"id": 1102,
											"name": "ledger_hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The identifying hash of the ledger version used to generate this\nresponse."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountChannels.ts",
													"line": 73,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L73"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1103,
											"name": "ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the ledger version used to generate this response."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountChannels.ts",
													"line": 75,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L75"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1105,
											"name": "limit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The limit to how many channel objects were actually returned by this\nrequest."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountChannels.ts",
													"line": 85,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L85"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1106,
											"name": "marker",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Server-defined value for pagination. Pass this to the next call to\nresume getting results where this call left off. Omitted when there are\nno additional pages after this one."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountChannels.ts",
													"line": 91,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L91"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 1104,
											"name": "validated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the information in this response comes from a validated ledger\nversion. Otherwise, the information is subject to change."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountChannels.ts",
													"line": 80,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L80"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1100,
												1101,
												1102,
												1103,
												1105,
												1106,
												1104
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/accountChannels.ts",
											"line": 61,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L61"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1108,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1109,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1110,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1111,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1113,
								1112,
								1107,
								1098,
								1108,
								1109,
								1110,
								1111
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountChannels.ts",
							"line": 60,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L60"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1114,
					"name": "AccountCurrenciesRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`account_currencies`"
							},
							{
								"kind": "text",
								"text": " command retrieves a list of currencies that an\naccount can send or receive, based on its trust lines. Expects an\n"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountCurrenciesResponse",
								"target": 1122
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1116,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for the account, most commonly the account's address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountCurrencies.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountCurrencies.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1119,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1115,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountCurrencies.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountCurrencies.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": "account_currencies"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1118,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1120,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1121,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1117,
							"name": "strict",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, then the account field only accepts a public key or XRP Ledger\naddress. Otherwise, account can be a secret or passphrase (not\nrecommended). The default is false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountCurrencies.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountCurrencies.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1116,
								1119,
								1115,
								1118,
								1120,
								1121,
								1117
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountCurrencies.ts",
							"line": 10,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountCurrencies.ts#L10"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1122,
					"name": "AccountCurrenciesResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The expected response from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountCurrenciesRequest",
								"target": 1114
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1136,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1135,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1130,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1123,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountCurrencies.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountCurrencies.ts#L30"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1124,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1125,
											"name": "ledger_hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The identifying hash of the ledger version used to retrieve this data,\nas hex."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountCurrencies.ts",
													"line": 35,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountCurrencies.ts#L35"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1126,
											"name": "ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the ledger version used to retrieve this data."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountCurrencies.ts",
													"line": 37,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountCurrencies.ts#L37"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1127,
											"name": "receive_currencies",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of Currency Codes for currencies that this account can receive."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountCurrencies.ts",
													"line": 39,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountCurrencies.ts#L39"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1128,
											"name": "send_currencies",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of Currency Codes for currencies that this account can send."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountCurrencies.ts",
													"line": 41,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountCurrencies.ts#L41"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1129,
											"name": "validated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, this data comes from a validated ledger."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountCurrencies.ts",
													"line": 43,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountCurrencies.ts#L43"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1125,
												1126,
												1127,
												1128,
												1129
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/accountCurrencies.ts",
											"line": 30,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountCurrencies.ts#L30"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1131,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1132,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1133,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1134,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1136,
								1135,
								1130,
								1123,
								1131,
								1132,
								1133,
								1134
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountCurrencies.ts",
							"line": 29,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountCurrencies.ts#L29"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2408,
					"name": "AccountDelete",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An AccountDelete transaction deletes an account and any objects it owns in\nthe XRP Ledger, if possible, sending the account's remaining XRP to a\nspecified destination account."
							}
						]
					},
					"children": [
						{
							"id": 2412,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2415,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2410,
							"name": "Destination",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address of an account to receive any leftover XRP after deleting the\nsending account. Must be a funded account in the ledger, and must not be.\nthe sending account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountDelete.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountDelete.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2411,
							"name": "DestinationTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary destination tag that identifies a hosted recipient or other.\ninformation for the recipient of the deleted account's leftover XRP."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountDelete.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountDelete.ts#L24"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2413,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2416,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2417,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2418,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2424,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2414,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2419,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2421,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2420,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2422,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2409,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountDelete.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountDelete.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": "AccountDelete"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2423,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2412,
								2415,
								2410,
								2411,
								2413,
								2416,
								2417,
								2418,
								2424,
								2414,
								2419,
								2421,
								2420,
								2422,
								2409,
								2423
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/accountDelete.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountDelete.ts#L12"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 1137,
					"name": "AccountInfoAccountFlags",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1138,
							"name": "defaultRipple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable rippling on this address's trust lines by default. Required for issuing addresses; discouraged for others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1139,
							"name": "depositAuth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This account can only receive funds from transactions it sends, and from preauthorized accounts.\n(It has DepositAuth enabled.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 85,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L85"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1140,
							"name": "disableMasterKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disallows use of the master key to sign transactions for this account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 89,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L89"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1141,
							"name": "disallowIncomingCheck",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disallow incoming Checks from other accounts."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 93,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L93"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1142,
							"name": "disallowIncomingNFTokenOffer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disallow incoming NFTOffers from other accounts. Part of the DisallowIncoming amendment."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 97,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L97"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1143,
							"name": "disallowIncomingPayChan",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disallow incoming PayChannels from other accounts. Part of the DisallowIncoming amendment."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 101,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L101"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1144,
							"name": "disallowIncomingTrustline",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disallow incoming Trustlines from other accounts. Part of the DisallowIncoming amendment."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 105,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L105"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1145,
							"name": "disallowIncomingXRP",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Client applications should not send XRP to this account. Not enforced by rippled."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 109,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L109"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1146,
							"name": "globalFreeze",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "All assets issued by this address are frozen."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1147,
							"name": "noFreeze",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This address cannot freeze trust lines connected to it. Once enabled, cannot be disabled."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L117"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1148,
							"name": "passwordSpent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The account has used its free SetRegularKey transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L121"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1149,
							"name": "requireAuthorization",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This account must individually approve other users for those users to hold this account's issued currencies."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 125,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L125"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1150,
							"name": "requireDestinationTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Requires incoming payments to specify a Destination Tag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 129,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L129"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1138,
								1139,
								1140,
								1141,
								1142,
								1143,
								1144,
								1145,
								1146,
								1147,
								1148,
								1149,
								1150
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountInfo.ts",
							"line": 76,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L76"
						}
					]
				},
				{
					"id": 1151,
					"name": "AccountInfoRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`account_info`"
							},
							{
								"kind": "text",
								"text": " command retrieves information about an account, its\nactivity, and its XRP balance. All information retrieved is relative to a\nparticular version of the ledger. Returns an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountInfoResponse",
								"target": 1161
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1153,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for the account, most commonly the account's address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1158,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1152,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": "account_info"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1157,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1159,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1160,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1154,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to get info about this account's queued transactions. Can only be\nused when querying for the data from the current open ledger. Not available\nfrom servers in Reporting Mode."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1155,
							"name": "signer_lists",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Request SignerList objects associated with this account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L25"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1156,
							"name": "strict",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, then the account field only accepts a public key or XRP Ledger\naddress. Otherwise, account can be a secret or passphrase (not\nrecommended). The default is false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L31"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1153,
								1158,
								1152,
								1157,
								1159,
								1160,
								1154,
								1155,
								1156
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountInfo.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L12"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1161,
					"name": "AccountInfoResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountInfoRequest",
								"target": 1151
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1178,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1177,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1172,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1162,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 138,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L138"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1163,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1164,
											"name": "account_data",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The AccountRoot ledger object with this account's information, as stored\nin the ledger.\nIf requested, also includes Array of SignerList ledger objects\nassociated with this account for Multi-Signing. Since an account can own\nat most one SignerList, this array must have exactly one member if it is\npresent."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountInfo.ts",
													"line": 147,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L147"
												}
											],
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 776,
														"name": "default"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1165,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 1166,
																	"name": "signer_lists",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/models/methods/accountInfo.ts",
																			"line": 147,
																			"character": 34,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L147"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 1023,
																			"name": "default"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1166
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/accountInfo.ts",
																	"line": 147,
																	"character": 32,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L147"
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 1167,
											"name": "account_flags",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A map of account flags parsed out.  This will only be available for rippled nodes 1.11.0 and higher."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountInfo.ts",
													"line": 152,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L152"
												}
											],
											"type": {
												"type": "reference",
												"id": 1137,
												"name": "AccountInfoAccountFlags"
											}
										},
										{
											"id": 1168,
											"name": "ledger_current_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the current in-progress ledger, which was used when\nretrieving this information."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountInfo.ts",
													"line": 157,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L157"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1169,
											"name": "ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the ledger version used when retrieving this\ninformation. The information does not contain any changes from ledger\nversions newer than this one."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountInfo.ts",
													"line": 163,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L163"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1170,
											"name": "queue_data",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Information about queued transactions sent by this account. This\ninformation describes the state of the local rippled server, which may be\ndifferent from other servers in the peer-to-peer XRP Ledger network. Some\nfields may be omitted because the values are calculated \"lazily\" by the\nqueuing mechanism."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountInfo.ts",
													"line": 171,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L171"
												}
											],
											"type": {
												"type": "reference",
												"id": 1179,
												"name": "AccountQueueData"
											}
										},
										{
											"id": 1171,
											"name": "validated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "True if this data is from a validated ledger version; if omitted or set\nto false, this data is not final."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountInfo.ts",
													"line": 176,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L176"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1164,
												1167,
												1168,
												1169,
												1170,
												1171
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/accountInfo.ts",
											"line": 138,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L138"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1173,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1174,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1175,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1176,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1178,
								1177,
								1172,
								1162,
								1173,
								1174,
								1175,
								1176
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountInfo.ts",
							"line": 137,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L137"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1192,
					"name": "AccountLinesRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The account_lines method returns information about an account's trust lines,\n including balances in all non-XRP currencies and assets. All information\nretrieved is relative to a particular version of the ledger. Expects an\n"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountLinesResponse",
								"target": 1202
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1194,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for the account, most commonly the account's Address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1199,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1193,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 78,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L78"
								}
							],
							"type": {
								"type": "literal",
								"value": "account_lines"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1198,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1200,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1201,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1196,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of trust lines to retrieve. The server is not required to\nhonor this value. Must be within the inclusive range 10 to 400."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 90,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L90"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1197,
							"name": "marker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value from a previous paginated response. Resume retrieving data where\nthat response left off."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 1195,
							"name": "peer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Address of a second account. If provided, show only lines of trust\nconnecting the two accounts."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 85,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L85"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1194,
								1199,
								1193,
								1198,
								1200,
								1201,
								1196,
								1197,
								1195
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountLines.ts",
							"line": 75,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L75"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1202,
					"name": "AccountLinesResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountLinesRequest",
								"target": 1192
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1217,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1216,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1211,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1203,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 104,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L104"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1204,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1205,
											"name": "account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Unique Address of the account this request corresponds to. This is the\n\"perspective account\" for purpose of the trust lines."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountLines.ts",
													"line": 109,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L109"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1207,
											"name": "ledger_current_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the current open ledger, which was used when\nretrieving this information."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountLines.ts",
													"line": 119,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L119"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1209,
											"name": "ledger_hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The identifying hash the ledger version that was used when retrieving\nthis data."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountLines.ts",
													"line": 129,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L129"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1208,
											"name": "ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the ledger version that was used when retrieving\nthis data."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountLines.ts",
													"line": 124,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L124"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1206,
											"name": "lines",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of trust line objects. If the number of trust lines is large, only\nreturns up to the limit at a time."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountLines.ts",
													"line": 114,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L114"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1218,
													"name": "AccountLinesTrustline"
												}
											}
										},
										{
											"id": 1210,
											"name": "marker",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Server-defined value indicating the response is paginated. Pass this to\nthe next call to resume where this call left off. Omitted when there are\nNo additional pages after this one."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountLines.ts",
													"line": 135,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L135"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1205,
												1207,
												1209,
												1208,
												1206,
												1210
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/accountLines.ts",
											"line": 104,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L104"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1212,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1213,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1214,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1215,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1217,
								1216,
								1211,
								1203,
								1212,
								1213,
								1214,
								1215
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountLines.ts",
							"line": 103,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L103"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1218,
					"name": "AccountLinesTrustline",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1219,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique Address of the counterparty to this trust line."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 5,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L5"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1228,
							"name": "authorized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, this account has authorized this trust line. The default is false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L55"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1220,
							"name": "balance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Representation of the numeric balance currently held against this line. A\npositive balance means that the perspective account holds value; a negative\nBalance means that the perspective account owes value."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1221,
							"name": "currency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Currency Code identifying what currency this trust line can hold."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1230,
							"name": "freeze",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, this account has frozen this trust line. The default is false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 59,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L59"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1231,
							"name": "freeze_peer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the peer account has frozen this trust line. The default is\nfalse."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 64,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L64"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1222,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum amount of the given currency that this account is willing to\nowe the peer account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1223,
							"name": "limit_peer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum amount of currency that the issuer account is willing to owe\nthe perspective account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1226,
							"name": "no_ripple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, this account has enabled the No Ripple flag for this trust line.\nIf present and false, this account has disabled the No Ripple flag, but,\nbecause the account also has the Default Ripple flag enabled, that is not\nconsidered the default state. If omitted, the account has the No Ripple\nflag disabled for this trust line and Default Ripple disabled."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L45"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1227,
							"name": "no_ripple_peer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the peer account has enabled the No Ripple flag for this trust\nline. If present and false, this account has disabled the No Ripple flag,\nbut, because the account also has the Default Ripple flag enabled, that is\nnot considered the default state. If omitted, the account has the No Ripple\nflag disabled for this trust line and Default Ripple disabled."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 53,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L53"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1229,
							"name": "peer_authorized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the peer account has authorized this trust line. The default is false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 57,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L57"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1224,
							"name": "quality_in",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rate at which the account values incoming balances on this trust line, as\na ratio of this value per 1 billion units. (For example, a value of 500\nmillion represents a 0.5:1 ratio.) As a special case, 0 is treated as a\n1:1 ratio."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1225,
							"name": "quality_out",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rate at which the account values outgoing balances on this trust line, as\na ratio of this value per 1 billion units. (For example, a value of 500\nmillion represents a 0.5:1 ratio.) As a special case, 0 is treated as a 1:1\nratio."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountLines.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L37"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1219,
								1228,
								1220,
								1221,
								1230,
								1231,
								1222,
								1223,
								1226,
								1227,
								1229,
								1224,
								1225
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountLines.ts",
							"line": 3,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountLines.ts#L3"
						}
					]
				},
				{
					"id": 1232,
					"name": "AccountNFToken",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "One NFToken that might be returned from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountNFTsRequest",
								"target": 1239
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1233,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountNFTs.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1234,
							"name": "Issuer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountNFTs.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1235,
							"name": "NFTokenID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountNFTs.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1236,
							"name": "NFTokenTaxon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountNFTs.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L36"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1237,
							"name": "URI",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountNFTs.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L37"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1238,
							"name": "nft_serial",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountNFTs.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L38"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1233,
								1234,
								1235,
								1236,
								1237,
								1238
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountNFTs.ts",
							"line": 32,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L32"
						}
					]
				},
				{
					"id": 1239,
					"name": "AccountNFTsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`account_nfts`"
							},
							{
								"kind": "text",
								"text": " method retrieves all of the NFTs currently owned by the\nspecified account."
							}
						]
					},
					"children": [
						{
							"id": 1241,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique identifier of an account, typically the account's address. The\nrequest returns NFTs owned by this account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountNFTs.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1245,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1240,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountNFTs.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L10"
								}
							],
							"type": {
								"type": "literal",
								"value": "account_nfts"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1244,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1246,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1247,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1242,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of NFTokens to retrieve."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountNFTs.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1243,
							"name": "marker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value from a previous paginated response. Resume retrieving data where\nthat response left off."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountNFTs.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L24"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1241,
								1245,
								1240,
								1244,
								1246,
								1247,
								1242,
								1243
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountNFTs.ts",
							"line": 9,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L9"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1248,
					"name": "AccountNFTsResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountNFTsRequest",
								"target": 1239
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1263,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1262,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1257,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1249,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountNFTs.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L47"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1250,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1251,
											"name": "account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The account requested."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountNFTs.ts",
													"line": 51,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L51"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1252,
											"name": "account_nfts",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A list of NFTs owned by the specified account."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountNFTs.ts",
													"line": 55,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L55"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1232,
													"name": "AccountNFToken"
												}
											}
										},
										{
											"id": 1253,
											"name": "ledger_current_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the current open ledger, which was used when\nretrieving this information."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountNFTs.ts",
													"line": 60,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L60"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1256,
											"name": "limit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The limit that was used to fulfill this request."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountNFTs.ts",
													"line": 70,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L70"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1255,
											"name": "marker",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Server-defined value indicating the response is paginated. Pass this to\nthe next call to resume where this call left off. Omitted when there are\nNo additional pages after this one."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountNFTs.ts",
													"line": 68,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L68"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 1254,
											"name": "validated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, this data comes from a validated ledger."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountNFTs.ts",
													"line": 62,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L62"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1251,
												1252,
												1253,
												1256,
												1255,
												1254
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/accountNFTs.ts",
											"line": 47,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L47"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1258,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1259,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1260,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1261,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1263,
								1262,
								1257,
								1249,
								1258,
								1259,
								1260,
								1261
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountNFTs.ts",
							"line": 46,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountNFTs.ts#L46"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1266,
					"name": "AccountObjectsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The account_objects command returns the raw ledger format for all objects\nowned by an account. For a higher-level view of an account's trust lines and\nbalances, see the account_lines method instead. Expects a response in the\nform of an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountObjectsResponse",
								"target": 1277
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1268,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for the account, most commonly the account's address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountObjects.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L38"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1274,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1267,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountObjects.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L36"
								}
							],
							"type": {
								"type": "literal",
								"value": "account_objects"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1270,
							"name": "deletion_blockers_only",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the response only includes objects that would block this account\nfrom being deleted. The default is false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountObjects.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1273,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1275,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1276,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1271,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of objects to include in the results. Must be within\nthe inclusive range 10 to 400 on non-admin connections. The default is 200."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountObjects.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L54"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1272,
							"name": "marker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value from a previous paginated response. Resume retrieving data where\nthat response left off."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountObjects.ts",
									"line": 59,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L59"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 1269,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If included, filter results to include only this type of ledger object.\nThe valid types are: Check , DepositPreauth, Escrow, Offer, PayChannel,\nSignerList, Ticket, and RippleState (trust line)."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountObjects.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L44"
								}
							],
							"type": {
								"type": "reference",
								"id": 1265,
								"name": "AccountObjectType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1268,
								1274,
								1267,
								1270,
								1273,
								1275,
								1276,
								1271,
								1272,
								1269
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountObjects.ts",
							"line": 33,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L33"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1277,
					"name": "AccountObjectsResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountObjectsRequest",
								"target": 1266
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1294,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1293,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1288,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1278,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountObjects.ts",
									"line": 82,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L82"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1279,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1280,
											"name": "account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Unique Address of the account this request corresponds to."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountObjects.ts",
													"line": 84,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L84"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1281,
											"name": "account_objects",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of objects owned by this account. Each object is in its raw\nledger format."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountObjects.ts",
													"line": 89,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L89"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1264,
													"name": "AccountObject"
												}
											}
										},
										{
											"id": 1284,
											"name": "ledger_current_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the current in-progress ledger version, which was\nused to generate this response."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountObjects.ts",
													"line": 104,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L104"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1282,
											"name": "ledger_hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The identifying hash of the ledger that was used to generate this\nresponse."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountObjects.ts",
													"line": 94,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L94"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1283,
											"name": "ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the ledger version that was used to generate this\nresponse."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountObjects.ts",
													"line": 99,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L99"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1285,
											"name": "limit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The limit that was used in this request, if any."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountObjects.ts",
													"line": 106,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L106"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1286,
											"name": "marker",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Server-defined value indicating the response is paginated. Pass this to\nthe next call to resume where this call left off. Omitted when there are\nno additional pages after this one."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountObjects.ts",
													"line": 112,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L112"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1287,
											"name": "validated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If included and set to true, the information in this response comes from\na validated ledger version. Otherwise, the information is subject to\nchange."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountObjects.ts",
													"line": 118,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L118"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1280,
												1281,
												1284,
												1282,
												1283,
												1285,
												1286,
												1287
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/accountObjects.ts",
											"line": 82,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L82"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1289,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1290,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1291,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1292,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1294,
								1293,
								1288,
								1278,
								1289,
								1290,
								1291,
								1292
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountObjects.ts",
							"line": 81,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L81"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1295,
					"name": "AccountOffer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1301,
							"name": "expiration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A time after which this offer is considered unfunded, as the number of\nseconds since the Ripple Epoch. See also: Offer Expiration."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountOffers.ts",
									"line": 60,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L60"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1296,
							"name": "flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Options set for this offer entry as bit-flags."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountOffers.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L38"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1300,
							"name": "quality",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The exchange rate of the Offer, as the ratio of the original taker_pays\ndivided by the original taker_gets. When executing offers, the offer with\nthe most favorable (lowest) quality is consumed first; offers with the same\nquality are executed from oldest to newest."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountOffers.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L55"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1297,
							"name": "seq",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sequence number of the transaction that created this entry."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountOffers.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1298,
							"name": "taker_gets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount the account placing this Offer receives."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountOffers.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L44"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 1299,
							"name": "taker_pays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount the account placing this Offer pays."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountOffers.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L48"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1301,
								1296,
								1300,
								1297,
								1298,
								1299
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountOffers.ts",
							"line": 36,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L36"
						}
					]
				},
				{
					"id": 1302,
					"name": "AccountOffersRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The account_offers method retrieves a list of offers made by a given account\nthat are outstanding as of a particular ledger version. Expects a response in\nthe form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountOffersResponse",
								"target": 1312
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1304,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for the account, most commonly the account's Address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountOffers.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1309,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1303,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountOffers.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L15"
								}
							],
							"type": {
								"type": "literal",
								"value": "account_offers"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1308,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1310,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1311,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1305,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of transactions to retrieve. The server is not required\nto honor this value. Must be within the inclusive range 10 to 400."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountOffers.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L22"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1306,
							"name": "marker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value from a previous paginated response. Resume retrieving data where\nthat response left off."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountOffers.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 1307,
							"name": "strict",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, then the account field only accepts a public key or XRP Ledger\naddress. Otherwise, account can be a secret or passphrase (not\nrecommended). The default is false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountOffers.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1304,
								1309,
								1303,
								1308,
								1310,
								1311,
								1305,
								1306,
								1307
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountOffers.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L12"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1312,
					"name": "AccountOffersResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountOffersRequest",
								"target": 1302
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1327,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1326,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1321,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1313,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountOffers.ts",
									"line": 69,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L69"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1314,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1315,
											"name": "account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Unique Address identifying the account that made the offers."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountOffers.ts",
													"line": 71,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L71"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1317,
											"name": "ledger_current_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the current in-progress ledger version, which was\nused when retrieving this data."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountOffers.ts",
													"line": 82,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L82"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1319,
											"name": "ledger_hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The identifying hash of the ledger version that was used when retrieving\nthis data."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountOffers.ts",
													"line": 92,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L92"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1318,
											"name": "ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the ledger version that was used when retrieving\nthis data, as requested."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountOffers.ts",
													"line": 87,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L87"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1320,
											"name": "marker",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Server-defined value indicating the response is paginated. Pass this to\nthe next call to resume where this call left off. Omitted when there are\nno pages of information after this one."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountOffers.ts",
													"line": 98,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L98"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 1316,
											"name": "offers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of objects, where each object represents an offer made by this\naccount that is outstanding as of the requested ledger version. If the\nnumber of offers is large, only returns up to limit at a time."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountOffers.ts",
													"line": 77,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L77"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1295,
													"name": "AccountOffer"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1315,
												1317,
												1319,
												1318,
												1320,
												1316
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/accountOffers.ts",
											"line": 69,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L69"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1322,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1323,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1324,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1325,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1327,
								1326,
								1321,
								1313,
								1322,
								1323,
								1324,
								1325
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountOffers.ts",
							"line": 68,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountOffers.ts#L68"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1179,
					"name": "AccountQueueData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1181,
							"name": "auth_change_queued",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether a transaction in the queue changes this address's ways of\nauthorizing transactions. If true, this address can queue no further\ntransactions until that transaction has been executed or dropped from the\nqueue."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 62,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L62"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1183,
							"name": "highest_sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The highest Sequence Number among transactions queued by this address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 66,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L66"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1182,
							"name": "lowest_sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The lowest Sequence Number among transactions queued by this address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 64,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L64"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1184,
							"name": "max_spend_drops_total",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of drops of XRP that could be debited from this address if\nevery transaction in the queue consumes the maximum amount of XRP possible."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 71,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L71"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1185,
							"name": "transactions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Information about each queued transaction from this address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 73,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L73"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1186,
									"name": "AccountQueueTransaction"
								}
							}
						},
						{
							"id": 1180,
							"name": "txn_count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Number of queued transactions from this address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L55"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1181,
								1183,
								1182,
								1184,
								1185,
								1180
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountInfo.ts",
							"line": 53,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L53"
						}
					]
				},
				{
					"id": 1186,
					"name": "AccountQueueTransaction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1187,
							"name": "auth_change",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether this transaction changes this address's ways of authorizing\ntransactions."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1188,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Transaction Cost of this transaction, in drops of XRP."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 41,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L41"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1189,
							"name": "fee_level",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transaction cost of this transaction, relative to the minimum cost for\nthis type of transaction, in fee levels."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 46,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L46"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1190,
							"name": "max_spend_drops",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum amount of XRP, in drops, this transaction could send or destroy."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L48"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1191,
							"name": "seq",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Sequence Number of this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountInfo.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L50"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1187,
								1188,
								1189,
								1190,
								1191
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountInfo.ts",
							"line": 34,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountInfo.ts#L34"
						}
					]
				},
				{
					"id": 2385,
					"name": "AccountSet",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An AccountSet transaction modifies the properties of an account in the XRP\nLedger."
							}
						]
					},
					"children": [
						{
							"id": 2396,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2399,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2388,
							"name": "ClearFlag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unique identifier of a flag to disable for this account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 130,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L130"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2389,
							"name": "Domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The domain that owns this account, as a string of hex representing the.\nASCII for the domain in lowercase."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 135,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L135"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2390,
							"name": "EmailHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash of an email address to be used for generating an avatar image."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 137,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L137"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2397,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2387,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 128,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L128"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"id": 2378,
										"name": "AccountSetFlagsInterface"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2400,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2401,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2391,
							"name": "MessageKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Public key for sending encrypted messages to this account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 139,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L139"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2395,
							"name": "NFTokenMinter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets an alternate account that is allowed to mint NFTokens on this\naccount's behalf using NFTokenMint's "
									},
									{
										"kind": "code",
										"text": "`Issuer`"
									},
									{
										"kind": "text",
										"text": " field."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 158,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L158"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2407,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2398,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2392,
							"name": "SetFlag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer flag to enable for this account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 141,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L141"
								}
							],
							"type": {
								"type": "reference",
								"id": 2356,
								"name": "AccountSetAsfFlags"
							}
						},
						{
							"id": 2402,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2404,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2403,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2394,
							"name": "TickSize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tick size to use for offers involving a currency issued by this address.\nThe exchange rates of those offers is rounded to this many significant\ndigits. Valid values are 3 to 15 inclusive, or 0 to disable."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 153,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L153"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2405,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2386,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L127"
								}
							],
							"type": {
								"type": "literal",
								"value": "AccountSet"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2393,
							"name": "TransferRate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fee to charge when users transfer this account's issued currencies,\nrepresented as billionths of a unit. Cannot be more than 2000000000 or less\nthan 1000000000, except for the special case 0 meaning no fee."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 147,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L147"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2406,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2396,
								2399,
								2388,
								2389,
								2390,
								2397,
								2387,
								2400,
								2401,
								2391,
								2395,
								2407,
								2398,
								2392,
								2402,
								2404,
								2403,
								2394,
								2405,
								2386,
								2393,
								2406
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/accountSet.ts",
							"line": 126,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L126"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2378,
					"name": "AccountSetFlagsInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map of flags to boolean values representing "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountSet",
								"target": 2385
							},
							{
								"kind": "text",
								"text": " transaction\nflags."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\n const accountSetTx: AccountSet = {\n   TransactionType: 'AccountSet',\n   Account: 'rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn',\n   Flags: {\n     tfOptionalDestTag: true,\n     tfRequireAuth: true\n   },\n }\n\n// Autofill the tx to see how flags actually look compared to the interface usage.\nconst autofilledTx = await client.autofill(accountSetTx)\nconsole.log(autofilledTx)\n// {\n//  TransactionType: 'AccountSet',\n//  Account: 'rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn',\n//  Flags: 393216,\n//  Sequence: 1,\n//  Fee: '12',\n//  LastLedgerSequence: 21971793\n// }\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2384,
							"name": "tfAllowXRP",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L117"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2383,
							"name": "tfDisallowXRP",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 116,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L116"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2382,
							"name": "tfOptionalAuth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 115,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L115"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2380,
							"name": "tfOptionalDestTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2381,
							"name": "tfRequireAuth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 114,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L114"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2379,
							"name": "tfRequireDestTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/accountSet.ts",
									"line": 112,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L112"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2384,
								2383,
								2382,
								2380,
								2381,
								2379
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/accountSet.ts",
							"line": 111,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/accountSet.ts#L111"
						}
					]
				},
				{
					"id": 1328,
					"name": "AccountTxRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The account_tx method retrieves a list of transactions that involved the\nspecified account. Expects a response in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountTxResponse",
								"target": 1341
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1330,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for the account, most commonly the account's address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1338,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1333,
							"name": "binary",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, return transactions as hex strings instead of JSON. The default is\nfalse."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1329,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L14"
								}
							],
							"type": {
								"type": "literal",
								"value": "account_tx"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1334,
							"name": "forward",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, returns values indexed with the oldest ledger first. Otherwise,\nthe results are indexed with the newest ledger first."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L38"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1337,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1339,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1340,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1332,
							"name": "ledger_index_max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use to specify the most recent ledger to include transactions from. A\nvalue of -1 instructs the server to use the most recent validated ledger\nversion available."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L28"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1331,
							"name": "ledger_index_min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use to specify the earliest ledger to include transactions from. A value\nof -1 instructs the server to use the earliest validated ledger version\navailable."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L22"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1335,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Default varies. Limit the number of transactions to retrieve. The server\nis not required to honor this value."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 43,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L43"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1336,
							"name": "marker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value from a previous paginated response. Resume retrieving data where\nthat response left off. This value is stable even if there is a change in\nthe server's range of available ledgers."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1330,
								1338,
								1333,
								1329,
								1334,
								1337,
								1339,
								1340,
								1332,
								1331,
								1335,
								1336
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountTx.ts",
							"line": 13,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L13"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1341,
					"name": "AccountTxResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expected response from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AccountTxRequest",
								"target": 1328
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1357,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1356,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1351,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1342,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 77,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L77"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1343,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1344,
											"name": "account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Unique Address identifying the related account."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountTx.ts",
													"line": 79,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L79"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1346,
											"name": "ledger_index_max",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the most recent ledger actually searched for\ntransactions."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountTx.ts",
													"line": 89,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L89"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1345,
											"name": "ledger_index_min",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the earliest ledger actually searched for\ntransactions."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountTx.ts",
													"line": 84,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L84"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1347,
											"name": "limit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The limit value used in the request."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountTx.ts",
													"line": 91,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L91"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1348,
											"name": "marker",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Server-defined value indicating the response is paginated. Pass this\nto the next call to resume where this call left off."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountTx.ts",
													"line": 96,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L96"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 1349,
											"name": "transactions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of transactions matching the request's criteria, as explained\nbelow."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountTx.ts",
													"line": 101,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L101"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1358,
													"name": "AccountTxTransaction"
												}
											}
										},
										{
											"id": 1350,
											"name": "validated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If included and set to true, the information in this response comes from\na validated ledger version. Otherwise, the information is subject to\nchange."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/accountTx.ts",
													"line": 107,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L107"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1344,
												1346,
												1345,
												1347,
												1348,
												1349,
												1350
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/accountTx.ts",
											"line": 77,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L77"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1352,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1353,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1354,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1355,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1357,
								1356,
								1351,
								1342,
								1352,
								1353,
								1354,
								1355
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountTx.ts",
							"line": 76,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L76"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1358,
					"name": "AccountTxTransaction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1359,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger version that included this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L54"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1360,
							"name": "meta",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If binary is True, then this is a hex string of the transaction metadata.\nOtherwise, the transaction metadata is included in JSON format."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 59,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L59"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 2984,
										"name": "TransactionMetadata"
									}
								]
							}
						},
						{
							"id": 1361,
							"name": "tx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "JSON object defining the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L61"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "Object"
							}
						},
						{
							"id": 1362,
							"name": "tx_blob",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unique hashed String representing the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 63,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L63"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1363,
							"name": "validated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the transaction is included in a validated ledger. Any\ntransaction not yet in a validated ledger is subject to change."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountTx.ts",
									"line": 68,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L68"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1359,
								1360,
								1361,
								1362,
								1363
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountTx.ts",
							"line": 52,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountTx.ts#L52"
						}
					]
				},
				{
					"id": 1050,
					"name": "BaseRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1053,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1052,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1051,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1053,
								1052,
								1051
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/baseMethod.ts",
							"line": 5,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L5"
						}
					],
					"indexSignature": {
						"id": 1054,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 1055,
								"name": "x",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					},
					"extendedBy": [
						{
							"type": "reference",
							"id": 1087,
							"name": "AccountChannelsRequest"
						},
						{
							"type": "reference",
							"id": 1114,
							"name": "AccountCurrenciesRequest"
						},
						{
							"type": "reference",
							"id": 1151,
							"name": "AccountInfoRequest"
						},
						{
							"type": "reference",
							"id": 1192,
							"name": "AccountLinesRequest"
						},
						{
							"type": "reference",
							"id": 1239,
							"name": "AccountNFTsRequest"
						},
						{
							"type": "reference",
							"id": 1266,
							"name": "AccountObjectsRequest"
						},
						{
							"type": "reference",
							"id": 1302,
							"name": "AccountOffersRequest"
						},
						{
							"type": "reference",
							"id": 1328,
							"name": "AccountTxRequest"
						},
						{
							"type": "reference",
							"id": 1367,
							"name": "GatewayBalancesRequest"
						},
						{
							"type": "reference",
							"id": 1402,
							"name": "NoRippleCheckRequest"
						},
						{
							"type": "reference",
							"id": 1425,
							"name": "LedgerRequest"
						},
						{
							"type": "reference",
							"id": 1485,
							"name": "LedgerClosedRequest"
						},
						{
							"type": "reference",
							"id": 1501,
							"name": "LedgerCurrentRequest"
						},
						{
							"type": "reference",
							"id": 1516,
							"name": "LedgerDataRequest"
						},
						{
							"type": "reference",
							"id": 1548,
							"name": "LedgerEntryRequest"
						},
						{
							"type": "reference",
							"id": 1600,
							"name": "SubmitRequest"
						},
						{
							"type": "reference",
							"id": 1630,
							"name": "SubmitMultisignedRequest"
						},
						{
							"type": "reference",
							"id": 1651,
							"name": "TransactionEntryRequest"
						},
						{
							"type": "reference",
							"id": 1672,
							"name": "TxRequest"
						},
						{
							"type": "reference",
							"id": 1697,
							"name": "BookOffersRequest"
						},
						{
							"type": "reference",
							"id": 1743,
							"name": "DepositAuthorizedRequest"
						},
						{
							"type": "reference",
							"id": 1814,
							"name": "RipplePathFindRequest"
						},
						{
							"type": "reference",
							"id": 1847,
							"name": "ChannelVerifyRequest"
						},
						{
							"type": "reference",
							"id": 1866,
							"name": "SubscribeRequest"
						},
						{
							"type": "reference",
							"id": 1982,
							"name": "UnsubscribeRequest"
						},
						{
							"type": "reference",
							"id": 2003,
							"name": "FeeRequest"
						},
						{
							"type": "reference",
							"id": 2034,
							"name": "ManifestRequest"
						},
						{
							"type": "reference",
							"id": 2057,
							"name": "ServerInfoRequest"
						},
						{
							"type": "reference",
							"id": 2129,
							"name": "ServerStateRequest"
						},
						{
							"type": "reference",
							"id": 2204,
							"name": "PingRequest"
						},
						{
							"type": "reference",
							"id": 2220,
							"name": "RandomRequest"
						},
						{
							"type": "reference",
							"id": 2244,
							"name": "NFTBuyOffersRequest"
						},
						{
							"type": "reference",
							"id": 2263,
							"name": "NFTSellOffersRequest"
						},
						{
							"type": "reference",
							"id": 2282,
							"name": "NFTInfoRequest"
						},
						{
							"type": "reference",
							"id": 2298,
							"name": "NFTHistoryRequest"
						}
					]
				},
				{
					"id": 1056,
					"name": "BaseResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1064,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1063,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1057,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1060,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L36"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 1058,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1059,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1061,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							}
						},
						{
							"id": 1062,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1064,
								1063,
								1057,
								1060,
								1058,
								1059,
								1061,
								1062
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/baseMethod.ts",
							"line": 32,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L32"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1097,
							"name": "AccountChannelsResponse"
						},
						{
							"type": "reference",
							"id": 1122,
							"name": "AccountCurrenciesResponse"
						},
						{
							"type": "reference",
							"id": 1161,
							"name": "AccountInfoResponse"
						},
						{
							"type": "reference",
							"id": 1202,
							"name": "AccountLinesResponse"
						},
						{
							"type": "reference",
							"id": 1248,
							"name": "AccountNFTsResponse"
						},
						{
							"type": "reference",
							"id": 1277,
							"name": "AccountObjectsResponse"
						},
						{
							"type": "reference",
							"id": 1312,
							"name": "AccountOffersResponse"
						},
						{
							"type": "reference",
							"id": 1341,
							"name": "AccountTxResponse"
						},
						{
							"type": "reference",
							"id": 1376,
							"name": "GatewayBalancesResponse"
						},
						{
							"type": "reference",
							"id": 1412,
							"name": "NoRippleCheckResponse"
						},
						{
							"type": "reference",
							"id": 1438,
							"name": "LedgerResponse"
						},
						{
							"type": "reference",
							"id": 1489,
							"name": "LedgerClosedResponse"
						},
						{
							"type": "reference",
							"id": 1505,
							"name": "LedgerCurrentResponse"
						},
						{
							"type": "reference",
							"id": 1530,
							"name": "LedgerDataResponse"
						},
						{
							"type": "reference",
							"id": 1585,
							"name": "LedgerEntryResponse"
						},
						{
							"type": "reference",
							"id": 1606,
							"name": "SubmitResponse"
						},
						{
							"type": "reference",
							"id": 1636,
							"name": "SubmitMultisignedResponse"
						},
						{
							"type": "reference",
							"id": 1658,
							"name": "TransactionEntryResponse"
						},
						{
							"type": "reference",
							"id": 1680,
							"name": "TxResponse"
						},
						{
							"type": "reference",
							"id": 1728,
							"name": "BookOffersResponse"
						},
						{
							"type": "reference",
							"id": 1751,
							"name": "DepositAuthorizedResponse"
						},
						{
							"type": "reference",
							"id": 1793,
							"name": "PathFindResponse"
						},
						{
							"type": "reference",
							"id": 1825,
							"name": "RipplePathFindResponse"
						},
						{
							"type": "reference",
							"id": 1855,
							"name": "ChannelVerifyResponse"
						},
						{
							"type": "reference",
							"id": 1877,
							"name": "SubscribeResponse"
						},
						{
							"type": "reference",
							"id": 1990,
							"name": "UnsubscribeResponse"
						},
						{
							"type": "reference",
							"id": 2007,
							"name": "FeeResponse"
						},
						{
							"type": "reference",
							"id": 2039,
							"name": "ManifestResponse"
						},
						{
							"type": "reference",
							"id": 2061,
							"name": "ServerInfoResponse"
						},
						{
							"type": "reference",
							"id": 2133,
							"name": "ServerStateResponse"
						},
						{
							"type": "reference",
							"id": 2208,
							"name": "PingResponse"
						},
						{
							"type": "reference",
							"id": 2224,
							"name": "RandomResponse"
						},
						{
							"type": "reference",
							"id": 2251,
							"name": "NFTBuyOffersResponse"
						},
						{
							"type": "reference",
							"id": 2270,
							"name": "NFTSellOffersResponse"
						},
						{
							"type": "reference",
							"id": 2289,
							"name": "NFTInfoResponse"
						},
						{
							"type": "reference",
							"id": 2311,
							"name": "NFTHistoryResponse"
						}
					]
				},
				{
					"id": 2334,
					"name": "BaseTransaction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Every transaction has the same set of common fields."
							}
						]
					},
					"children": [
						{
							"id": 2335,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2339,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2337,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2340,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							}
						},
						{
							"id": 2341,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2342,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							}
						},
						{
							"id": 2348,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2338,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2343,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							}
						},
						{
							"id": 2345,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2344,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2346,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2336,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 100,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L100"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2347,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2335,
								2339,
								2337,
								2340,
								2341,
								2342,
								2348,
								2338,
								2343,
								2345,
								2344,
								2346,
								2336,
								2347
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/common.ts",
							"line": 93,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L93"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2385,
							"name": "AccountSet"
						},
						{
							"type": "reference",
							"id": 2408,
							"name": "AccountDelete"
						},
						{
							"type": "reference",
							"id": 2425,
							"name": "CheckCancel"
						},
						{
							"type": "reference",
							"id": 2441,
							"name": "CheckCash"
						},
						{
							"type": "reference",
							"id": 2459,
							"name": "CheckCreate"
						},
						{
							"type": "reference",
							"id": 2479,
							"name": "DepositPreauth"
						},
						{
							"type": "reference",
							"id": 2496,
							"name": "EscrowCancel"
						},
						{
							"type": "reference",
							"id": 2513,
							"name": "EscrowCreate"
						},
						{
							"type": "reference",
							"id": 2534,
							"name": "EscrowFinish"
						},
						{
							"type": "reference",
							"id": 2553,
							"name": "EnableAmendment"
						},
						{
							"type": "reference",
							"id": 2573,
							"name": "NFTokenAcceptOffer"
						},
						{
							"type": "reference",
							"id": 2591,
							"name": "NFTokenBurn"
						},
						{
							"type": "reference",
							"id": 2608,
							"name": "NFTokenCancelOffer"
						},
						{
							"type": "reference",
							"id": 2624,
							"name": "NFTokenCreateOffer"
						},
						{
							"type": "reference",
							"id": 2648,
							"name": "NFTokenMint"
						},
						{
							"type": "reference",
							"id": 2677,
							"name": "OfferCancel"
						},
						{
							"type": "reference",
							"id": 2703,
							"name": "OfferCreate"
						},
						{
							"type": "reference",
							"id": 2730,
							"name": "Payment"
						},
						{
							"type": "reference",
							"id": 2758,
							"name": "PaymentChannelClaim"
						},
						{
							"type": "reference",
							"id": 2778,
							"name": "PaymentChannelCreate"
						},
						{
							"type": "reference",
							"id": 2799,
							"name": "PaymentChannelFund"
						},
						{
							"type": "reference",
							"id": 2820,
							"name": "SetFeePreAmendment"
						},
						{
							"type": "reference",
							"id": 2839,
							"name": "SetFeePostAmendment"
						},
						{
							"type": "reference",
							"id": 2857,
							"name": "SetRegularKey"
						},
						{
							"type": "reference",
							"id": 2873,
							"name": "SignerListSet"
						},
						{
							"type": "reference",
							"id": 2890,
							"name": "TicketCreate"
						},
						{
							"type": "reference",
							"id": 2918,
							"name": "TrustSet"
						}
					]
				},
				{
					"id": 1707,
					"name": "BookOffer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1714,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address of the account that placed this Offer."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L10"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 967,
								"name": "default.Account"
							}
						},
						{
							"id": 1718,
							"name": "BookDirectory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the Offer Directory that links to this Offer."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L24"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 971,
								"name": "default.BookDirectory"
							}
						},
						{
							"id": 1719,
							"name": "BookNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A hint indicating which page of the Offer Directory links to this object,\nin case the directory consists of multiple pages."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L29"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 972,
								"name": "default.BookNode"
							}
						},
						{
							"id": 1723,
							"name": "Expiration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The time this Offer expires, in seconds since the Ripple Epoch."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 46,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L46"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 976,
								"name": "default.Expiration"
							}
						},
						{
							"id": 1713,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A bit-map of boolean flags enabled for this Offer."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 966,
								"name": "default.Flags"
							}
						},
						{
							"id": 1712,
							"name": "LedgerEntryType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L6"
								}
							],
							"type": {
								"type": "literal",
								"value": "Offer"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 965,
								"name": "default.LedgerEntryType"
							}
						},
						{
							"id": 1720,
							"name": "OwnerNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A hint indicating which page of the Owner Directory links to this object,\nin case the directory consists of multiple pages."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 973,
								"name": "default.OwnerNode"
							}
						},
						{
							"id": 1721,
							"name": "PreviousTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The identifying hash of the transaction that most recently modified this\nobject."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 974,
								"name": "default.PreviousTxnID"
							}
						},
						{
							"id": 1722,
							"name": "PreviousTxnLgrSeq",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The index of the ledger that contains the transaction that most recently\nmodified this object."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 975,
								"name": "default.PreviousTxnLgrSeq"
							}
						},
						{
							"id": 1715,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Sequence value of the OfferCreate transaction that created this Offer\nobject. Used in combination with the Account to identify this Offer."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 968,
								"name": "default.Sequence"
							}
						},
						{
							"id": 1717,
							"name": "TakerGets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The remaining amount and type of currency being provided by the Offer\ncreator."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L22"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 970,
								"name": "default.TakerGets"
							}
						},
						{
							"id": 1716,
							"name": "TakerPays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The remaining amount and type of currency requested by the Offer creator."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Offer.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Offer.ts#L17"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 969,
								"name": "default.TakerPays"
							}
						},
						{
							"id": 1724,
							"name": "index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/BaseLedgerEntry.ts",
									"line": 2,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/BaseLedgerEntry.ts#L2"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 977,
								"name": "default.index"
							}
						},
						{
							"id": 1708,
							"name": "owner_funds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Amount of the TakerGets currency the side placing the offer has available\nto be traded. (XRP is represented as drops; any other currency is\nrepresented as a decimal value.) If a trader has multiple offers in the\nsame book, only the highest-ranked offer includes this field."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/bookOffers.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L51"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1711,
							"name": "quality",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The exchange rate, as the ratio taker_pays divided by taker_gets. For\nfairness, offers that have the same quality are automatically taken\nfirst-in, first-out."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/bookOffers.ts",
									"line": 67,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L67"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1709,
							"name": "taker_gets_funded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum amount of currency that the taker can get, given the funding\nstatus of the offer."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/bookOffers.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L56"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 1710,
							"name": "taker_pays_funded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum amount of currency that the taker would pay, given the funding\nstatus of the offer."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/bookOffers.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L61"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1714,
								1718,
								1719,
								1723,
								1713,
								1712,
								1720,
								1721,
								1722,
								1715,
								1717,
								1716,
								1724,
								1708,
								1711,
								1709,
								1710
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/bookOffers.ts",
							"line": 44,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L44"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 964,
							"name": "default"
						}
					]
				},
				{
					"id": 1725,
					"name": "BookOfferCurrency",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1726,
							"name": "currency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/bookOffers.ts",
									"line": 7,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L7"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1727,
							"name": "issuer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/bookOffers.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1726,
								1727
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/bookOffers.ts",
							"line": 6,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L6"
						}
					]
				},
				{
					"id": 1697,
					"name": "BookOffersRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The book_offers method retrieves a list of offers, also known as the order.\nBook, between two currencies. Returns an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "BookOffersResponse",
								"target": 1728
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1704,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1698,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/bookOffers.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L18"
								}
							],
							"type": {
								"type": "literal",
								"value": "book_offers"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1703,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1705,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1706,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1699,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If provided, the server does not provide more than this many offers in the\nresults. The total number of results returned may be fewer than the limit,\nbecause the server omits unfunded offers."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/bookOffers.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L24"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1700,
							"name": "taker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Address of an account to use as a perspective. Unfunded offers placed\nby this account are always included in the response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/bookOffers.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L29"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1701,
							"name": "taker_gets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specification of which currency the account taking the offer would\nreceive, as an object with currency and issuer fields (omit issuer for\nXRP), like currency amounts."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/bookOffers.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L35"
								}
							],
							"type": {
								"type": "reference",
								"id": 1725,
								"name": "BookOfferCurrency"
							}
						},
						{
							"id": 1702,
							"name": "taker_pays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specification of which currency the account taking the offer would pay, as\nan object with currency and issuer fields (omit issuer for XRP), like\ncurrency amounts."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/bookOffers.ts",
									"line": 41,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L41"
								}
							],
							"type": {
								"type": "reference",
								"id": 1725,
								"name": "BookOfferCurrency"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1704,
								1698,
								1703,
								1705,
								1706,
								1699,
								1700,
								1701,
								1702
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/bookOffers.ts",
							"line": 17,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L17"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1728,
					"name": "BookOffersResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expected response from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "BookOffersRequest",
								"target": 1697
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1742,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1741,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1736,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1729,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/bookOffers.ts",
									"line": 76,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L76"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1730,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1731,
											"name": "ledger_current_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the current in-progress ledger version, which was\nused to retrieve this information."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/bookOffers.ts",
													"line": 81,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L81"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1733,
											"name": "ledger_hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The identifying hash of the ledger version that was used when retrieving\nthis data, as requested."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/bookOffers.ts",
													"line": 91,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L91"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1732,
											"name": "ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the ledger version that was used when retrieving\nthis data, as requested."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/bookOffers.ts",
													"line": 86,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L86"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1734,
											"name": "offers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of offer objects, each of which has the fields of an Offer object."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/bookOffers.ts",
													"line": 93,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L93"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1707,
													"name": "BookOffer"
												}
											}
										},
										{
											"id": 1735,
											"name": "validated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/bookOffers.ts",
													"line": 94,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L94"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1731,
												1733,
												1732,
												1734,
												1735
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/bookOffers.ts",
											"line": 76,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L76"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1737,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1738,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1739,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1740,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1742,
								1741,
								1736,
								1729,
								1737,
								1738,
								1739,
								1740
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/bookOffers.ts",
							"line": 75,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/bookOffers.ts#L75"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1074,
					"name": "Channel",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1075,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 4,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L4"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1076,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 5,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L5"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1077,
							"name": "balance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L6"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1084,
							"name": "cancel_after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1078,
							"name": "channel_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 7,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L7"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1079,
							"name": "destination_account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1086,
							"name": "destination_tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1083,
							"name": "expiration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1081,
							"name": "public_key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L10"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1082,
							"name": "public_key_hex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1080,
							"name": "settle_delay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L9"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1085,
							"name": "source_tab",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/accountChannels.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1075,
								1076,
								1077,
								1084,
								1078,
								1079,
								1086,
								1083,
								1081,
								1082,
								1080,
								1085
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountChannels.ts",
							"line": 3,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountChannels.ts#L3"
						}
					]
				},
				{
					"id": 1847,
					"name": "ChannelVerifyRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`channel_verify`"
							},
							{
								"kind": "text",
								"text": " method checks the validity of a signature that can be\nused to redeem a specific amount of XRP from a payment channel. Expects a\nresponse in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ChannelVerifyResponse",
								"target": 1855
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1849,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of XRP, in drops, the provided signature authorizes."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/channelVerify.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/channelVerify.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1854,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1850,
							"name": "channel_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Channel ID of the channel that provides the XRP. This is a\n64-character hexadecimal string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/channelVerify.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/channelVerify.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1848,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/channelVerify.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/channelVerify.ts#L11"
								}
							],
							"type": {
								"type": "literal",
								"value": "channel_verify"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1853,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1851,
							"name": "public_key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The public key of the channel and the key pair that was used to create the\nsignature, in hexadecimal or the XRP Ledger's base58 format."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/channelVerify.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/channelVerify.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1852,
							"name": "signature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature to verify, in hexadecimal."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/channelVerify.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/channelVerify.ts#L25"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1849,
								1854,
								1850,
								1848,
								1853,
								1851,
								1852
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/channelVerify.ts",
							"line": 10,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/channelVerify.ts#L10"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 1855,
					"name": "ChannelVerifyResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ChannelVerifyRequest",
								"target": 1847
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1865,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1864,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1859,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1856,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/channelVerify.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/channelVerify.ts#L34"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1857,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1858,
											"name": "signature_verified",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the signature is valid for the stated amount, channel, and\npublic key."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/channelVerify.ts",
													"line": 39,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/channelVerify.ts#L39"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1858
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/channelVerify.ts",
											"line": 34,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/channelVerify.ts#L34"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1860,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1861,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1862,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1863,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1865,
								1864,
								1859,
								1856,
								1860,
								1861,
								1862,
								1863
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/channelVerify.ts",
							"line": 33,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/channelVerify.ts#L33"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2425,
					"name": "CheckCancel",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cancels an unredeemed Check, removing it from the ledger without sending any\nmoney. The source or the destination of the check can cancel a Check at any\ntime using this transaction type. If the Check has expired, any address can\ncancel it."
							}
						]
					},
					"children": [
						{
							"id": 2428,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2431,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2427,
							"name": "CheckID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the Check ledger object to cancel as a 64-character hexadecimal\nstring."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/checkCancel.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCancel.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2429,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2432,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2433,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2434,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2440,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2430,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2435,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2437,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2436,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2438,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2426,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/checkCancel.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCancel.ts#L14"
								}
							],
							"type": {
								"type": "literal",
								"value": "CheckCancel"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2439,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2428,
								2431,
								2427,
								2429,
								2432,
								2433,
								2434,
								2440,
								2430,
								2435,
								2437,
								2436,
								2438,
								2426,
								2439
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/checkCancel.ts",
							"line": 13,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCancel.ts#L13"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2441,
					"name": "CheckCash",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Attempts to redeem a Check object in the ledger to receive up to the amount\nauthorized by the corresponding CheckCreate transaction. Only the Destination\naddress of a Check can cash it with a CheckCash transaction."
							}
						]
					},
					"children": [
						{
							"id": 2446,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2449,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2444,
							"name": "Amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Redeem the Check for exactly this amount, if possible. The currency must\nmatch that of the SendMax of the corresponding CheckCreate transaction. You.\nmust provide either this field or DeliverMin."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/checkCash.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCash.ts#L26"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 2443,
							"name": "CheckID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the Check ledger object to cash as a 64-character hexadecimal\nstring."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/checkCash.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCash.ts#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2445,
							"name": "DeliverMin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Redeem the Check for at least this amount and for as much as possible. The\ncurrency must match that of the SendMax of the corresponding CheckCreate.\ntransaction. You must provide either this field or Amount."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/checkCash.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCash.ts#L32"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 2447,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2450,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2451,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2452,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2458,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2448,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2453,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2455,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2454,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2456,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2442,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/checkCash.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCash.ts#L15"
								}
							],
							"type": {
								"type": "literal",
								"value": "CheckCash"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2457,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2446,
								2449,
								2444,
								2443,
								2445,
								2447,
								2450,
								2451,
								2452,
								2458,
								2448,
								2453,
								2455,
								2454,
								2456,
								2442,
								2457
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/checkCash.ts",
							"line": 14,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCash.ts#L14"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2459,
					"name": "CheckCreate",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a Check object in the ledger, which is a deferred payment that can be\ncashed by its intended destination. The sender of this transaction is the\nsender of the Check."
							}
						]
					},
					"children": [
						{
							"id": 2466,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2469,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2461,
							"name": "Destination",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the account that can cash the Check."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/checkCreate.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCreate.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2463,
							"name": "DestinationTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary tag that identifies the reason for the Check, or a hosted.\nrecipient to pay."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/checkCreate.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCreate.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2464,
							"name": "Expiration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Time after which the Check is no longer valid, in seconds since the Ripple.\nEpoch."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/checkCreate.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCreate.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2467,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2470,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2465,
							"name": "InvoiceID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary 256-bit hash representing a specific reason or identifier for.\nthis Check."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/checkCreate.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCreate.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2471,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2472,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2478,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2462,
							"name": "SendMax",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Maximum amount of source currency the Check is allowed to debit the\nsender, including transfer fees on non-XRP currencies. The Check can only\ncredit the destination with the same currency (from the same issuer, for\nnon-XRP currencies). For non-XRP amounts, the nested field names MUST be.\nlower-case."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/checkCreate.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCreate.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 2468,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2473,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2475,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2474,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2476,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2460,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/checkCreate.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCreate.ts#L19"
								}
							],
							"type": {
								"type": "literal",
								"value": "CheckCreate"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2477,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2466,
								2469,
								2461,
								2463,
								2464,
								2467,
								2470,
								2465,
								2471,
								2472,
								2478,
								2462,
								2468,
								2473,
								2475,
								2474,
								2476,
								2460,
								2477
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/checkCreate.ts",
							"line": 18,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/checkCreate.ts#L18"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 667,
					"name": "ClientOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 678,
							"name": "authorization",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/connection.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/connection.ts#L31"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ConnectionUserOptions.authorization"
							}
						},
						{
							"id": 682,
							"name": "certificate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/connection.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/connection.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ConnectionUserOptions.certificate"
							}
						},
						{
							"id": 683,
							"name": "connectionTimeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/connection.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/connection.ts#L38"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ConnectionUserOptions.connectionTimeout"
							}
						},
						{
							"id": 668,
							"name": "feeCushion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 123,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L123"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 684,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/connection.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/connection.ts#L39"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 685,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/client/connection.ts",
											"line": 39,
											"character": 12,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/connection.ts#L39"
										}
									],
									"indexSignature": {
										"id": 686,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 687,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ConnectionUserOptions.headers"
							}
						},
						{
							"id": 680,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/connection.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/connection.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ConnectionUserOptions.key"
							}
						},
						{
							"id": 669,
							"name": "maxFeeXRP",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 124,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L124"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 681,
							"name": "passphrase",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/connection.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/connection.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ConnectionUserOptions.passphrase"
							}
						},
						{
							"id": 670,
							"name": "proxy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 125,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L125"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ConnectionUserOptions.proxy"
							}
						},
						{
							"id": 677,
							"name": "proxyAuthorization",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/connection.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/connection.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ConnectionUserOptions.proxyAuthorization"
							}
						},
						{
							"id": 671,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/index.ts",
									"line": 126,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L126"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"name": "ConnectionUserOptions.timeout"
							}
						},
						{
							"id": 672,
							"name": "trace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/connection.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/connection.ts#L28"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 673,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/client/connection.ts",
													"line": 28,
													"character": 21,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/connection.ts#L28"
												}
											],
											"signatures": [
												{
													"id": 674,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 675,
															"name": "id",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 676,
															"name": "message",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ConnectionUserOptions.trace"
							}
						},
						{
							"id": 679,
							"name": "trustedCertificates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/client/connection.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/connection.ts#L32"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ConnectionUserOptions.trustedCertificates"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								678,
								682,
								683,
								668,
								684,
								680,
								669,
								681,
								670,
								677,
								671,
								672,
								679
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/client/index.ts",
							"line": 122,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/client/index.ts#L122"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ConnectionUserOptions"
						}
					]
				},
				{
					"id": 1979,
					"name": "ConsensusStream",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The consensus stream sends consensusPhase messages when the consensus\nprocess changes phase. The message contains the new phase of consensus the\nserver is in."
							}
						]
					},
					"children": [
						{
							"id": 1981,
							"name": "consensus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The new consensus phase the server is in. Possible values are open,\nestablish, and accepted."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 383,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L383"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "open"
									},
									{
										"type": "literal",
										"value": "establish"
									},
									{
										"type": "literal",
										"value": "accepted"
									}
								]
							}
						},
						{
							"id": 1980,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 378,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L378"
								}
							],
							"type": {
								"type": "literal",
								"value": "consensusPhase"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseStream.type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1981,
								1980
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/subscribe.ts",
							"line": 377,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L377"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseStream"
						}
					]
				},
				{
					"id": 2950,
					"name": "CreatedNode",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2951,
							"name": "CreatedNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/metadata.ts",
									"line": 4,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L4"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2952,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2953,
											"name": "LedgerEntryType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/transactions/metadata.ts",
													"line": 5,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L5"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2954,
											"name": "LedgerIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/transactions/metadata.ts",
													"line": 6,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L6"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2955,
											"name": "NewFields",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/transactions/metadata.ts",
													"line": 7,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L7"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2956,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/transactions/metadata.ts",
															"line": 7,
															"character": 15,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L7"
														}
													],
													"indexSignature": {
														"id": 2957,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 2958,
																"name": "field",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2953,
												2954,
												2955
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/transactions/metadata.ts",
											"line": 4,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L4"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2951
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/metadata.ts",
							"line": 3,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L3"
						}
					]
				},
				{
					"id": 2974,
					"name": "DeletedNode",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2975,
							"name": "DeletedNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/metadata.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L23"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2976,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2979,
											"name": "FinalFields",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/transactions/metadata.ts",
													"line": 26,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L26"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2980,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/transactions/metadata.ts",
															"line": 26,
															"character": 17,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L26"
														}
													],
													"indexSignature": {
														"id": 2981,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 2982,
																"name": "field",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												}
											}
										},
										{
											"id": 2977,
											"name": "LedgerEntryType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/transactions/metadata.ts",
													"line": 24,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L24"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2978,
											"name": "LedgerIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/transactions/metadata.ts",
													"line": 25,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L25"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2979,
												2977,
												2978
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/transactions/metadata.ts",
											"line": 23,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L23"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2975
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/metadata.ts",
							"line": 22,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L22"
						}
					]
				},
				{
					"id": 1743,
					"name": "DepositAuthorizedRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deposit_authorized command indicates whether one account is authorized to\nsend payments directly to another. Expects a response in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DepositAuthorizedResponse",
								"target": 1751
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1748,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1744,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": "deposit_authorized"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1746,
							"name": "destination_account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of a possible payment."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1747,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1749,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1750,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1745,
							"name": "source_account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sender of a possible payment."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1748,
								1744,
								1746,
								1747,
								1749,
								1750,
								1745
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
							"line": 10,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L10"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1751,
					"name": "DepositAuthorizedResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expected response from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DepositAuthorizedRequest",
								"target": 1743
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1767,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1766,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1761,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1752,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L26"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1753,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1754,
											"name": "deposit_authorized",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the specified source account is authorized to send payments\ndirectly to the destination account. If true, either the destination\naccount does not require Deposit Authorization or the source account is\npreauthorized."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
													"line": 33,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L33"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1755,
											"name": "destination_account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The destination account specified in the request."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
													"line": 35,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L35"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1758,
											"name": "ledger_current_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the current in-progress ledger version, which was\nused to generate this response."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
													"line": 50,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L50"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1756,
											"name": "ledger_hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The identifying hash of the ledger that was used to generate this\nResponse."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
													"line": 40,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L40"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1757,
											"name": "ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the ledger version that was used to generate this\nResponse."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
													"line": 45,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L45"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1759,
											"name": "source_account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The source account specified in the request."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
													"line": 52,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L52"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1760,
											"name": "validated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the information comes from a validated ledger version."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
													"line": 54,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L54"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1754,
												1755,
												1758,
												1756,
												1757,
												1759,
												1760
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
											"line": 26,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L26"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1762,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1763,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1764,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1765,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1767,
								1766,
								1761,
								1752,
								1762,
								1763,
								1764,
								1765
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/depositAuthorized.ts",
							"line": 25,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/depositAuthorized.ts#L25"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2479,
					"name": "DepositPreauth",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A DepositPreauth transaction gives another account pre-approval to deliver\npayments to the sender of this transaction. This is only useful if the sender\nof this transaction is using (or plans to use) Deposit Authorization."
							}
						]
					},
					"children": [
						{
							"id": 2483,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2486,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2481,
							"name": "Authorize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The XRP Ledger address of the sender to preauthorize."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/depositPreauth.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/depositPreauth.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2484,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2487,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2488,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2489,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2495,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2485,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2490,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2492,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2491,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2493,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2480,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/depositPreauth.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/depositPreauth.ts#L14"
								}
							],
							"type": {
								"type": "literal",
								"value": "DepositPreauth"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2494,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						},
						{
							"id": 2482,
							"name": "Unauthorize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The XRP Ledger address of a sender whose preauthorization should be.\nrevoked."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/depositPreauth.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/depositPreauth.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2483,
								2486,
								2481,
								2484,
								2487,
								2488,
								2489,
								2495,
								2485,
								2490,
								2492,
								2491,
								2493,
								2480,
								2494,
								2482
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/depositPreauth.ts",
							"line": 13,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/depositPreauth.ts#L13"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2553,
					"name": "EnableAmendment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Mark a change in the status of a proposed amendment when it gains majority, looses majority, or is enabled."
							}
						]
					},
					"children": [
						{
							"id": 2557,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2560,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2555,
							"name": "Amendment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for the amendment."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/enableAmendment.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/enableAmendment.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2558,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2561,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2562,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2556,
							"name": "LedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index where this pseudo-transaction appears."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/enableAmendment.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/enableAmendment.ts#L25"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2563,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2569,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2559,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2564,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2566,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2565,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2567,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2554,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/enableAmendment.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/enableAmendment.ts#L21"
								}
							],
							"type": {
								"type": "literal",
								"value": "EnableAmendment"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2568,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2557,
								2560,
								2555,
								2558,
								2561,
								2562,
								2556,
								2563,
								2569,
								2559,
								2564,
								2566,
								2565,
								2567,
								2554,
								2568
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/enableAmendment.ts",
							"line": 20,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/enableAmendment.ts#L20"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2235,
					"name": "ErrorResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shape of an error response from rippled. xrpl.js handles rejections by\nthrowing, and allowing the user to handle in the catch block of a promise."
							}
						]
					},
					"children": [
						{
							"id": 2243,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 57,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L57"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2239,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 53,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L53"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2240,
							"name": "error_code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L54"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2241,
							"name": "error_message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L55"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2236,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L50"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 2242,
							"name": "request",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L56"
								}
							],
							"type": {
								"type": "reference",
								"id": 1065,
								"name": "Request"
							}
						},
						{
							"id": 2237,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L51"
								}
							],
							"type": {
								"type": "literal",
								"value": "error"
							}
						},
						{
							"id": 2238,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L52"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2243,
								2239,
								2240,
								2241,
								2236,
								2242,
								2237,
								2238
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/baseMethod.ts",
							"line": 49,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L49"
						}
					]
				},
				{
					"id": 2496,
					"name": "EscrowCancel",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Return escrowed XRP to the sender."
							}
						]
					},
					"children": [
						{
							"id": 2500,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2503,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2501,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2504,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2505,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2506,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2512,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2499,
							"name": "OfferSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Transaction sequence (or Ticket  number) of EscrowCreate transaction that.\ncreated the escrow to cancel."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowCancel.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowCancel.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2498,
							"name": "Owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address of the source account that funded the escrow payment."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowCancel.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowCancel.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2502,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2507,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2509,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2508,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2510,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2497,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowCancel.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowCancel.ts#L11"
								}
							],
							"type": {
								"type": "literal",
								"value": "EscrowCancel"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2511,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2500,
								2503,
								2501,
								2504,
								2505,
								2506,
								2512,
								2499,
								2498,
								2502,
								2507,
								2509,
								2508,
								2510,
								2497,
								2511
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/escrowCancel.ts",
							"line": 10,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowCancel.ts#L10"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2513,
					"name": "EscrowCreate",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sequester XRP until the escrow process either finishes or is canceled."
							}
						]
					},
					"children": [
						{
							"id": 2521,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2524,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2515,
							"name": "Amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Amount of XRP, in drops, to deduct from the sender's balance and escrow.\nOnce escrowed, the XRP can either go to the Destination address (after the.\nFinishAfter time) or returned to the sender (after the CancelAfter time)."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowCreate.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowCreate.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2517,
							"name": "CancelAfter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The time, in seconds since the Ripple Epoch, when this escrow expires.\nThis value is immutable; the funds can only be returned the sender after.\nthis time."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowCreate.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowCreate.ts#L26"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2519,
							"name": "Condition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex value representing a PREIMAGE-SHA-256 crypto-condition . The funds can.\nonly be delivered to the recipient if this condition is fulfilled."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowCreate.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowCreate.ts#L37"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2516,
							"name": "Destination",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address to receive escrowed XRP."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowCreate.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowCreate.ts#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2520,
							"name": "DestinationTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary tag to further specify the destination for this escrowed.\npayment, such as a hosted recipient at the destination address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowCreate.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowCreate.ts#L42"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2522,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2518,
							"name": "FinishAfter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The time, in seconds since the Ripple Epoch, when the escrowed XRP can be\nreleased to the recipient. This value is immutable; the funds cannot move.\nuntil this time is reached."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowCreate.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowCreate.ts#L32"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2525,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2526,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2527,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2533,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2523,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2528,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2530,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2529,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2531,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2514,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowCreate.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowCreate.ts#L12"
								}
							],
							"type": {
								"type": "literal",
								"value": "EscrowCreate"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2532,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2521,
								2524,
								2515,
								2517,
								2519,
								2516,
								2520,
								2522,
								2518,
								2525,
								2526,
								2527,
								2533,
								2523,
								2528,
								2530,
								2529,
								2531,
								2514,
								2532
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/escrowCreate.ts",
							"line": 11,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowCreate.ts#L11"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2534,
					"name": "EscrowFinish",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Deliver XRP from a held payment to the recipient."
							}
						]
					},
					"children": [
						{
							"id": 2540,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2543,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2538,
							"name": "Condition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex value matching the previously-supplied PREIMAGE-SHA-256.\ncrypto-condition of the held payment."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowFinish.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowFinish.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2541,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2544,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2539,
							"name": "Fulfillment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex value of the PREIMAGE-SHA-256 crypto-condition fulfillment matching.\nthe held payment's Condition."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowFinish.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowFinish.ts#L28"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2545,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2546,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2552,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2537,
							"name": "OfferSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Transaction sequence of EscrowCreate transaction that created the held.\npayment to finish."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowFinish.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowFinish.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2536,
							"name": "Owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address of the source account that funded the held payment."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowFinish.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowFinish.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2542,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2547,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2549,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2548,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2550,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2535,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/escrowFinish.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowFinish.ts#L11"
								}
							],
							"type": {
								"type": "literal",
								"value": "EscrowFinish"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2551,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2540,
								2543,
								2538,
								2541,
								2544,
								2539,
								2545,
								2546,
								2552,
								2537,
								2536,
								2542,
								2547,
								2549,
								2548,
								2550,
								2535,
								2551
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/escrowFinish.ts",
							"line": 10,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/escrowFinish.ts#L10"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2003,
					"name": "FeeRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`fee`"
							},
							{
								"kind": "text",
								"text": " command reports the current state of the open-ledger requirements\nfor the transaction cost. This requires the FeeEscalation amendment to be\nenabled. Expects a response in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "FeeResponse",
								"target": 2007
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst feeRequest: FeeRequest = {\n command: 'fee'\n}\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2006,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 2004,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/fee.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L18"
								}
							],
							"type": {
								"type": "literal",
								"value": "fee"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 2005,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2006,
								2004,
								2005
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/fee.ts",
							"line": 17,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L17"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 2007,
					"name": "FeeResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "FeeRequest",
								"target": 2003
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2033,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 2032,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 2027,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 2008,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/fee.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L27"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2009,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2010,
											"name": "current_ledger_size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Number of transactions provisionally included in the in-progress ledger."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/fee.ts",
													"line": 29,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L29"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2011,
											"name": "current_queue_size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Number of transactions currently queued for the next ledger."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/fee.ts",
													"line": 31,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L31"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2012,
											"name": "drops",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/fee.ts",
													"line": 32,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L32"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2013,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2014,
															"name": "base_fee",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The transaction cost required for a reference transaction to be\nincluded in a ledger under minimum load, represented in drops of XRP."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/fee.ts",
																	"line": 37,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L37"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2015,
															"name": "median_fee",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "An approximation of the median transaction cost among transactions.\nIncluded in the previous validated ledger, represented in drops of XRP."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/fee.ts",
																	"line": 42,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L42"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2016,
															"name": "minimum_fee",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The minimum transaction cost for a reference transaction to be queued\nfor a later ledger, represented in drops of XRP. If greater than\nbase_fee, the transaction queue is full."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/fee.ts",
																	"line": 48,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L48"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2017,
															"name": "open_ledger_fee",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The minimum transaction cost that a reference transaction must pay to\nbe included in the current open ledger, represented in drops of XRP."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/fee.ts",
																	"line": 53,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L53"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2014,
																2015,
																2016,
																2017
															]
														}
													],
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/fee.ts",
															"line": 32,
															"character": 11,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L32"
														}
													]
												}
											}
										},
										{
											"id": 2018,
											"name": "expected_ledger_size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The approximate number of transactions expected to be included in the\ncurrent ledger. This is based on the number of transactions in the\nprevious ledger."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/fee.ts",
													"line": 60,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L60"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2019,
											"name": "ledger_current_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Ledger Index of the current open ledger these stats describe."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/fee.ts",
													"line": 62,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L62"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2020,
											"name": "levels",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/fee.ts",
													"line": 63,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L63"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2021,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2022,
															"name": "median_level",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The median transaction cost among transactions in the previous\nvalidated ledger, represented in fee levels."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/fee.ts",
																	"line": 68,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L68"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2023,
															"name": "minimum_level",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The minimum transaction cost required to be queued for a future\nledger, represented in fee levels."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/fee.ts",
																	"line": 73,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L73"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2024,
															"name": "open_ledger_level",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The minimum transaction cost required to be included in the current\nopen ledger, represented in fee levels."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/fee.ts",
																	"line": 78,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L78"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2025,
															"name": "reference_level",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The equivalent of the minimum transaction cost, represented in fee\nlevels."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/fee.ts",
																	"line": 83,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L83"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2022,
																2023,
																2024,
																2025
															]
														}
													],
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/fee.ts",
															"line": 63,
															"character": 12,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L63"
														}
													]
												}
											}
										},
										{
											"id": 2026,
											"name": "max_queue_size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum number of transactions that the transaction queue can\ncurrently hold."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/fee.ts",
													"line": 89,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L89"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2010,
												2011,
												2012,
												2018,
												2019,
												2020,
												2026
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/fee.ts",
											"line": 27,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L27"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 2028,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 2029,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 2030,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 2031,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2033,
								2032,
								2027,
								2008,
								2028,
								2029,
								2030,
								2031
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/fee.ts",
							"line": 26,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/fee.ts#L26"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1364,
					"name": "GatewayBalance",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1365,
							"name": "currency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
									"line": 41,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L41"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1366,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L42"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1365,
								1366
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
							"line": 40,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L40"
						}
					]
				},
				{
					"id": 1367,
					"name": "GatewayBalancesRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The gateway_balances command calculates the total balances issued by a given\naccount, optionally excluding amounts held by operational addresses. Expects\na response in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "GatewayBalancesResponse",
								"target": 1376
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst gatewayBalances: GatewayBalanceRequest = {\n  \"id\": \"example_gateway_balances_1\",\n  \"command\": \"gateway_balances\",\n  \"account\": \"rMwjYedjc7qqtKYVLiAccJSmCwih4LnE2q\",\n  \"strict\": true,\n  \"hotwallet\": [\"rKm4uWpg9tfwbVSeATv4KxDe6mpE9yPkgJ\",\"ra7JkEzrgeKHdzKgo4EUUVBnxggY4z37kt\"],\n  \"ledger_index\": \"validated\"\n}\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1369,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Address to check. This should be the issuing address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1373,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1368,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L25"
								}
							],
							"type": {
								"type": "literal",
								"value": "gateway_balances"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1371,
							"name": "hotwallet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An operational address to exclude from the balances issued, or an array of\nSuch addresses."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L37"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1372,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1374,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1375,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1370,
							"name": "strict",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, only accept an address or public key for the account parameter.\nDefaults to false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L32"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1369,
								1373,
								1368,
								1371,
								1372,
								1374,
								1375,
								1370
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
							"line": 22,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L22"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1376,
					"name": "GatewayBalancesResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expected response from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "GatewayBalancesRequest",
								"target": 1367
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1401,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1400,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1395,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1377,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L51"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1378,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1379,
											"name": "account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The address of the account that issued the balances."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
													"line": 53,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L53"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1388,
											"name": "assets",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Total amounts held that are issued by others. In the recommended\nconfiguration, the issuing address should have none."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
													"line": 68,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L68"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1389,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
															"line": 68,
															"character": 13,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L68"
														}
													],
													"indexSignature": {
														"id": 1390,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 1391,
																"name": "address",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 1364,
																"name": "GatewayBalance"
															}
														}
													}
												}
											}
										},
										{
											"id": 1384,
											"name": "balances",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Amounts issued to the hotwallet addresses from the request. The keys are\naddresses and the values are arrays of currency amounts they hold."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
													"line": 63,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L63"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1385,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
															"line": 63,
															"character": 15,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L63"
														}
													],
													"indexSignature": {
														"id": 1386,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 1387,
																"name": "address",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 1364,
																"name": "GatewayBalance"
															}
														}
													}
												}
											}
										},
										{
											"id": 1393,
											"name": "ledger_current_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the ledger version that was used to generate this\nresponse."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
													"line": 78,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L78"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1392,
											"name": "ledger_hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The identifying hash of the ledger version that was used to generate\nthis response."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
													"line": 73,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L73"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1394,
											"name": "ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the current in-progress ledger version, which was\nused to retrieve this information."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
													"line": 83,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L83"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1380,
											"name": "obligations",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Total amounts issued to addresses not excluded, as a map of currencies\nto the total value issued."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
													"line": 58,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L58"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1381,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
															"line": 58,
															"character": 18,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L58"
														}
													],
													"indexSignature": {
														"id": 1382,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 1383,
																"name": "currency",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1379,
												1388,
												1384,
												1393,
												1392,
												1394,
												1380
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
											"line": 51,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L51"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1396,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1397,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1398,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1399,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1401,
								1400,
								1395,
								1377,
								1396,
								1397,
								1398,
								1399
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/gatewayBalances.ts",
							"line": 50,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/gatewayBalances.ts#L50"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2993,
					"name": "IssuedCurrency",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2994,
							"name": "currency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2995,
							"name": "issuer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L9"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2994,
								2995
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 7,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L7"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2997,
							"name": "IssuedCurrencyAmount"
						}
					]
				},
				{
					"id": 2997,
					"name": "IssuedCurrencyAmount",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2999,
							"name": "currency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "IssuedCurrency.currency"
							}
						},
						{
							"id": 3000,
							"name": "issuer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L9"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2995,
								"name": "IssuedCurrency.issuer"
							}
						},
						{
							"id": 2998,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2999,
								3000,
								2998
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 14,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L14"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2993,
							"name": "IssuedCurrency"
						}
					]
				},
				{
					"id": 2193,
					"name": "JobType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2197,
							"name": "avg_time",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/serverInfo.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L32"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2198,
							"name": "in_progress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/serverInfo.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2194,
							"name": "job_type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/serverInfo.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L29"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2196,
							"name": "peak_time",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/serverInfo.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L31"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2195,
							"name": "per_second",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/serverInfo.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2197,
								2198,
								2194,
								2196,
								2195
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/serverInfo.ts",
							"line": 28,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L28"
						}
					]
				},
				{
					"id": 1465,
					"name": "LedgerBinary",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1466,
							"name": "accountState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L95"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1469,
							"name": "account_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SHA-512Half of this ledger's state tree information."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ledger.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.account_hash"
							}
						},
						{
							"id": 1470,
							"name": "close_flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A bit-map of flags relating to the closing of this ledger."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ledger.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.close_flags"
							}
						},
						{
							"id": 1471,
							"name": "close_time",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The approximate time this ledger version closed, as the number of seconds\nsince the Ripple Epoch of 2000-01-01 00:00:00. This value is rounded based\non the close_time_resolution."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ledger.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.close_time"
							}
						},
						{
							"id": 1472,
							"name": "close_time_human",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The approximate time this ledger was closed, in human-readable format.\nAlways uses the UTC time zone."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ledger.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L28"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.close_time_human"
							}
						},
						{
							"id": 1473,
							"name": "close_time_resolution",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An integer in the range [2,120] indicating the maximum number of seconds\nby which the close_time could be rounded."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ledger.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.close_time_resolution"
							}
						},
						{
							"id": 1468,
							"name": "closed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not this ledger has been closed."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ledger.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.closed"
							}
						},
						{
							"id": 1474,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SHA-512Half of this ledger version. This serves as a unique identifier\nfor this ledger and all its contents."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ledger.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.ledger_hash"
							}
						},
						{
							"id": 1475,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger. Some API methods display this as a quoted\ninteger; some display it as a native JSON number."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ledger.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L45"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.ledger_index"
							}
						},
						{
							"id": 1476,
							"name": "parent_close_time",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The approximate time at which the previous ledger was closed."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ledger.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L47"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.parent_close_time"
							}
						},
						{
							"id": 1477,
							"name": "parent_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unique identifying hash of the ledger that came immediately before this\none."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ledger.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L52"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.parent_hash"
							}
						},
						{
							"id": 1478,
							"name": "total_coins",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Total number of XRP drops in the network, as a quoted integer."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ledger.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L54"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.total_coins"
							}
						},
						{
							"id": 1479,
							"name": "transaction_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash of the transaction information included in this ledger, as hex."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/ledger/Ledger.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/ledger/Ledger.ts#L56"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.transaction_hash"
							}
						},
						{
							"id": 1467,
							"name": "transactions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 96,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L96"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1466,
								1469,
								1470,
								1471,
								1472,
								1473,
								1468,
								1474,
								1475,
								1476,
								1477,
								1478,
								1479,
								1467
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledger.ts",
							"line": 93,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L93"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 899,
											"name": "Ledger"
										},
										{
											"type": "literal",
											"value": "transactions"
										}
									],
									"name": "Omit",
									"qualifiedName": "Omit",
									"package": "typescript"
								},
								{
									"type": "literal",
									"value": "accountState"
								}
							],
							"name": "Omit",
							"qualifiedName": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 1485,
					"name": "LedgerClosedRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ledger_closed method returns the unique identifiers of the most recently\nclosed ledger. Expects a response in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "LedgerClosedResponse",
								"target": 1489
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "*\n"
									},
									{
										"kind": "code",
										"text": "```ts\nconst ledgerClosed: LedgerClosedRequest = {\n  \"command\": \"ledger_closed\"\n}\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1488,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1486,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerClosed.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerClosed.ts#L19"
								}
							],
							"type": {
								"type": "literal",
								"value": "ledger_closed"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1487,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1488,
								1486,
								1487
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledgerClosed.ts",
							"line": 18,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerClosed.ts#L18"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 1489,
					"name": "LedgerClosedResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "LedgerClosedRequest",
								"target": 1485
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1500,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1499,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1494,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1490,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerClosed.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerClosed.ts#L28"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1491,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1492,
											"name": "ledger_hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerClosed.ts",
													"line": 29,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerClosed.ts#L29"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1493,
											"name": "ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerClosed.ts",
													"line": 30,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerClosed.ts#L30"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1492,
												1493
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/ledgerClosed.ts",
											"line": 28,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerClosed.ts#L28"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1495,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1496,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1497,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1498,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1500,
								1499,
								1494,
								1490,
								1495,
								1496,
								1497,
								1498
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledgerClosed.ts",
							"line": 27,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerClosed.ts#L27"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1501,
					"name": "LedgerCurrentRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ledger_current method returns the unique identifiers of the current\nin-progress ledger. Expects a response in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "LedgerCurrentResponse",
								"target": 1505
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst ledgerCurrent: LedgerCurrentRequest = {\n  \"command\": \"ledger_current\"\n}\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1504,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1502,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerCurrent.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerCurrent.ts#L18"
								}
							],
							"type": {
								"type": "literal",
								"value": "ledger_current"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1503,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1504,
								1502,
								1503
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledgerCurrent.ts",
							"line": 17,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerCurrent.ts#L17"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 1505,
					"name": "LedgerCurrentResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "LedgerCurrentRequest",
								"target": 1501
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1515,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1514,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1509,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1506,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerCurrent.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerCurrent.ts#L27"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1507,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1508,
											"name": "ledger_current_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of this ledger version."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerCurrent.ts",
													"line": 29,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerCurrent.ts#L29"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1508
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/ledgerCurrent.ts",
											"line": 27,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerCurrent.ts#L27"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1510,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1511,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1512,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1513,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1515,
								1514,
								1509,
								1506,
								1510,
								1511,
								1512,
								1513
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledgerCurrent.ts",
							"line": 26,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerCurrent.ts#L26"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1528,
					"name": "LedgerDataBinaryLedgerEntry",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1529,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerData.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L47"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1529
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledgerData.ts",
							"line": 46,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L46"
						}
					]
				},
				{
					"id": 1516,
					"name": "LedgerDataRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`ledger_data`"
							},
							{
								"kind": "text",
								"text": " method retrieves contents of the specified ledger. You can\niterate through several calls to retrieve the entire contents of a single\nledger version."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst ledgerData: LedgerDataRequest = {\n  \"id\": 2,\n  \"ledger_hash\": \"842B57C1CC0613299A686D3E9F310EC0422C84D3911E5056389AA7E5808A93C8\",\n  \"command\": \"ledger_data\",\n  \"limit\": 5,\n  \"binary\": true\n}\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1522,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1518,
							"name": "binary",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If set to true, return ledger objects as hashed hex strings instead of\nJSON."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerData.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L29"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1517,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerData.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L24"
								}
							],
							"type": {
								"type": "literal",
								"value": "ledger_data"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1521,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1523,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1524,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1519,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of ledger objects to retrieve. The server is not required\nto honor this value."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerData.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1520,
							"name": "marker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value from a previous paginated response. Resume retrieving data where\nthat response left off."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerData.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1522,
								1518,
								1517,
								1521,
								1523,
								1524,
								1519,
								1520
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledgerData.ts",
							"line": 23,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L23"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1530,
					"name": "LedgerDataResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "LedgerDataRequest",
								"target": 1516
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1544,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1543,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1538,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1531,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerData.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L61"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1532,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1534,
											"name": "ledger_hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Unique identifying hash of this ledger version."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerData.ts",
													"line": 65,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L65"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1533,
											"name": "ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of this ledger version."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerData.ts",
													"line": 63,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L63"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1536,
											"name": "marker",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Server-defined value indicating the response is paginated. Pass this to\nthe next call to resume where this call left off."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerData.ts",
													"line": 75,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L75"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 1535,
											"name": "state",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of JSON objects containing data from the ledger's state tree,\nas defined below."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerData.ts",
													"line": 70,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L70"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1545,
													"name": "LedgerDataLedgerState"
												}
											}
										},
										{
											"id": 1537,
											"name": "validated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerData.ts",
													"line": 76,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L76"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1534,
												1533,
												1536,
												1535,
												1537
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/ledgerData.ts",
											"line": 61,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L61"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1539,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1540,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1541,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1542,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1544,
								1543,
								1538,
								1531,
								1539,
								1540,
								1541,
								1542
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledgerData.ts",
							"line": 60,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L60"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1548,
					"name": "LedgerEntryRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`ledger_entry`"
							},
							{
								"kind": "text",
								"text": " method returns a single ledger object from the XRP Ledger\nin its raw format. Expects a response in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "LedgerEntryResponse",
								"target": 1585
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst ledgerEntry: LedgerEntryRequest = {\n  command: \"ledger_entry\",\n  ledger_index: 60102302,\n  index: \"7DB0788C020F02780A673DC74757F23823FA3014C1866E72CC4CD8B226CD6EF4\"\n}\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1552,
							"name": "account_root",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieve an AccountRoot object by its address. This is roughly equivalent\nto the an "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "AccountInfoRequest",
										"target": 1151
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L42"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1582,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1550,
							"name": "binary",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, return the requested ledger object's contents as a hex string in\nthe XRP Ledger's binary format. Otherwise, return data in JSON format. The\ndefault is false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L28"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1553,
							"name": "check",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The object ID of a Check object to retrieve."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L45"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1549,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L22"
								}
							],
							"type": {
								"type": "literal",
								"value": "ledger_entry"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1554,
							"name": "deposit_preauth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify a DepositPreauth object to retrieve. If a string, must be the\nobject ID of the DepositPreauth object, as hexadecimal. If an object,\nrequires owner and authorized sub-fields."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L52"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1555,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1557,
													"name": "authorized",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The account that received the preauthorization."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
															"line": 57,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L57"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1556,
													"name": "owner",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The account that provided the preauthorization."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
															"line": 55,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L55"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1557,
														1556
													]
												}
											],
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
													"line": 53,
													"character": 6,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L53"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1558,
							"name": "directory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The DirectoryNode to retrieve. If a string, must be the object ID of the\ndirectory, as hexadecimal. If an object, requires either "
									},
									{
										"kind": "code",
										"text": "`dir_root`"
									},
									{
										"kind": "text",
										"text": " o\nOwner as a sub-field, plus optionally a "
									},
									{
										"kind": "code",
										"text": "`sub_index`"
									},
									{
										"kind": "text",
										"text": " sub-field."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 66,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L66"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1559,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1561,
													"name": "dir_root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Unique index identifying the directory to retrieve, as a hex string."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
															"line": 71,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L71"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1562,
													"name": "owner",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Unique address of the account associated with this directory."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
															"line": 73,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L73"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1560,
													"name": "sub_index",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "If provided, jumps to a later \"page\" of the DirectoryNode."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
															"line": 69,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L69"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1561,
														1562,
														1560
													]
												}
											],
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
													"line": 67,
													"character": 6,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L67"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1563,
							"name": "escrow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Escrow object to retrieve. If a string, must be the object ID of the\nescrow, as hexadecimal. If an object, requires owner and seq sub-fields."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 81,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L81"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1564,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1565,
													"name": "owner",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The owner (sender) of the Escrow object."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
															"line": 84,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L84"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1566,
													"name": "seq",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Sequence Number of the transaction that created the Escrow object."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
															"line": 86,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L86"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1565,
														1566
													]
												}
											],
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
													"line": 82,
													"character": 6,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L82"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1581,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1551,
							"name": "index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L36"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1583,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1584,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1580,
							"name": "nft_page",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Must be the object ID of the NFToken page, as hexadecimal"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 139,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L139"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1567,
							"name": "offer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Offer object to retrieve. If a string, interpret as the unique object\nID to the Offer. If an object, requires the sub-fields "
									},
									{
										"kind": "code",
										"text": "`account`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`seq`"
									},
									{
										"kind": "text",
										"text": "\nto uniquely identify the offer."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L95"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1568,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1569,
													"name": "account",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The account that placed the offer."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
															"line": 98,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L98"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1570,
													"name": "seq",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Sequence Number of the transaction that created the Offer object."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
															"line": 100,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L100"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1569,
														1570
													]
												}
											],
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
													"line": 96,
													"character": 6,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L96"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1571,
							"name": "payment_channel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The object ID of a PayChannel object to retrieve."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 105,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L105"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1572,
							"name": "ripple_state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Object specifying the RippleState (trust line) object to retrieve. The\naccounts and currency sub-fields are required to uniquely specify the\nrippleState entry to retrieve."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 112,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L112"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1573,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1574,
											"name": "accounts",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "2-length array of account Addresses, defining the two accounts linked by\nthis RippleState object."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
													"line": 117,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L117"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1575,
											"name": "currency",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Currency Code of the RippleState object to retrieve."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
													"line": 119,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L119"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1574,
												1575
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
											"line": 112,
											"character": 17,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L112"
										}
									]
								}
							}
						},
						{
							"id": 1576,
							"name": "ticket",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Ticket object to retrieve. If a string, must be the object ID of the\nTicket, as hexadecimal. If an object, the "
									},
									{
										"kind": "code",
										"text": "`owner`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`ticket_sequence`"
									},
									{
										"kind": "text",
										"text": "\nsub-fields are required to uniquely specify the Ticket entry."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L127"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1577,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1578,
													"name": "owner",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The owner of the Ticket object."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
															"line": 130,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L130"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1579,
													"name": "ticket_sequence",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The Ticket Sequence number of the Ticket entry to retrieve."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
															"line": 132,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L132"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1578,
														1579
													]
												}
											],
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
													"line": 128,
													"character": 6,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L128"
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1552,
								1582,
								1550,
								1553,
								1549,
								1554,
								1558,
								1563,
								1581,
								1551,
								1583,
								1584,
								1580,
								1567,
								1571,
								1572,
								1576
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
							"line": 21,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L21"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1585,
					"name": "LedgerEntryResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "LedgerEntryRequest",
								"target": 1548
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1599,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1598,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1593,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1586,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
									"line": 148,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L148"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1587,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1588,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The unique ID of this ledger object."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
													"line": 150,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L150"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1589,
											"name": "ledger_current_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the ledger that was used when retrieving this data."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
													"line": 152,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L152"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1590,
											"name": "node",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Object containing the data of this ledger object, according to the\nledger format."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
													"line": 157,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L157"
												}
											],
											"type": {
												"type": "reference",
												"id": 914,
												"name": "LedgerEntry"
											}
										},
										{
											"id": 1591,
											"name": "node_binary",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The binary representation of the ledger object, as hexadecimal."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
													"line": 159,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L159"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1592,
											"name": "validated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
													"line": 160,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L160"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1588,
												1589,
												1590,
												1591,
												1592
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
											"line": 148,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L148"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1594,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1595,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1596,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1597,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1599,
								1598,
								1593,
								1586,
								1594,
								1595,
								1596,
								1597
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledgerEntry.ts",
							"line": 147,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerEntry.ts#L147"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1480,
					"name": "LedgerModifiedOfferCreateTransaction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Special case transaction definition when the request contains "
							},
							{
								"kind": "code",
								"text": "`owner_funds: true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1482,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 75,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L75"
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2984,
										"name": "TransactionMetadata"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1483,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1484,
													"name": "owner_funds",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/ledger.ts",
															"line": 75,
															"character": 36,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L75"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1484
													]
												}
											],
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledger.ts",
													"line": 75,
													"character": 34,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L75"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1481,
							"name": "transaction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 74,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L74"
								}
							],
							"type": {
								"type": "reference",
								"id": 2355,
								"name": "Transaction"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1482,
								1481
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledger.ts",
							"line": 73,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L73"
						}
					]
				},
				{
					"id": 1453,
					"name": "LedgerQueueData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1454,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L79"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1461,
							"name": "auth_change",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 87,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L87"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1462,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 88,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L88"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1463,
							"name": "fee_level",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 89,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L89"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1460,
							"name": "last_result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 86,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L86"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1464,
							"name": "max_spend_drops",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 90,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L90"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1459,
							"name": "preflight_result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 85,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L85"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1458,
							"name": "retries_remaining",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 84,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L84"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1455,
							"name": "tx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L80"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2352,
										"name": "TransactionAndMetadata"
									},
									{
										"type": "reference",
										"id": 1480,
										"name": "LedgerModifiedOfferCreateTransaction"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1456,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1457,
													"name": "tx_blob",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/ledger.ts",
															"line": 83,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L83"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1457
													]
												}
											],
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledger.ts",
													"line": 83,
													"character": 6,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L83"
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1454,
								1461,
								1462,
								1463,
								1460,
								1464,
								1459,
								1458,
								1455
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledger.ts",
							"line": 78,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L78"
						}
					]
				},
				{
					"id": 1425,
					"name": "LedgerRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve information about the public ledger. Expects a response in the form\nof a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "LedgerResponse",
								"target": 1438
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst ledger: LedgerRequest = {\n \"id\": 14,\n \"command\": \"ledger\",\n \"ledger_index\": \"validated\",\n \"full\": false,\n \"accounts\": false,\n \"transactions\": false,\n \"expand\": false,\n \"owner_funds\": false\n}\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1428,
							"name": "accounts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Admin required. If true, return information on accounts in the ledger.\nIgnored if you did not specify a ledger version. Defaults to false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L38"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1435,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1432,
							"name": "binary",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, and transactions and expand are both also true, return\ntransaction information in binary format (hexadecimal string) instead of\nJSON format."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 62,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L62"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1426,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L28"
								}
							],
							"type": {
								"type": "literal",
								"value": "ledger"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1430,
							"name": "expand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Provide full JSON-formatted information for transaction/account\ninformation instead of only hashes. Defaults to false. Ignored unless you\nrequest transactions, accounts, or both."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L50"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1427,
							"name": "full",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Admin required If true, return full information on the entire ledger.\nIgnored if you did not specify a ledger version. Defaults to false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1434,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1436,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1437,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1431,
							"name": "owner_funds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, include owner_funds field in the metadata of OfferCreate\ntransactions in the response. Defaults to false. Ignored unless\ntransactions are included and expand is true."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L56"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1433,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, and the command is requesting the current ledger, includes an\narray of queued transactions in the results."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 67,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L67"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1429,
							"name": "transactions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, return information on transactions in the specified ledger\nversion. Defaults to false. Ignored if you did not specify a ledger\nversion."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1428,
								1435,
								1432,
								1426,
								1430,
								1427,
								1434,
								1436,
								1437,
								1431,
								1433,
								1429
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledger.ts",
							"line": 27,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L27"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1438,
					"name": "LedgerResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "LedgerRequest",
								"target": 1425
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1452,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1451,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1446,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1439,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ledger.ts",
									"line": 105,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L105"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1440,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1441,
											"name": "ledger",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The complete header data of this "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Ledger"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledger.ts",
													"line": 107,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L107"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 899,
														"name": "default"
													},
													{
														"type": "reference",
														"id": 1465,
														"name": "LedgerBinary"
													}
												]
											}
										},
										{
											"id": 1442,
											"name": "ledger_hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Unique identifying hash of the entire ledger."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledger.ts",
													"line": 109,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L109"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1443,
											"name": "ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Ledger Index of this ledger."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledger.ts",
													"line": 111,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L111"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1444,
											"name": "queue_data",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, this is a validated ledger version. If omitted or set to false,\nthis ledger's data is not final."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledger.ts",
													"line": 116,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L116"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "reference",
															"id": 1453,
															"name": "LedgerQueueData"
														}
													]
												}
											}
										},
										{
											"id": 1445,
											"name": "validated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of objects describing queued transactions, in the same order as\nthe queue. If the request specified expand as true, members contain full\nrepresentations of the transactions, in either JSON or binary depending\non whether the request specified binary as true."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledger.ts",
													"line": 123,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L123"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1441,
												1442,
												1443,
												1444,
												1445
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/ledger.ts",
											"line": 105,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L105"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1447,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1448,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1449,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1450,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1452,
								1451,
								1446,
								1439,
								1447,
								1448,
								1449,
								1450
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledger.ts",
							"line": 104,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledger.ts#L104"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1894,
					"name": "LedgerStream",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`ledger`"
							},
							{
								"kind": "text",
								"text": " stream only sends "
							},
							{
								"kind": "code",
								"text": "`ledgerClosed`"
							},
							{
								"kind": "text",
								"text": " messages when the consensus\nprocess declares a new validated ledger. The message identifies the ledger\nAnd provides some information about its contents."
							}
						]
					},
					"children": [
						{
							"id": 1896,
							"name": "fee_base",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reference transaction cost as of this ledger version, in drops of XRP.\nIf this ledger version includes a SetFee pseudo-transaction the new.\nTransaction cost applies starting with the following ledger version."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 104,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L104"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1897,
							"name": "fee_ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reference transaction cost in \"fee units\". This is not returned after the SetFees amendment is enabled."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1898,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The identifying hash of the ledger version that was closed."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 108,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L108"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1899,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger that was closed."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 110,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L110"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1900,
							"name": "ledger_time",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The time this ledger was closed, in seconds since the Ripple Epoch."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 112,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L112"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1901,
							"name": "reserve_base",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum reserve, in drops of XRP, that is required for an account. If\nthis ledger version includes a SetFee pseudo-transaction the new base reserve\napplies starting with the following ledger version."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 118,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L118"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1902,
							"name": "reserve_inc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The owner reserve for each object an account owns in the ledger, in drops\nof XRP. If the ledger includes a SetFee pseudo-transaction the new owner\nreserve applies after this ledger."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 124,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L124"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1903,
							"name": "txn_count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Number of new transactions included in this ledger version."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 126,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L126"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1895,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 98,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L98"
								}
							],
							"type": {
								"type": "literal",
								"value": "ledgerClosed"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseStream.type"
							}
						},
						{
							"id": 1904,
							"name": "validated_ledgers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Range of ledgers that the server has available. This may be a disjoint\nsequence such as 24900901-24900984,24901116-24901158. This field is not\nreturned if the server is not connected to the network, or if it is\nconnected but has not yet obtained a ledger from the network."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 133,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L133"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1896,
								1897,
								1898,
								1899,
								1900,
								1901,
								1902,
								1903,
								1895,
								1904
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/subscribe.ts",
							"line": 97,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L97"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseStream"
						}
					]
				},
				{
					"id": 1905,
					"name": "LedgerStreamResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This response mirrors the LedgerStream, except it does NOT include the 'type' nor 'txn_count' fields."
							}
						]
					},
					"children": [
						{
							"id": 1906,
							"name": "fee_base",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reference transaction cost as of this ledger version, in drops of XRP.\nIf this ledger version includes a SetFee pseudo-transaction the new.\nTransaction cost applies starting with the following ledger version."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 145,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L145"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1907,
							"name": "fee_ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reference transaction cost in \"fee units\". This is not returned after the SetFees amendment is enabled."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 147,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L147"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1908,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The identifying hash of the ledger version that was closed."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1909,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger that was closed."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 151,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L151"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1910,
							"name": "ledger_time",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The time this ledger was closed, in seconds since the Ripple Epoch."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 153,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L153"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1911,
							"name": "reserve_base",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum reserve, in drops of XRP, that is required for an account. If\nthis ledger version includes a SetFee pseudo-transaction the new base reserve\napplies starting with the following ledger version."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1912,
							"name": "reserve_inc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The owner reserve for each object an account owns in the ledger, in drops\nof XRP. If the ledger includes a SetFee pseudo-transaction the new owner\nreserve applies after this ledger."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 165,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L165"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1913,
							"name": "validated_ledgers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Range of ledgers that the server has available. This may be a disjoint\nsequence such as 24900901-24900984,24901116-24901158. This field is not\nreturned if the server is not connected to the network, or if it is\nconnected but has not yet obtained a ledger from the network."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 172,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L172"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1906,
								1907,
								1908,
								1909,
								1910,
								1911,
								1912,
								1913
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/subscribe.ts",
							"line": 139,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L139"
						}
					]
				},
				{
					"id": 2034,
					"name": "ManifestRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`manifest`"
							},
							{
								"kind": "text",
								"text": " method reports the current \"manifest\" information for a given\nvalidator public key. The \"manifest\" is the public portion of that\nvalidator's configured token. Expects a response in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ManifestResponse",
								"target": 2039
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst manifest: ManifestRequest = {\n \"command\": \"manifest\",\n \"public_key\": \"nHUFE9prPXPrHcG3SkwP1UzAQbSphqyQkQK9ATXLZsfkezhhda3p\"\n}\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2038,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 2035,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/manifest.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L20"
								}
							],
							"type": {
								"type": "literal",
								"value": "manifest"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 2037,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 2036,
							"name": "public_key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The base58-encoded public key of the validator to look up. This can be the\nmaster public key or ephemeral public key."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/manifest.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L25"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2038,
								2035,
								2037,
								2036
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/manifest.ts",
							"line": 19,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L19"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 2039,
					"name": "ManifestResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ManifestRequest",
								"target": 2034
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2056,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 2055,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 2050,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 2040,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/manifest.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L34"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2041,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2042,
											"name": "details",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data contained in this manifest. Omitted if the server does not have\n A manifest for the public_key from the request."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/manifest.ts",
													"line": 39,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L39"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2043,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2044,
															"name": "domain",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/manifest.ts",
																	"line": 40,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L40"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2045,
															"name": "ephemeral_key",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/manifest.ts",
																	"line": 41,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L41"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2046,
															"name": "master_key",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/manifest.ts",
																	"line": 42,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L42"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2047,
															"name": "seq",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/manifest.ts",
																	"line": 43,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L43"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2044,
																2045,
																2046,
																2047
															]
														}
													],
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/manifest.ts",
															"line": 39,
															"character": 14,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L39"
														}
													]
												}
											}
										},
										{
											"id": 2048,
											"name": "manifest",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The full manifest data in base64 format. This data is serialized to\nbinary before being base64-encoded. Omitted if the server does not have a\nmanifest for the public_key from the request."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/manifest.ts",
													"line": 50,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L50"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2049,
											"name": "requested",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The public_key from the request."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/manifest.ts",
													"line": 52,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L52"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2042,
												2048,
												2049
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/manifest.ts",
											"line": 34,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L34"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 2051,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 2052,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 2053,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 2054,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2056,
								2055,
								2050,
								2040,
								2051,
								2052,
								2053,
								2054
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/manifest.ts",
							"line": 33,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/manifest.ts#L33"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 3008,
					"name": "Memo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3009,
							"name": "Memo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L29"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3010,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3011,
											"name": "MemoData",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/common/index.ts",
													"line": 30,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L30"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3013,
											"name": "MemoFormat",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/common/index.ts",
													"line": 32,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L32"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3012,
											"name": "MemoType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/common/index.ts",
													"line": 31,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L31"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3011,
												3013,
												3012
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/common/index.ts",
											"line": 29,
											"character": 8,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L29"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3009
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 28,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L28"
						}
					]
				},
				{
					"id": 2959,
					"name": "ModifiedNode",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2960,
							"name": "ModifiedNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/metadata.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L12"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2961,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2964,
											"name": "FinalFields",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/transactions/metadata.ts",
													"line": 15,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L15"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2965,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/transactions/metadata.ts",
															"line": 15,
															"character": 18,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L15"
														}
													],
													"indexSignature": {
														"id": 2966,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 2967,
																"name": "field",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												}
											}
										},
										{
											"id": 2962,
											"name": "LedgerEntryType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/transactions/metadata.ts",
													"line": 13,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L13"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2963,
											"name": "LedgerIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/transactions/metadata.ts",
													"line": 14,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L14"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2968,
											"name": "PreviousFields",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/transactions/metadata.ts",
													"line": 16,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L16"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2969,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/transactions/metadata.ts",
															"line": 16,
															"character": 21,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L16"
														}
													],
													"indexSignature": {
														"id": 2970,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 2971,
																"name": "field",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												}
											}
										},
										{
											"id": 2972,
											"name": "PreviousTxnID",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/transactions/metadata.ts",
													"line": 17,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L17"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2973,
											"name": "PreviousTxnLgrSeq",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/transactions/metadata.ts",
													"line": 18,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L18"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2964,
												2962,
												2963,
												2968,
												2972,
												2973
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/transactions/metadata.ts",
											"line": 12,
											"character": 16,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L12"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2960
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/metadata.ts",
							"line": 11,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L11"
						}
					]
				},
				{
					"id": 2244,
					"name": "NFTBuyOffersRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`nft_buy_offers`"
							},
							{
								"kind": "text",
								"text": " method retrieves all of buy offers for the specified\nNFToken."
							}
						]
					},
					"children": [
						{
							"id": 2248,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 2245,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftBuyOffers.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftBuyOffers.ts#L14"
								}
							],
							"type": {
								"type": "literal",
								"value": "nft_buy_offers"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 2247,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 2249,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 2250,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 2246,
							"name": "nft_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique identifier of an NFToken. The request returns buy offers for this NFToken."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftBuyOffers.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftBuyOffers.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2248,
								2245,
								2247,
								2249,
								2250,
								2246
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/nftBuyOffers.ts",
							"line": 11,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftBuyOffers.ts#L11"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 2251,
					"name": "NFTBuyOffersResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NFTBuyOffersRequest",
								"target": 2244
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2262,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 2261,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 2256,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 2252,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftBuyOffers.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftBuyOffers.ts#L27"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2253,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2255,
											"name": "nft_id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The token ID of the NFToken to which these offers pertain."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/nftBuyOffers.ts",
													"line": 35,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftBuyOffers.ts#L35"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2254,
											"name": "offers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A list of buy offers for the specified NFToken."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/nftBuyOffers.ts",
													"line": 31,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftBuyOffers.ts#L31"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3031,
													"name": "NFTOffer"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2255,
												2254
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/nftBuyOffers.ts",
											"line": 27,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftBuyOffers.ts#L27"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 2257,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 2258,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 2259,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 2260,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2262,
								2261,
								2256,
								2252,
								2257,
								2258,
								2259,
								2260
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/nftBuyOffers.ts",
							"line": 26,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftBuyOffers.ts#L26"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2298,
					"name": "NFTHistoryRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The nft_history method retrieves a list of transactions that involved the\nspecified NFToken. Expects a response in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NFTHistoryResponse",
								"target": 2311
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2308,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 2303,
							"name": "binary",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, return transactions as hex strings instead of JSON. The default is\nfalse."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2299,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L14"
								}
							],
							"type": {
								"type": "literal",
								"value": "nft_history"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 2304,
							"name": "forward",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, returns values indexed with the oldest ledger first. Otherwise,\nthe results are indexed with the newest ledger first."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2307,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 2309,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 2310,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 2302,
							"name": "ledger_index_max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use to specify the most recent ledger to include transactions from. A\nvalue of -1 instructs the server to use the most recent validated ledger\nversion available."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2301,
							"name": "ledger_index_min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use to specify the earliest ledger to include transactions from. A value\nof -1 instructs the server to use the earliest validated ledger version\navailable."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L24"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2305,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Default varies. Limit the number of transactions to retrieve. The server\nis not required to honor this value."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L45"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2306,
							"name": "marker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value from a previous paginated response. Resume retrieving data where\nthat response left off. This value is stable even if there is a change in\nthe server's range of available ledgers."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L51"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 2300,
							"name": "nft_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique identifier of an NFToken."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2308,
								2303,
								2299,
								2304,
								2307,
								2309,
								2310,
								2302,
								2301,
								2305,
								2306,
								2300
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/nftHistory.ts",
							"line": 13,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L13"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 2311,
					"name": "NFTHistoryResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expected response from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NFTHistoryRequest",
								"target": 2298
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2327,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 2326,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 2321,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 2312,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L79"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2313,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2316,
											"name": "ledger_index_max",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the most recent ledger actually searched for\ntransactions."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/nftHistory.ts",
													"line": 93,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L93"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2315,
											"name": "ledger_index_min",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the earliest ledger actually searched for\ntransactions."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/nftHistory.ts",
													"line": 88,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L88"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2317,
											"name": "limit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The limit value used in the request."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/nftHistory.ts",
													"line": 95,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L95"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2318,
											"name": "marker",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Server-defined value indicating the response is paginated. Pass this\nto the next call to resume where this call left off."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/nftHistory.ts",
													"line": 100,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L100"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 2314,
											"name": "nft_id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The unique identifier of an NFToken."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/nftHistory.ts",
													"line": 83,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L83"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2319,
											"name": "transactions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of transactions matching the request's criteria, as explained\nbelow."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/nftHistory.ts",
													"line": 105,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L105"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2328,
													"name": "NFTHistoryTransaction"
												}
											}
										},
										{
											"id": 2320,
											"name": "validated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If included and set to true, the information in this response comes from\na validated ledger version. Otherwise, the information is subject to\nchange."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/nftHistory.ts",
													"line": 111,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L111"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2316,
												2315,
												2317,
												2318,
												2314,
												2319,
												2320
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/nftHistory.ts",
											"line": 79,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L79"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 2322,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 2323,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 2324,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 2325,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2327,
								2326,
								2321,
								2312,
								2322,
								2323,
								2324,
								2325
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/nftHistory.ts",
							"line": 78,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L78"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2328,
					"name": "NFTHistoryTransaction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2329,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger version that included this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L56"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2330,
							"name": "meta",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If binary is True, then this is a hex string of the transaction metadata.\nOtherwise, the transaction metadata is included in JSON format."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L61"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 2984,
										"name": "TransactionMetadata"
									}
								]
							}
						},
						{
							"id": 2331,
							"name": "tx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "JSON object defining the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 63,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L63"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "Object"
							}
						},
						{
							"id": 2332,
							"name": "tx_blob",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unique hashed String representing the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 65,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L65"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2333,
							"name": "validated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the transaction is included in a validated ledger. Any\ntransaction not yet in a validated ledger is subject to change."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftHistory.ts",
									"line": 70,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L70"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2329,
								2330,
								2331,
								2332,
								2333
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/nftHistory.ts",
							"line": 54,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftHistory.ts#L54"
						}
					]
				},
				{
					"id": 2282,
					"name": "NFTInfoRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`nft_info`"
							},
							{
								"kind": "text",
								"text": " method retrieves information about an NFToken."
							}
						]
					},
					"children": [
						{
							"id": 2286,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 2283,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftInfo.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftInfo.ts#L11"
								}
							],
							"type": {
								"type": "literal",
								"value": "nft_info"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 2285,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 2287,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 2288,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 2284,
							"name": "nft_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique identifier of an NFToken."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftInfo.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftInfo.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2286,
								2283,
								2285,
								2287,
								2288,
								2284
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/nftInfo.ts",
							"line": 10,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftInfo.ts#L10"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 2289,
					"name": "NFTInfoResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NFTInfoResponse",
								"target": 2289
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2297,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 2296,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 2291,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 2290,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftInfo.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftInfo.ts#L24"
								}
							],
							"type": {
								"type": "reference",
								"id": 3038,
								"name": "NFToken"
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 2292,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 2293,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 2294,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 2295,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2297,
								2296,
								2291,
								2290,
								2292,
								2293,
								2294,
								2295
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/nftInfo.ts",
							"line": 23,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftInfo.ts#L23"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 3031,
					"name": "NFTOffer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "One offer that might be returned from either an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NFTBuyOffersRequest",
								"target": 2244
							},
							{
								"kind": "text",
								"text": "\nor an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NFTSellOffersRequest",
								"target": 2263
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 3032,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L113"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 3036,
							"name": "destination",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L117"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3037,
							"name": "expiration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 118,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L118"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3033,
							"name": "flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 114,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L114"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3034,
							"name": "nft_offer_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 115,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L115"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3035,
							"name": "owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 116,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L116"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3032,
								3036,
								3037,
								3033,
								3034,
								3035
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 112,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L112"
						}
					]
				},
				{
					"id": 2263,
					"name": "NFTSellOffersRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`nft_sell_offers`"
							},
							{
								"kind": "text",
								"text": " method retrieves all of sell offers for the specified\nNFToken."
							}
						]
					},
					"children": [
						{
							"id": 2267,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 2264,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftSellOffers.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftSellOffers.ts#L14"
								}
							],
							"type": {
								"type": "literal",
								"value": "nft_sell_offers"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 2266,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 2268,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 2269,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 2265,
							"name": "nft_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique identifier of an NFToken. The request returns sell offers for this NFToken."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftSellOffers.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftSellOffers.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2267,
								2264,
								2266,
								2268,
								2269,
								2265
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/nftSellOffers.ts",
							"line": 11,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftSellOffers.ts#L11"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 2270,
					"name": "NFTSellOffersResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NFTSellOffersRequest",
								"target": 2263
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2281,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 2280,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 2275,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 2271,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/nftSellOffers.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftSellOffers.ts#L27"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2272,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2274,
											"name": "nft_id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The token ID of the NFToken to which these offers pertain."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/nftSellOffers.ts",
													"line": 35,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftSellOffers.ts#L35"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2273,
											"name": "offers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A list of sell offers for the specified NFToken."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/nftSellOffers.ts",
													"line": 31,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftSellOffers.ts#L31"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3031,
													"name": "NFTOffer"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2274,
												2273
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/nftSellOffers.ts",
											"line": 27,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftSellOffers.ts#L27"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 2276,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 2277,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 2278,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 2279,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2281,
								2280,
								2275,
								2271,
								2276,
								2277,
								2278,
								2279
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/nftSellOffers.ts",
							"line": 26,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/nftSellOffers.ts#L26"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 3038,
					"name": "NFToken",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "One NFToken that might be returned from an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NFTInfoResponse",
								"target": 2289
							}
						]
					},
					"children": [
						{
							"id": 3043,
							"name": "flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L131"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3042,
							"name": "is_burned",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 130,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L130"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3045,
							"name": "issuer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 133,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L133"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3040,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 128,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L128"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3039,
							"name": "nft_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3047,
							"name": "nft_serial",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 135,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L135"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3046,
							"name": "nft_taxon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 134,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L134"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3041,
							"name": "owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 129,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L129"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3044,
							"name": "transfer_fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 132,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L132"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3048,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L136"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3043,
								3042,
								3045,
								3040,
								3039,
								3047,
								3046,
								3041,
								3044,
								3048
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 126,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L126"
						}
					]
				},
				{
					"id": 2573,
					"name": "NFTokenAcceptOffer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The NFTokenOfferAccept transaction is used to accept offers\n to buy or sell an NFToken. It can either:\n\n 1. Allow one offer to be accepted. This is called direct\n    mode.\n 2. Allow two distinct offers, one offering to buy a\n    given NFToken and the other offering to sell the same\n    NFToken, to be accepted in an atomic fashion. This is\n    called brokered mode.\n\n To indicate direct mode, use either the "
							},
							{
								"kind": "code",
								"text": "`sell_offer`"
							},
							{
								"kind": "text",
								"text": " or\n "
							},
							{
								"kind": "code",
								"text": "`buy_offer`"
							},
							{
								"kind": "text",
								"text": " fields, but not both. To indicate brokered mode,\n use both the "
							},
							{
								"kind": "code",
								"text": "`sell_offer`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`buy_offer`"
							},
							{
								"kind": "text",
								"text": " fields. If you use\n neither "
							},
							{
								"kind": "code",
								"text": "`sell_offer`"
							},
							{
								"kind": "text",
								"text": " nor "
							},
							{
								"kind": "code",
								"text": "`buy_offer`"
							},
							{
								"kind": "text",
								"text": ", the transaction is invalid."
							}
						]
					},
					"children": [
						{
							"id": 2578,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2581,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2579,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2582,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2583,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2584,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2577,
							"name": "NFTokenBrokerFee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This field is only valid in brokered mode. It specifies the\namount that the broker will keep as part of their fee for\nbringing the two offers together; the remaining amount will\nbe sent to the seller of the NFToken being bought. If\nspecified, the fee must be such that, prior to accounting\nfor the transfer fee charged by the issuer, the amount that\nthe seller would receive is at least as much as the amount\nindicated in the sell offer.\n\nThis functionality is intended to allow the owner of an\nNFToken to offer their token for sale to a third party\nbroker, who may then attempt to sell the NFToken on for a\nlarger amount, without the broker having to own the NFToken\nor custody funds.\n\nNote: in brokered mode, the offers referenced by NFTokenBuyOffer\nand NFTokenSellOffer must both specify the same NFTokenID; that is,\nboth must be for the same NFToken."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenAcceptOffer.ts",
									"line": 64,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenAcceptOffer.ts#L64"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 2576,
							"name": "NFTokenBuyOffer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the NFTokenOffer that offers to buy the NFToken.\n\nIn direct mode this field is optional, but either NFTokenSellOffer or\nNFTokenBuyOffer must be specified. In brokered mode, both NFTokenSellOffer\nand NFTokenBuyOffer must be specified."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenAcceptOffer.ts",
									"line": 43,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenAcceptOffer.ts#L43"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2575,
							"name": "NFTokenSellOffer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the NFTokenOffer that offers to sell the NFToken.\n\n In direct mode this field is optional, but either NFTokenSellOffer or\n NFTokenBuyOffer must be specified. In brokered mode, both NFTokenSellOffer\n and NFTokenBuyOffer must be specified."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenAcceptOffer.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenAcceptOffer.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2590,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2580,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2585,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2587,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2586,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2588,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2574,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenAcceptOffer.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenAcceptOffer.ts#L27"
								}
							],
							"type": {
								"type": "literal",
								"value": "NFTokenAcceptOffer"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2589,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2578,
								2581,
								2579,
								2582,
								2583,
								2584,
								2577,
								2576,
								2575,
								2590,
								2580,
								2585,
								2587,
								2586,
								2588,
								2574,
								2589
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/NFTokenAcceptOffer.ts",
							"line": 26,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenAcceptOffer.ts#L26"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2591,
					"name": "NFTokenBurn",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The NFTokenBurn transaction is used to remove an NFToken object from the\nNFTokenPage in which it is being held, effectively removing the token from\nthe ledger (\"burning\" it).\n\nIf this operation succeeds, the corresponding NFToken is removed. If this\noperation empties the NFTokenPage holding the NFToken or results in the\nconsolidation, thus removing an NFTokenPage, the owner’s reserve requirement\nis reduced by one."
							}
						]
					},
					"children": [
						{
							"id": 2593,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the AccountID that submitted this transaction. The account MUST\nbe either the present owner of the token or, if the lsfBurnable flag is set\nin the NFToken, either the issuer account or an account authorized by the\nissuer, i.e. MintAccount."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenBurn.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenBurn.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2598,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2596,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2599,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2600,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2601,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2594,
							"name": "NFTokenID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the NFToken object to be removed by the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenBurn.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenBurn.ts#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2607,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2595,
							"name": "Owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates which account currently owns the token if it is different than\nAccount. Only used to burn tokens which have the lsfBurnable flag enabled\nand are not owned by the signing account."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenBurn.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenBurn.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2597,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2602,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2604,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2603,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2605,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2592,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenBurn.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenBurn.ts#L16"
								}
							],
							"type": {
								"type": "literal",
								"value": "NFTokenBurn"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2606,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2593,
								2598,
								2596,
								2599,
								2600,
								2601,
								2594,
								2607,
								2595,
								2597,
								2602,
								2604,
								2603,
								2605,
								2592,
								2606
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/NFTokenBurn.ts",
							"line": 15,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenBurn.ts#L15"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2608,
					"name": "NFTokenCancelOffer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The NFTokenCancelOffer transaction deletes existing NFTokenOffer objects.\nIt is useful if you want to free up space on your account to lower your\nreserve requirement.\n\nThe transaction can be executed by the account that originally created\nthe NFTokenOffer, the account in the "
							},
							{
								"kind": "code",
								"text": "`Recipient`"
							},
							{
								"kind": "text",
								"text": " field of the NFTokenOffer\n(if present), or any account if the NFTokenOffer has an "
							},
							{
								"kind": "code",
								"text": "`Expiration`"
							},
							{
								"kind": "text",
								"text": " and\nthe NFTokenOffer has already expired."
							}
						]
					},
					"children": [
						{
							"id": 2611,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2614,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2612,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2615,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2616,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2617,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2610,
							"name": "NFTokenOffers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of identifiers of NFTokenOffer objects that should be cancelled\nby this transaction.\n\nIt is an error if an entry in this list points to an\nobject that is not an NFTokenOffer object. It is not an\nerror if an entry in this list points to an object that\ndoes not exist. This field is required."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenCancelOffer.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCancelOffer.ts#L26"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2623,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2613,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2618,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2620,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2619,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2621,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2609,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenCancelOffer.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCancelOffer.ts#L16"
								}
							],
							"type": {
								"type": "literal",
								"value": "NFTokenCancelOffer"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2622,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2611,
								2614,
								2612,
								2615,
								2616,
								2617,
								2610,
								2623,
								2613,
								2618,
								2620,
								2619,
								2621,
								2609,
								2622
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/NFTokenCancelOffer.ts",
							"line": 15,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCancelOffer.ts#L15"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2624,
					"name": "NFTokenCreateOffer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The NFTokenCreateOffer transaction creates either an offer to buy an\nNFT the submitting account does not own, or an offer to sell an NFT\nthe submitting account does own."
							}
						]
					},
					"children": [
						{
							"id": 2632,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2635,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2627,
							"name": "Amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the amount expected or offered for the Token.\n\nThe amount must be non-zero, except when this is a sell\noffer and the asset is XRP. This would indicate that the current\nowner of the token is giving it away free, either to anyone at all,\nor to the account identified by the Destination field."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenCreateOffer.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCreateOffer.ts#L56"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 2630,
							"name": "Destination",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If present, indicates that this offer may only be\naccepted by the specified account. Attempts by other\naccounts to accept this offer MUST fail."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenCreateOffer.ts",
									"line": 82,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCreateOffer.ts#L82"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2629,
							"name": "Expiration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the time after which the offer will no longer\nbe valid. The value is the number of seconds since the\nRipple Epoch."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenCreateOffer.ts",
									"line": 76,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCreateOffer.ts#L76"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2633,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2631,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenCreateOffer.ts",
									"line": 83,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCreateOffer.ts#L83"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"id": 2646,
										"name": "NFTokenCreateOfferFlagsInterface"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2636,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2637,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2626,
							"name": "NFTokenID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the NFTokenID of the NFToken object that the\noffer references."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenCreateOffer.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCreateOffer.ts#L47"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2643,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2628,
							"name": "Owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the AccountID of the account that owns the\ncorresponding NFToken.\n\nIf the offer is to buy a token, this field must be present\nand it must be different than Account (since an offer to\nbuy a token one already holds is meaningless).\n\nIf the offer is to sell a token, this field must not be\npresent, as the owner is, implicitly, the same as Account\n(since an offer to sell a token one doesn't already hold\nis meaningless)."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenCreateOffer.ts",
									"line": 70,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCreateOffer.ts#L70"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2634,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2638,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2640,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2639,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2641,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2625,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenCreateOffer.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCreateOffer.ts#L42"
								}
							],
							"type": {
								"type": "literal",
								"value": "NFTokenCreateOffer"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2642,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2632,
								2635,
								2627,
								2630,
								2629,
								2633,
								2631,
								2636,
								2637,
								2626,
								2643,
								2628,
								2634,
								2638,
								2640,
								2639,
								2641,
								2625,
								2642
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/NFTokenCreateOffer.ts",
							"line": 41,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCreateOffer.ts#L41"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2646,
					"name": "NFTokenCreateOfferFlagsInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map of flags to boolean values representing "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NFTokenCreateOffer",
								"target": 2624
							},
							{
								"kind": "text",
								"text": " transaction\nflags."
							}
						]
					},
					"children": [
						{
							"id": 2647,
							"name": "tfSellNFToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenCreateOffer.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCreateOffer.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2647
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/NFTokenCreateOffer.ts",
							"line": 32,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenCreateOffer.ts#L32"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GlobalFlags"
						}
					]
				},
				{
					"id": 2648,
					"name": "NFTokenMint",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The NFTokenMint transaction creates an NFToken object and adds it to the\nrelevant NFTokenPage object of the minter. If the transaction is\nsuccessful, the newly minted token will be owned by the minter account\nspecified by the transaction."
							}
						]
					},
					"children": [
						{
							"id": 2655,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2658,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2656,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2654,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 94,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L94"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"id": 2672,
										"name": "NFTokenMintFlagsInterface"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2651,
							"name": "Issuer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the account that should be the issuer of this token. This value\nis optional and should only be specified if the account executing the\ntransaction is not the "
									},
									{
										"kind": "code",
										"text": "`Issuer`"
									},
									{
										"kind": "text",
										"text": " of the "
									},
									{
										"kind": "code",
										"text": "`NFToken`"
									},
									{
										"kind": "text",
										"text": " object. If it is\npresent, the "
									},
									{
										"kind": "code",
										"text": "`MintAccount`"
									},
									{
										"kind": "text",
										"text": " field in the "
									},
									{
										"kind": "code",
										"text": "`AccountRoot`"
									},
									{
										"kind": "text",
										"text": " of the "
									},
									{
										"kind": "code",
										"text": "`Issuer`"
									},
									{
										"kind": "text",
										"text": "\nfield must match the "
									},
									{
										"kind": "code",
										"text": "`Account`"
									},
									{
										"kind": "text",
										"text": ", otherwise the transaction will fail."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 71,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L71"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2659,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2660,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2650,
							"name": "NFTokenTaxon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the taxon associated with this token. The taxon is generally a\nvalue chosen by the minter of the token and a given taxon may be used for\nmultiple tokens. The implementation reserves taxon identifiers greater\nthan or equal to 2147483648 (0x80000000). If you have no use for this\nfield, set it to 0."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 63,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L63"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2666,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2657,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2661,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2663,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2662,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2664,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2649,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L55"
								}
							],
							"type": {
								"type": "literal",
								"value": "NFTokenMint"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2652,
							"name": "TransferFee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the fee charged by the issuer for secondary sales of the Token,\nif such sales are allowed. Valid values for this field are between 0 and\n50000 inclusive, allowing transfer rates between 0.000% and 50.000% in\nincrements of 0.001%. This field must NOT be present if the\n"
									},
									{
										"kind": "code",
										"text": "`tfTransferable`"
									},
									{
										"kind": "text",
										"text": " flag is not set."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L79"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2665,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						},
						{
							"id": 2653,
							"name": "URI",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "URI that points to the data and/or metadata associated with the NFT.\nThis field need not be an HTTP or HTTPS URL; it could be an IPFS URI, a\nmagnet link, immediate data encoded as an RFC2379 \"data\" URL, or even an\nopaque issuer-specific encoding. The URI is NOT checked for validity, but\nthe field is limited to a maximum length of 256 bytes.\n\nThis field must be hex-encoded. You can use "
									},
									{
										"kind": "code",
										"text": "`convertStringToHex`"
									},
									{
										"kind": "text",
										"text": " to\nconvert this field to the proper encoding.\n\nThis field must not be an empty string. Omit it from the transaction or\nset to "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": " value if you do not use it."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 93,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L93"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2655,
								2658,
								2656,
								2654,
								2651,
								2659,
								2660,
								2650,
								2666,
								2657,
								2661,
								2663,
								2662,
								2664,
								2649,
								2652,
								2665,
								2653
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
							"line": 54,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L54"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2672,
					"name": "NFTokenMintFlagsInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map of flags to boolean values representing "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NFTokenMint",
								"target": 2648
							},
							{
								"kind": "text",
								"text": " transaction\nflags."
							}
						]
					},
					"children": [
						{
							"id": 2673,
							"name": "tfBurnable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L42"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2674,
							"name": "tfOnlyXRP",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 43,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L43"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2676,
							"name": "tfTransferable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L45"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2675,
							"name": "tfTrustLine",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2673,
								2674,
								2676,
								2675
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/NFTokenMint.ts",
							"line": 41,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/NFTokenMint.ts#L41"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GlobalFlags"
						}
					]
				},
				{
					"id": 1402,
					"name": "NoRippleCheckRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`noripple_check`"
							},
							{
								"kind": "text",
								"text": " command provides a quick way to check the status of th\ndefault ripple field for an account and the No Ripple flag of its trust\nlines, compared with the recommended settings. Expects a response in the form\nof an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NoRippleCheckResponse",
								"target": 1412
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst noRipple: NoRippleCheckRequest = {\n  \"id\": 0,\n  \"command\": \"noripple_check\",\n  \"account\": \"r9cZA1mLK5R5Am25ArfXFmqgNwjZgnfk59\",\n   \"role\": \"gateway\",\n  \"ledger_index\": \"current\",\n  \"limit\": 2,\n  \"transactions\": true\n}\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1404,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for the account, most commonly the account's address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/norippleCheck.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1411,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1403,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/norippleCheck.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L28"
								}
							],
							"type": {
								"type": "literal",
								"value": "noripple_check"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1410,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1408,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/norippleCheck.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1409,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string to choose a\nledger automatically."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/norippleCheck.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L54"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							}
						},
						{
							"id": 1407,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of trust line problems to include in the results.\nDefaults to 300."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/norippleCheck.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L47"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1405,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the address refers to a gateway or user. Recommendations depend on\nthe role of the account. Issuers must have Default Ripple enabled and must\ndisable No Ripple on all trust lines. Users should have Default Ripple\ndisabled, and should enable No Ripple on all trust lines."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/norippleCheck.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L37"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "gateway"
									},
									{
										"type": "literal",
										"value": "user"
									}
								]
							}
						},
						{
							"id": 1406,
							"name": "transactions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, include an array of suggested transactions, as JSON objects,\nthat you can sign and submit to fix the problems. Defaults to false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/norippleCheck.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L42"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1404,
								1411,
								1403,
								1410,
								1408,
								1409,
								1407,
								1405,
								1406
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/norippleCheck.ts",
							"line": 27,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L27"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 1412,
					"name": "NoRippleCheckResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected by a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NoRippleCheckRequest",
								"target": 1402
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1424,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1423,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1418,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1413,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/norippleCheck.ts",
									"line": 63,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L63"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1414,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1415,
											"name": "ledger_current_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the ledger used to calculate these results."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/norippleCheck.ts",
													"line": 65,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L65"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1416,
											"name": "problems",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of strings with human-readable descriptions of the problems.\nThis includes up to one entry if the account's Default Ripple setting is\nnot as recommended, plus up to limit entries for trust lines whose no\nripple setting is not as recommended."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/norippleCheck.ts",
													"line": 72,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L72"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1417,
											"name": "transactions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If the request specified transactions as true, this is an array of JSON\nobjects, each of which is the JSON form of a transaction that should fix\none of the described problems. The length of this array is the same as\nthe problems array, and each entry is intended to fix the problem\ndescribed at the same index into that array."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/norippleCheck.ts",
													"line": 80,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L80"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "Object"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1415,
												1416,
												1417
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/norippleCheck.ts",
											"line": 63,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L63"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1419,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1420,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1421,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1422,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1424,
								1423,
								1418,
								1413,
								1419,
								1420,
								1421,
								1422
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/norippleCheck.ts",
							"line": 62,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/norippleCheck.ts#L62"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2677,
					"name": "OfferCancel",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An OfferCancel transaction removes an Offer object from the XRP Ledger."
							}
						]
					},
					"children": [
						{
							"id": 2680,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2683,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2681,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2684,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2685,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2686,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2692,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2679,
							"name": "OfferSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number (or Ticket number) of a previous OfferCreate\ntransaction. If specified, cancel any offer object in the ledger that was\ncreated by that transaction. It is not considered an error if the offer.\nspecified does not exist."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCancel.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCancel.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2682,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2687,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2689,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2688,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2690,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2678,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCancel.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCancel.ts#L11"
								}
							],
							"type": {
								"type": "literal",
								"value": "OfferCancel"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2691,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2680,
								2683,
								2681,
								2684,
								2685,
								2686,
								2692,
								2679,
								2682,
								2687,
								2689,
								2688,
								2690,
								2678,
								2691
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/offerCancel.ts",
							"line": 10,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCancel.ts#L10"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2703,
					"name": "OfferCreate",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An OfferCreate transaction is effectively a limit order . It defines an\nintent to exchange currencies, and creates an Offer object if not completely.\nFulfilled when placed. Offers can be partially fulfilled."
							}
						]
					},
					"children": [
						{
							"id": 2710,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2713,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2706,
							"name": "Expiration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Time after which the offer is no longer active, in seconds since the.\nRipple Epoch."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 103,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L103"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2711,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2705,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 98,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L98"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"id": 2698,
										"name": "OfferCreateFlagsInterface"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2714,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2715,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2721,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2707,
							"name": "OfferSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An offer to delete first, specified in the same way as OfferCancel."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 105,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L105"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2712,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2716,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2718,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2717,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2708,
							"name": "TakerGets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount and type of currency being provided by the offer creator."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 107,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L107"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 2709,
							"name": "TakerPays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount and type of currency being requested by the offer creator."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 109,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L109"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 2719,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2704,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 97,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L97"
								}
							],
							"type": {
								"type": "literal",
								"value": "OfferCreate"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2720,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2710,
								2713,
								2706,
								2711,
								2705,
								2714,
								2715,
								2721,
								2707,
								2712,
								2716,
								2718,
								2717,
								2708,
								2709,
								2719,
								2704,
								2720
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/offerCreate.ts",
							"line": 96,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L96"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2698,
					"name": "OfferCreateFlagsInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map of flags to boolean values representing "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "OfferCreate",
								"target": 2703
							},
							{
								"kind": "text",
								"text": " transaction\nflags."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\nconst tx: OfferCreate = {\nAccount: 'rhFcpWDHLqpBmX4ezWiA5VLSS4e1BHqhHd',\nTakerGets: '43000.51',\nTakerPays: '12928290425',\nTransactionType: 'OfferCreate',\nFlags: {\n  tfPassive: true,\n  tfFillOrKill: true,\n },\n}\n\n// Autofill the tx to see how flags actually look compared to the interface usage.\nconst autofilledTx = await client.autofill(tx)\nconsole.log(autofilledTx)\n// {\n// Account: 'rhFcpWDHLqpBmX4ezWiA5VLSS4e1BHqhHd',\n// TakerGets: '43000.51',\n// TakerPays: '12928290425',\n// TransactionType: 'OfferCreate',\n// Flags: 327680,\n// Sequence: 21970384,\n// Fee: '12',\n// LastLedgerSequence: 21970404\n// }\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2701,
							"name": "tfFillOrKill",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 85,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L85"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2700,
							"name": "tfImmediateOrCancel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 84,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L84"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2699,
							"name": "tfPassive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 83,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L83"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2702,
							"name": "tfSell",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/offerCreate.ts",
									"line": 86,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L86"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2701,
								2700,
								2699,
								2702
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/offerCreate.ts",
							"line": 82,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/offerCreate.ts#L82"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GlobalFlags"
						}
					]
				},
				{
					"id": 1967,
					"name": "OrderBookStream",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When you subscribe to one or more order books with the "
							},
							{
								"kind": "code",
								"text": "`books`"
							},
							{
								"kind": "text",
								"text": " field, you\nget back any transactions that affect those order books. Has the same format\nas a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "TransactionStream",
								"target": 1931
							},
							{
								"kind": "text",
								"text": " but the transaction can have a "
							},
							{
								"kind": "code",
								"text": "`owner_funds`"
							},
							{
								"kind": "text",
								"text": "\nfield."
							}
						]
					},
					"children": [
						{
							"id": 1970,
							"name": "engine_result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 349,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L349"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1971,
							"name": "engine_result_code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 350,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L350"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1972,
							"name": "engine_result_message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 351,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L351"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1973,
							"name": "ledger_current_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 352,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L352"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1974,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 353,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L353"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1975,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 354,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L354"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1976,
							"name": "meta",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 355,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L355"
								}
							],
							"type": {
								"type": "reference",
								"id": 2984,
								"name": "TransactionMetadata"
							}
						},
						{
							"id": 1968,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 347,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L347"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1977,
							"name": "transaction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 356,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L356"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "Object"
							}
						},
						{
							"id": 1969,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 348,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L348"
								}
							],
							"type": {
								"type": "literal",
								"value": "transaction"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseStream.type"
							}
						},
						{
							"id": 1978,
							"name": "validated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 367,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L367"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1970,
								1971,
								1972,
								1973,
								1974,
								1975,
								1976,
								1968,
								1977,
								1969,
								1978
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/subscribe.ts",
							"line": 346,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L346"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseStream"
						}
					]
				},
				{
					"id": 1779,
					"name": "PathFindCloseRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stop sending pathfinding information."
							}
						]
					},
					"children": [
						{
							"id": 1783,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePathFindRequest.api_version"
							}
						},
						{
							"id": 1781,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L6"
								}
							],
							"type": {
								"type": "literal",
								"value": "path_find"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePathFindRequest.command"
							}
						},
						{
							"id": 1782,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePathFindRequest.id"
							}
						},
						{
							"id": 1780,
							"name": "subcommand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "close"
							},
							"overwrites": {
								"type": "reference",
								"name": "BasePathFindRequest.subcommand"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1783,
								1781,
								1782,
								1780
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/pathFind.ts",
							"line": 36,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L36"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BasePathFindRequest"
						}
					]
				},
				{
					"id": 1769,
					"name": "PathFindCreateRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Start sending pathfinding information."
							}
						]
					},
					"children": [
						{
							"id": 1778,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePathFindRequest.api_version"
							}
						},
						{
							"id": 1776,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L6"
								}
							],
							"type": {
								"type": "literal",
								"value": "path_find"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePathFindRequest.command"
							}
						},
						{
							"id": 1772,
							"name": "destination_account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unique address of the account to find a path to."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1773,
							"name": "destination_amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Currency Amount that the destination account would receive in a\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L24"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 1777,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePathFindRequest.id"
							}
						},
						{
							"id": 1775,
							"name": "paths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of arrays of objects, representing payment paths to check. You can\nuse this to keep updated on changes to particular paths you already know\nabout, or to check the overall cost to make a payment along a certain path."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L32"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3019,
									"name": "Path"
								}
							}
						},
						{
							"id": 1774,
							"name": "send_max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Currency amount that would be spent in the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L26"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 1771,
							"name": "source_account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unique address of the account to find a path from. In other words, the.\nAccount that would be sending a payment."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1770,
							"name": "subcommand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L12"
								}
							],
							"type": {
								"type": "literal",
								"value": "create"
							},
							"overwrites": {
								"type": "reference",
								"name": "BasePathFindRequest.subcommand"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1778,
								1776,
								1772,
								1773,
								1777,
								1775,
								1774,
								1771,
								1770
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/pathFind.ts",
							"line": 11,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L11"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BasePathFindRequest"
						}
					]
				},
				{
					"id": 1784,
					"name": "PathFindPathOption",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1787,
							"name": "destination_amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Destination Amount that the destination would receive along this path.\nIf the "
									},
									{
										"kind": "code",
										"text": "`send_max`"
									},
									{
										"kind": "text",
										"text": " field is set, this field will be set."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 70,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L70"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 1785,
							"name": "paths_computed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of arrays of objects defining payment paths."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 60,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L60"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3019,
									"name": "Path"
								}
							}
						},
						{
							"id": 1786,
							"name": "source_amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Currency Amount that the source would have to send along this path for the.\nDestination to receive the desired amount."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 65,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L65"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1787,
								1785,
								1786
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/pathFind.ts",
							"line": 58,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L58"
						}
					]
				},
				{
					"id": 1793,
					"name": "PathFindResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PathFindRequest",
								"target": 1768
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1810,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1809,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1804,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1794,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L79"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1795,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1796,
											"name": "alternatives",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of objects with suggested paths to take, as described below. If\nempty, then no paths were found connecting the source and destination\naccounts."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/pathFind.ts",
													"line": 85,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L85"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1784,
													"name": "PathFindPathOption"
												}
											}
										},
										{
											"id": 1802,
											"name": "closed",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value true indicates this reply is in response to a path_find close\ncommand."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/pathFind.ts",
													"line": 109,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L109"
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1797,
											"name": "destination_account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Unique address of the account that would receive a transaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/pathFind.ts",
													"line": 87,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L87"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1798,
											"name": "destination_amount",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Currency amount provided in the WebSocket request."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/pathFind.ts",
													"line": 89,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L89"
												}
											],
											"type": {
												"type": "reference",
												"id": 3001,
												"name": "Amount"
											}
										},
										{
											"id": 1800,
											"name": "full_reply",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If false, this is the result of an incomplete search. A later reply\nmay have a better path. If true, then this is the best path found. (It is\nstill theoretically possible that a better path could exist, but rippled\nwon't find it.) Until you close the pathfinding request, rippled.\nContinues to send updates each time a new ledger closes."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/pathFind.ts",
													"line": 99,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L99"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1801,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID provided in the WebSocket request is included again at this\nlevel."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/pathFind.ts",
													"line": 104,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L104"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 1799,
											"name": "source_account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Unique address that would send a transaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/pathFind.ts",
													"line": 91,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L91"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1803,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value true indicates this reply is in response to a "
													},
													{
														"kind": "code",
														"text": "`path_find`"
													},
													{
														"kind": "text",
														"text": "\nstatus command."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/pathFind.ts",
													"line": 114,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L114"
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1796,
												1802,
												1797,
												1798,
												1800,
												1801,
												1799,
												1803
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/pathFind.ts",
											"line": 79,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L79"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1805,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1806,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1807,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1808,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1810,
								1809,
								1804,
								1794,
								1805,
								1806,
								1807,
								1808
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/pathFind.ts",
							"line": 78,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L78"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1788,
					"name": "PathFindStatusRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the information of the currently-open pathfinding request."
							}
						]
					},
					"children": [
						{
							"id": 1792,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePathFindRequest.api_version"
							}
						},
						{
							"id": 1790,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L6"
								}
							],
							"type": {
								"type": "literal",
								"value": "path_find"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePathFindRequest.command"
							}
						},
						{
							"id": 1791,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePathFindRequest.id"
							}
						},
						{
							"id": 1789,
							"name": "subcommand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/pathFind.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L42"
								}
							],
							"type": {
								"type": "literal",
								"value": "status"
							},
							"overwrites": {
								"type": "reference",
								"name": "BasePathFindRequest.subcommand"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1792,
								1790,
								1791,
								1789
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/pathFind.ts",
							"line": 41,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L41"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BasePathFindRequest"
						}
					]
				},
				{
					"id": 1947,
					"name": "PathFindStream",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The path_find method searches for a path along which a transaction can\npossibly be made, and periodically sends updates when the path changes over\ntime."
							}
						]
					},
					"children": [
						{
							"id": 1955,
							"name": "alternatives",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects with suggested paths to take. If empty, then no paths\nwere found connecting the source and destination accounts."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 417,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L417"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "tuple"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1956,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1957,
													"name": "paths_computed",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/subscribe.ts",
															"line": 420,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L420"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 3019,
															"name": "Path"
														}
													}
												},
												{
													"id": 1958,
													"name": "source_amount",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/subscribe.ts",
															"line": 421,
															"character": 8,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L421"
														}
													],
													"type": {
														"type": "reference",
														"id": 3001,
														"name": "Amount"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1957,
														1958
													]
												}
											],
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/subscribe.ts",
													"line": 419,
													"character": 6,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L419"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1950,
							"name": "destination_account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unique address of the account that would receive a transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 398,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L398"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1951,
							"name": "destination_amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Currency Amount that the destination would receive in a transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 400,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L400"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 1952,
							"name": "full_reply",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If false, this is the result of an incomplete search. A later reply may\nhave a better path. If true, then this is the best path found. (It is still\ntheoretically possible that a better path could exist, but rippled won't\nfind it.) Until you close the pathfinding request, rippled continues to\nsend updates each time a new ledger closes."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 408,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L408"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1953,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID provided in the WebSocket request is included again at this level."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 410,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L410"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1954,
							"name": "send_max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Currency Amount that would be spent in the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 412,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L412"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 1949,
							"name": "source_account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unique address that would send a transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 396,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L396"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1948,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 394,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L394"
								}
							],
							"type": {
								"type": "literal",
								"value": "path_find"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseStream.type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1955,
								1950,
								1951,
								1952,
								1953,
								1954,
								1949,
								1948
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/subscribe.ts",
							"line": 393,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L393"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseStream"
						}
					]
				},
				{
					"id": 3015,
					"name": "PathStep",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3016,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L47"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3017,
							"name": "currency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L48"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3018,
							"name": "issuer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3016,
								3017,
								3018
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 46,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L46"
						}
					]
				},
				{
					"id": 2730,
					"name": "Payment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A Payment transaction represents a transfer of value from one account to\nanother."
							}
						]
					},
					"children": [
						{
							"id": 2740,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2743,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2732,
							"name": "Amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of currency to deliver. For non-XRP amounts, the nested field\nnames MUST be lower-case. If the tfPartialPayment flag is set, deliver up\nto this amount instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 114,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L114"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 2738,
							"name": "DeliverMin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Minimum amount of destination currency this transaction should deliver.\nOnly valid if this is a partial payment. For non-XRP amounts, the nested\nfield names are lower-case."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 146,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L146"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 2733,
							"name": "Destination",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the account receiving the payment."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 116,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L116"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2734,
							"name": "DestinationTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary tag that identifies the reason for the payment to the\ndestination, or a hosted recipient to pay."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L121"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2741,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2739,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 147,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L147"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"id": 2726,
										"name": "PaymentFlagsInterface"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2735,
							"name": "InvoiceID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary 256-bit hash representing a specific reason or identifier for\nthis payment."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 126,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L126"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2744,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2745,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2751,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2736,
							"name": "Paths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of payment paths to be used for this transaction. Must be omitted\nfor XRP-to-XRP transactions."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3019,
									"name": "Path"
								}
							}
						},
						{
							"id": 2737,
							"name": "SendMax",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest amount of source currency this transaction is allowed to cost,\nincluding transfer fees, exchange rates, and slippage . Does not include\nthe XRP destroyed as a cost for submitting the transaction. For non-XRP\namounts, the nested field names MUST be lower-case. Must be supplied for\ncross-currency/cross-issue payments. Must be omitted for XRP-to-XRP\nPayments."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 140,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L140"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 2742,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2746,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2748,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2747,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2749,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2731,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 108,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L108"
								}
							],
							"type": {
								"type": "literal",
								"value": "Payment"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2750,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2740,
								2743,
								2732,
								2738,
								2733,
								2734,
								2741,
								2739,
								2735,
								2744,
								2745,
								2751,
								2736,
								2737,
								2742,
								2746,
								2748,
								2747,
								2749,
								2731,
								2750
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/payment.ts",
							"line": 107,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L107"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2758,
					"name": "PaymentChannelClaim",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Claim XRP from a payment channel, adjust the payment channel's expiration,\nor both."
							}
						]
					},
					"children": [
						{
							"id": 2766,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2769,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2763,
							"name": "Amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of XRP, in drops, authorized by the Signature. This must match\nthe amount in the signed message. This is the cumulative amount of XRP that\ncan be dispensed by the channel, including XRP previously redeemed."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L117"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2762,
							"name": "Balance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Total amount of XRP, in drops, delivered by this channel after processing\nthis claim. Required to deliver XRP. Must be more than the total amount\ndelivered by the channel so far, but not greater than the Amount of the\nsigned claim. Must be provided except when closing the channel."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
									"line": 111,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L111"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2761,
							"name": "Channel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique ID of the channel as a 64-character hexadecimal string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
									"line": 104,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L104"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2767,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2760,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
									"line": 102,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L102"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"id": 2755,
										"name": "PaymentChannelClaimFlagsInterface"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2770,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2771,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2777,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2765,
							"name": "PublicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The public key used for the signature, as hexadecimal. This must match the\nPublicKey stored in the ledger for the channel. Required unless the sender\nof the transaction is the source address of the channel and the Signature\nfield is omitted."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
									"line": 130,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L130"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2768,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2764,
							"name": "Signature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature of this claim, as hexadecimal. The signed message contains\nthe channel ID and the amount of the claim. Required unless the sender of\nthe transaction is the source address of the channel."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
									"line": 123,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L123"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2772,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2774,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2773,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2775,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2759,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
									"line": 101,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L101"
								}
							],
							"type": {
								"type": "literal",
								"value": "PaymentChannelClaim"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2776,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2766,
								2769,
								2763,
								2762,
								2761,
								2767,
								2760,
								2770,
								2771,
								2777,
								2765,
								2768,
								2764,
								2772,
								2774,
								2773,
								2775,
								2759,
								2776
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
							"line": 100,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L100"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2755,
					"name": "PaymentChannelClaimFlagsInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map of flags to boolean values representing "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PaymentChannelClaim",
								"target": 2758
							},
							{
								"kind": "text",
								"text": "\ntransaction flags."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\nconst paymentChannelClaim: PaymentChannelClaim = {\n Account: 'rMpxZpuy5RBSP47oK2hDWUtk3B5BNQHfGj,\n TransactionType: 'PaymentChannelClaim',\n Channel: hashes.hashPaymentChannel(\n   'rMpxZpuy5RBSP47oK2hDWUtk3B5BNQHfGj',\n   'rQGYqiyH5Ue9J96p4E6Qt6AvqxK4sDhnS5',\n   21970712,\n ),\n Amount: '100',\n Flags: {\n   tfClose: true\n }\n}\n\n// Autofill the tx to see how flags actually look compared to the interface usage.\nconst autofilledTx = await client.autofill(paymentChannelClaim)\nconsole.log(autofilledTx)\n// {\n//  Account: 'rMpxZpuy5RBSP47oK2hDWUtk3B5BNQHfGj',\n//  TransactionType: 'PaymentChannelClaim',\n//  Channel: 'FC14BF9245D731DC1749EE0F070765E4EB4E993F8ECEE3D00F7E6E26D6EF98CF',\n//  Amount: '100',\n//  Flags: 131072,\n//  Sequence: 21970713,\n//  Fee: '12',\n//  LastLedgerSequence: 21970658\n// }\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2757,
							"name": "tfClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Request to close the channel. Only the channel source and destination\naddresses can use this flag. This flag closes the channel immediately if it\nhas no more XRP allocated to it after processing the current claim, or if\nthe destination address uses it. If the source address uses this flag when\nthe channel still holds XRP, this schedules the channel to close after\nSettleDelay seconds have passed. (Specifically, this sets the Expiration of\nthe channel to the close time of the previous ledger plus the channel's\nSettleDelay time, unless the channel already has an earlier Expiration\ntime.) If the destination address uses this flag when the channel still\nholds XRP, any XRP that remains after processing the claim is returned to\nthe source address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
									"line": 91,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L91"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2756,
							"name": "tfRenew",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear the channel's Expiration time. (Expiration is different from the\nchannel's immutable CancelAfter time.) Only the source address of the\npayment channel can use this flag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
									"line": 77,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L77"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2757,
								2756
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/paymentChannelClaim.ts",
							"line": 71,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelClaim.ts#L71"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GlobalFlags"
						}
					]
				},
				{
					"id": 2778,
					"name": "PaymentChannelCreate",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a unidirectional channel and fund it with XRP. The address sending\nthis transaction becomes the \"source address\" of the payment channel."
							}
						]
					},
					"children": [
						{
							"id": 2786,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2789,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2780,
							"name": "Amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Amount of XRP, in drops, to deduct from the sender's balance and set aside\nin this channel. While the channel is open, the XRP can only go to the\nDestination address. When the channel closes, any unclaimed XRP is returned\nto the source address's balance."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelCreate.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelCreate.ts#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2784,
							"name": "CancelAfter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The time, in seconds since the Ripple Epoch, when this channel expires.\nAny transaction that would modify the channel after this time closes the\nchannel without otherwise affecting it. This value is immutable; the\nchannel can be closed earlier than this time but cannot remain open after\nthis time."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelCreate.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelCreate.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2781,
							"name": "Destination",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address to receive XRP claims against this channel. This is also known as\nthe \"destination address\" for the channel."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelCreate.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelCreate.ts#L25"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2785,
							"name": "DestinationTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary tag to further specify the destination for this payment channel,\nsuch as a hosted recipient at the destination address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelCreate.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelCreate.ts#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2787,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2790,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2791,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2792,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2798,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2783,
							"name": "PublicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The public key of the key pair the source will use to sign claims against\nthis channel in hexadecimal. This can be any secp256k1 or ed25519 public\nkey."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelCreate.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelCreate.ts#L36"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2788,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2782,
							"name": "SettleDelay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Amount of time the source address must wait before closing the channel if\nit has unclaimed XRP."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelCreate.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelCreate.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2793,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2795,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2794,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2796,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2779,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelCreate.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelCreate.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": "PaymentChannelCreate"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2797,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2786,
								2789,
								2780,
								2784,
								2781,
								2785,
								2787,
								2790,
								2791,
								2792,
								2798,
								2783,
								2788,
								2782,
								2793,
								2795,
								2794,
								2796,
								2779,
								2797
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/paymentChannelCreate.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelCreate.ts#L12"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2799,
					"name": "PaymentChannelFund",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Add additional XRP to an open payment channel, and optionally update the\nexpiration time of the channel. Only the source address of the channel can\nuse this transaction."
							}
						]
					},
					"children": [
						{
							"id": 2804,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2807,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2802,
							"name": "Amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Amount of XRP in drops to add to the channel. Must be a positive amount\nof XRP."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelFund.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelFund.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2801,
							"name": "Channel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique ID of the channel to fund as a 64-character hexadecimal\nstring."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelFund.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelFund.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2803,
							"name": "Expiration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "New Expiration time to set for the channel in seconds since the Ripple\nEpoch. This must be later than either the current time plus the SettleDelay\nof the channel, or the existing Expiration of the channel. After the\nExpiration time, any transaction that would access the channel closes the\nchannel without taking its normal action. Any unspent XRP is returned to\nthe source address when the channel closes. (Expiration is separate from\nthe channel's immutable CancelAfter time.) For more information, see the\nPayChannel ledger object type."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelFund.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelFund.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2805,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2808,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2809,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2810,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2816,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2806,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2811,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2813,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2812,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2814,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2800,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/paymentChannelFund.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelFund.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": "PaymentChannelFund"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2815,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2804,
								2807,
								2802,
								2801,
								2803,
								2805,
								2808,
								2809,
								2810,
								2816,
								2806,
								2811,
								2813,
								2812,
								2814,
								2800,
								2815
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/paymentChannelFund.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/paymentChannelFund.ts#L12"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2726,
					"name": "PaymentFlagsInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map of flags to boolean values representing "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Payment",
								"target": 2730
							},
							{
								"kind": "text",
								"text": " transaction\nflags."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\nconst partialPayment: Payment = {\n TransactionType: 'Payment',\n Account: 'rM9WCfJU6udpFkvKThRaFHDMsp7L8rpgN',\n Amount: {\n   currency: 'FOO',\n   value: '4000',\n   issuer: 'rPzwM2JfCSDjhbesdTCqFjWWdK7eFtTwZz',\n },\n Destination: 'rPzwM2JfCSDjhbesdTCqFjWWdK7eFtTwZz',\n Flags: {\n   tfPartialPayment: true\n }\n}\n\n// Autofill the tx to see how flags actually look compared to the interface usage.\nconst autofilledTx = await client.autofill(partialPayment)\nconsole.log(autofilledTx)\n// {\n//  TransactionType: 'Payment',\n//  Account: 'rM9WCfJU6udpFkvKThRaFHDMsp7L8rpgN',\n//  Amount: {\n//   currency: 'FOO',\n//   value: '4000',\n//   issuer: 'rPzwM2JfCSDjhbesdTCqFjWWdK7eFtTwZz'\n//  },\n//  Destination: 'rPzwM2JfCSDjhbesdTCqFjWWdK7eFtTwZz',\n//  Flags: 131072,\n//  Sequence: 21970996,\n//  Fee: '12',\n//  LastLedgerSequence: 21971016\n// }\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2729,
							"name": "tfLimitQuality",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Only take paths where all the conversions have an input:output ratio that\nis equal or better than the ratio of Amount:SendMax. See Limit Quality for\ndetails."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 98,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L98"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2727,
							"name": "tfNoDirectRipple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Do not use the default path; only use paths included in the Paths field.\nThis is intended to force the transaction to take arbitrage opportunities.\nMost clients do not need this."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 86,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L86"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2728,
							"name": "tfPartialPayment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the specified Amount cannot be sent without spending more than SendMax,\nreduce the received amount instead of failing outright. See Partial.\nPayments for more details."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/payment.ts",
									"line": 92,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L92"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2729,
								2727,
								2728
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/payment.ts",
							"line": 80,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/payment.ts#L80"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GlobalFlags"
						}
					]
				},
				{
					"id": 1959,
					"name": "PeerStatusStream",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The admin-only "
							},
							{
								"kind": "code",
								"text": "`peer_status`"
							},
							{
								"kind": "text",
								"text": " stream reports a large amount of information on\nthe activities of other rippled servers to which this server is connected, in\nparticular their status in the consensus process."
							}
						]
					},
					"children": [
						{
							"id": 1961,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of event that prompted this message. See Peer Status Events for\npossible values."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 311,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L311"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "CLOSING_LEDGER"
									},
									{
										"type": "literal",
										"value": "ACCEPTED_LEDGER"
									},
									{
										"type": "literal",
										"value": "SWITCHED_LEDGER"
									},
									{
										"type": "literal",
										"value": "LOST_SYNC"
									}
								]
							}
						},
						{
							"id": 1962,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The time this event occurred, in seconds since the Ripple Epoch."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 313,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L313"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1963,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The identifying Hash of a ledger version to which this message pertains."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 315,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L315"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1964,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Ledger Index of a ledger version to which this message pertains."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 317,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L317"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1965,
							"name": "ledger_index_max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The largest Ledger Index the peer has currently available."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 319,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L319"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1966,
							"name": "ledger_index_min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The smallest Ledger Index the peer has currently available."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 321,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L321"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1960,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 306,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L306"
								}
							],
							"type": {
								"type": "literal",
								"value": "peerStatusChange"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseStream.type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1961,
								1962,
								1963,
								1964,
								1965,
								1966,
								1960
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/subscribe.ts",
							"line": 305,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L305"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseStream"
						}
					]
				},
				{
					"id": 2204,
					"name": "PingRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ping command returns an acknowledgement, so that clients can test the\nconnection status and latency. Expects a response in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PingResponse",
								"target": 2208
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2207,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 2205,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ping.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ping.ts#L11"
								}
							],
							"type": {
								"type": "literal",
								"value": "ping"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 2206,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2207,
								2205,
								2206
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ping.ts",
							"line": 10,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ping.ts#L10"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 2208,
					"name": "PingResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PingRequest",
								"target": 2204
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2219,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 2218,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 2213,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 2209,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ping.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ping.ts#L20"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2210,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2211,
											"name": "role",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ping.ts",
													"line": 20,
													"character": 12,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ping.ts#L20"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2212,
											"name": "unlimited",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ping.ts",
													"line": 20,
													"character": 27,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ping.ts#L20"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2211,
												2212
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/ping.ts",
											"line": 20,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ping.ts#L20"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 2214,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 2215,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 2216,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 2217,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2219,
								2218,
								2213,
								2209,
								2214,
								2215,
								2216,
								2217
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ping.ts",
							"line": 19,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ping.ts#L19"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2220,
					"name": "RandomRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The random command provides a random number to be used as a source of\nentropy for random number generation by clients. Expects a response in the\nform of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "RandomResponse",
								"target": 2224
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2223,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 2221,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/random.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/random.ts#L11"
								}
							],
							"type": {
								"type": "literal",
								"value": "random"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 2222,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2223,
								2221,
								2222
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/random.ts",
							"line": 10,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/random.ts#L10"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 2224,
					"name": "RandomResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "RandomRequest",
								"target": 2220
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2234,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 2233,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 2228,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 2225,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/random.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/random.ts#L20"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2226,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2227,
											"name": "random",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/random.ts",
													"line": 21,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/random.ts#L21"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2227
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/random.ts",
											"line": 20,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/random.ts#L20"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 2229,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 2230,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 2231,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 2232,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2234,
								2233,
								2228,
								2225,
								2229,
								2230,
								2231,
								2232
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/random.ts",
							"line": 19,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/random.ts#L19"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 3026,
					"name": "ResponseOnlyTxInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This information is added to Transactions in request responses, but is not part\nof the canonical Transaction information on ledger. These fields are denoted with\nlowercase letters to indicate this in the rippled responses."
							}
						]
					},
					"children": [
						{
							"id": 3027,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date/time when this transaction was included in a validated ledger."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 91,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L91"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3028,
							"name": "hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An identifying hash value unique to this transaction, as a hex string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3030,
							"name": "inLedger",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Alias for ledger_index."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 103,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L103"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3029,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ledger that included this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 99,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L99"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3027,
								3028,
								3030,
								3029
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 87,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L87"
						}
					]
				},
				{
					"id": 1067,
					"name": "ResponseWarning",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1070,
							"name": "details",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L29"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1071,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/baseMethod.ts",
											"line": 29,
											"character": 12,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L29"
										}
									],
									"indexSignature": {
										"id": 1072,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1073,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 1068,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1069,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L28"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1070,
								1068,
								1069
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/baseMethod.ts",
							"line": 26,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L26"
						}
					]
				},
				{
					"id": 1811,
					"name": "RipplePathFindPathOption",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1812,
							"name": "paths_computed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of arrays of objects defining payment paths."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L45"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3019,
									"name": "Path"
								}
							}
						},
						{
							"id": 1813,
							"name": "source_amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Currency amount that the source would have to send along this path for the\ndestination to receive the desired amount."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L50"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1812,
								1813
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
							"line": 43,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L43"
						}
					]
				},
				{
					"id": 1814,
					"name": "RipplePathFindRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`ripple_path_find`"
							},
							{
								"kind": "text",
								"text": " method is a simplified version of the path_find method\nthat provides a single response with a payment path you can use right away.\nExpects a response in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "RipplePathFindResponse",
								"target": 1825
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1822,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1815,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L20"
								}
							],
							"type": {
								"type": "literal",
								"value": "ripple_path_find"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1817,
							"name": "destination_account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unique address of the account that would receive funds in a transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L24"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1818,
							"name": "destination_amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Currency Amount that the destination account would receive in a\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 1821,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1823,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1824,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1819,
							"name": "send_max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Currency Amount that would be spent in the transaction. Cannot be used\nwith "
									},
									{
										"kind": "code",
										"text": "`source_currencies`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L34"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 1816,
							"name": "source_account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unique address of the account that would send funds in a transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L22"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1820,
							"name": "source_currencies",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of currencies that the source account might want to spend. Each\nentry in the array should be a JSON object with a mandatory currency field\nand optional issuer field, like how currency amounts are specified."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L40"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1844,
									"name": "SourceCurrencyAmount"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1822,
								1815,
								1817,
								1818,
								1821,
								1823,
								1824,
								1819,
								1816,
								1820
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
							"line": 17,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L17"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1825,
					"name": "RipplePathFindResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "RipplePathFindRequest",
								"target": 1814
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1843,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1842,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1837,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1826,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
									"line": 59,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L59"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1827,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1828,
											"name": "alternatives",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of objects with possible paths to take, as described below. If\nempty, then there are no paths connecting the source and destination\naccounts."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
													"line": 65,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L65"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1811,
													"name": "RipplePathFindPathOption"
												}
											}
										},
										{
											"id": 1829,
											"name": "destination_account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Unique address of the account that would receive a payment transaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
													"line": 67,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L67"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1831,
											"name": "destination_amount",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
													"line": 74,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L74"
												}
											],
											"type": {
												"type": "reference",
												"id": 3001,
												"name": "Amount"
											}
										},
										{
											"id": 1830,
											"name": "destination_currencies",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Array of strings representing the currencies that the destination\naccepts, as 3-letter codes like \"USD\" or as 40-character hex like\n\"015841551A748AD2C1F76FF6ECB0CCCD00000000\"."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
													"line": 73,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L73"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1832,
											"name": "full_reply",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
													"line": 75,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L75"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1833,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
													"line": 76,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L76"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 1834,
											"name": "ledger_current_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
													"line": 77,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L77"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1835,
											"name": "source_account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
													"line": 78,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L78"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1836,
											"name": "validated",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
													"line": 79,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L79"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1828,
												1829,
												1831,
												1830,
												1832,
												1833,
												1834,
												1835,
												1836
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
											"line": 59,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L59"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1838,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1839,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1840,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1841,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1843,
								1842,
								1837,
								1826,
								1838,
								1839,
								1840,
								1841
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
							"line": 58,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L58"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2057,
					"name": "ServerInfoRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`server_info`"
							},
							{
								"kind": "text",
								"text": " command asks the server for a human-readable version of\nvarious information about the rippled server being queried. Expects a\nresponse in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ServerInfoResponse",
								"target": 2061
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2060,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 2058,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/serverInfo.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L11"
								}
							],
							"type": {
								"type": "literal",
								"value": "server_info"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 2059,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2060,
								2058,
								2059
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/serverInfo.ts",
							"line": 10,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L10"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 2061,
					"name": "ServerInfoResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ServerInfoRequest",
								"target": 2057
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2128,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 2127,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 2122,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 2062,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/serverInfo.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L50"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2063,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2064,
											"name": "info",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/serverInfo.ts",
													"line": 51,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L51"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2065,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2066,
															"name": "amendment_blocked",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "If true, this server is amendment blocked. If the server is not\namendment blocked, the response omits this field."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 56,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L56"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 2067,
															"name": "build_version",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The version number of the running rippled version."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 58,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L58"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2068,
															"name": "closed_ledger",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Information on the most recently closed ledger that has not been\nvalidated by consensus. If the most recently validated ledger is\navailable, the response omits this field and includes\n"
																	},
																	{
																		"kind": "code",
																		"text": "`validated_ledger`"
																	},
																	{
																		"kind": "text",
																		"text": " instead. The member fields are the same as the.\n"
																	},
																	{
																		"kind": "code",
																		"text": "`validated_ledger`"
																	},
																	{
																		"kind": "text",
																		"text": " field."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 66,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L66"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2069,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 2070,
																			"name": "age",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 67,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L67"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2071,
																			"name": "base_fee_xrp",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 68,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L68"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2072,
																			"name": "hash",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 69,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L69"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 2073,
																			"name": "reserve_base_xrp",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 70,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L70"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2074,
																			"name": "reserve_inc_xrp",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 71,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L71"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2075,
																			"name": "seq",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 72,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L72"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2070,
																				2071,
																				2072,
																				2073,
																				2074,
																				2075
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "xrpl/src/models/methods/serverInfo.ts",
																			"line": 66,
																			"character": 22,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L66"
																		}
																	]
																}
															}
														},
														{
															"id": 2076,
															"name": "complete_ledgers",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Range expression indicating the sequence numbers of the ledger\nversions the local rippled has in its database."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 78,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L78"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2077,
															"name": "hostid",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "On an admin request, returns the hostname of the server running the\nrippled instance; otherwise, returns a single RFC-1751  word based on\nthe node public key."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 84,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L84"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2078,
															"name": "io_latency_ms",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Amount of time spent waiting for I/O operations, in milliseconds. If\nthis number is not very, very low, then the rippled server is probably\nhaving serious load issues."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 90,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L90"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2079,
															"name": "jq_trans_overflow",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The number of times (since starting up) that this server has had over\n250 transactions waiting to be processed at once. A large number here\nmay mean that your server is unable to handle the transaction load of\nthe XRP Ledger network."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 97,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L97"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2080,
															"name": "last_close",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Information about the last time the server closed a ledger, including\nthe amount of time it took to reach a consensus and the number of\ntrusted validators participating."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 103,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L103"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2081,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 2082,
																			"name": "converge_time_s",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The amount of time it took to reach a consensus on the most recently\nvalidated ledger version, in seconds."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 108,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L108"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2083,
																			"name": "proposers",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "How many trusted validators the server considered (including itself,\nif configured as a validator) in the consensus process for the most\nrecently validated ledger version."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 114,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L114"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2082,
																				2083
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "xrpl/src/models/methods/serverInfo.ts",
																			"line": 103,
																			"character": 18,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L103"
																		}
																	]
																}
															}
														},
														{
															"id": 2084,
															"name": "load",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "(Admin only) Detailed information about the current load state of the\nserver."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 120,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L120"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2085,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 2086,
																			"name": "job_types",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "(Admin only) Information about the rate of different types of jobs\nthe server is doing and how much time it spends on each."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 125,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L125"
																				}
																			],
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 2193,
																					"name": "JobType"
																				}
																			}
																		},
																		{
																			"id": 2087,
																			"name": "threads",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "(Admin only) The number of threads in the server's main job pool."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 127,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L127"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2086,
																				2087
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "xrpl/src/models/methods/serverInfo.ts",
																			"line": 120,
																			"character": 13,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L120"
																		}
																	]
																}
															}
														},
														{
															"id": 2088,
															"name": "load_factor",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The load-scaled open ledger transaction cost the server is currently\nenforcing, as a multiplier on the base transaction cost. For example,\nat 1000 load factor and a reference transaction cost of 10 drops of\nXRP, the load-scaled transaction cost is 10,000 drops (0.01 XRP). The\nload factor is determined by the highest of the individual server's\nload factor, the cluster's load factor, the open ledger cost and the\noverall network's load factor."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 138,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L138"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2092,
															"name": "load_factor_cluster",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Current multiplier to the transaction cost based on load to servers\nin this cluster."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 157,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L157"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2093,
															"name": "load_factor_fee_escalation",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The current multiplier to the transaction cost that a transaction must\npay to get into the open ledger."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 162,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L162"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2094,
															"name": "load_factor_fee_queue",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The current multiplier to the transaction cost that a transaction must\npay to get into the queue, if the queue is full."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 167,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L167"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2090,
															"name": "load_factor_local",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Current multiplier to the transaction cost based on\nload to this server."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 147,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L147"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2091,
															"name": "load_factor_net",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Current multiplier to the transaction cost being used by the rest of\nthe network."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 152,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L152"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2095,
															"name": "load_factor_server",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The load factor the server is enforcing, not including the open ledger\ncost."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 172,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L172"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2089,
															"name": "network_id",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The network id of the server."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 142,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L142"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2098,
															"name": "network_ledger",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 181,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L181"
																}
															],
															"type": {
																"type": "literal",
																"value": "waiting"
															}
														},
														{
															"id": 2096,
															"name": "peer_disconnects",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The number of peer connections which were severed."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 176,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L176"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2097,
															"name": "peer_disconnects_resources",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The number of peer connections which were severed due to excess resource consumption."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 180,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L180"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2099,
															"name": "peers",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "How many other rippled servers this one is currently connected to."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 183,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L183"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2100,
															"name": "pubkey_node",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Public key used to verify this server for peer-to-peer communications.\nThis node key pair is automatically generated by the server the first\ntime it starts up. (If deleted, the server can create a new pair of\nKeys.)."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 190,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L190"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2101,
															"name": "pubkey_validator",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Public key used by this node to sign ledger validations."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 192,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L192"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2102,
															"name": "server_state",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "A string indicating to what extent the server is participating in the\nnetwork."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 197,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L197"
																}
															],
															"type": {
																"type": "reference",
																"id": 2199,
																"name": "ServerState"
															}
														},
														{
															"id": 2103,
															"name": "server_state_duration_us",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The number of consecutive microseconds the server has been in the\ncurrent state."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 202,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L202"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2104,
															"name": "state_accounting",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "A map of various server states with information about the time the\nserver spends in each. This can be useful for tracking the long-term\nhealth of your server's connectivity to the network."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 208,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L208"
																}
															],
															"type": {
																"type": "reference",
																"id": 2200,
																"name": "StateAccountingFinal"
															}
														},
														{
															"id": 2105,
															"name": "time",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The current time in UTC, according to the server's clock."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 210,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L210"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2106,
															"name": "uptime",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Number of consecutive seconds that the server has been operational."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 212,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L212"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2107,
															"name": "validated_ledger",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Information about the most recent fully-validated ledger."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 214,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L214"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2108,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 2109,
																			"name": "age",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The time since the ledger was closed, in seconds."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 216,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L216"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2110,
																			"name": "base_fee_xrp",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Base fee, in XRP. This may be represented in scientific notation.\nSuch as 1e-05 for 0.00005."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 221,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L221"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2111,
																			"name": "hash",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Unique hash for the ledger, as hexadecimal."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 223,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L223"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 2112,
																			"name": "reserve_base_xrp",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Minimum amount of XRP (not drops) necessary for every account to.\nKeep in reserve ."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 228,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L228"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2113,
																			"name": "reserve_inc_xrp",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Amount of XRP (not drops) added to the account reserve for each\nobject an account owns in the ledger."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 233,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L233"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2114,
																			"name": "seq",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The ledger index of the latest validated ledger."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 235,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L235"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2109,
																				2110,
																				2111,
																				2112,
																				2113,
																				2114
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "xrpl/src/models/methods/serverInfo.ts",
																			"line": 214,
																			"character": 25,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L214"
																		}
																	]
																}
															}
														},
														{
															"id": 2115,
															"name": "validation_quorum",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Minimum number of trusted validations required to validate a ledger\nversion. Some circumstances may cause the server to require more\nvalidations."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 242,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L242"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2117,
															"name": "validator_list",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 250,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L250"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2118,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 2119,
																			"name": "count",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 251,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L251"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2120,
																			"name": "expiration",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 252,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L252"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 2121,
																			"name": "status",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverInfo.ts",
																					"line": 253,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L253"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "unknown"
																					},
																					{
																						"type": "literal",
																						"value": "active"
																					},
																					{
																						"type": "literal",
																						"value": "expired"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2119,
																				2120,
																				2121
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "xrpl/src/models/methods/serverInfo.ts",
																			"line": 250,
																			"character": 23,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L250"
																		}
																	]
																}
															}
														},
														{
															"id": 2116,
															"name": "validator_list_expires",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Either the human readable time, in UTC, when the current validator\nlist will expire, the string unknown if the server has yet to load a\npublished validator list or the string never if the server uses a\nstatic validator list."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverInfo.ts",
																	"line": 249,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L249"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2066,
																2067,
																2068,
																2076,
																2077,
																2078,
																2079,
																2080,
																2084,
																2088,
																2092,
																2093,
																2094,
																2090,
																2091,
																2095,
																2089,
																2098,
																2096,
																2097,
																2099,
																2100,
																2101,
																2102,
																2103,
																2104,
																2105,
																2106,
																2107,
																2115,
																2117,
																2116
															]
														}
													],
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/serverInfo.ts",
															"line": 51,
															"character": 10,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L51"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2064
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/serverInfo.ts",
											"line": 50,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L50"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 2123,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 2124,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 2125,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 2126,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2128,
								2127,
								2122,
								2062,
								2123,
								2124,
								2125,
								2126
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/serverInfo.ts",
							"line": 49,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L49"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2129,
					"name": "ServerStateRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`server_state`"
							},
							{
								"kind": "text",
								"text": " command asks the server for various machine-readable\ninformation about the rippled server's current state. The response is almost\nthe same as the server_info method, but uses units that are easier to process\ninstead of easier to read."
							}
						]
					},
					"children": [
						{
							"id": 2132,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 2130,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/serverState.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": "server_state"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 2131,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2132,
								2130,
								2131
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/serverState.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L12"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 2133,
					"name": "ServerStateResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ServerStateRequest",
								"target": 2129
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 2192,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 2191,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 2186,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 2134,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/serverState.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L22"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2135,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2136,
											"name": "state",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/serverState.ts",
													"line": 23,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L23"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2137,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2138,
															"name": "amendment_blocked",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 24,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L24"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 2139,
															"name": "build_version",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 25,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L25"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2141,
															"name": "closed_ledger",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 27,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L27"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2142,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 2143,
																			"name": "age",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 28,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L28"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2144,
																			"name": "base_fee",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 29,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L29"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2145,
																			"name": "hash",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 30,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L30"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 2146,
																			"name": "reserve_base",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 31,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L31"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2147,
																			"name": "reserve_inc",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 32,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L32"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2148,
																			"name": "seq",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 33,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L33"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2143,
																				2144,
																				2145,
																				2146,
																				2147,
																				2148
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "xrpl/src/models/methods/serverState.ts",
																			"line": 27,
																			"character": 22,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L27"
																		}
																	]
																}
															}
														},
														{
															"id": 2140,
															"name": "complete_ledgers",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 26,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L26"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2149,
															"name": "io_latency_ms",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 35,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L35"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2150,
															"name": "jq_trans_overflow",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 36,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L36"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2151,
															"name": "last_close",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 37,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L37"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2152,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 2153,
																			"name": "converge_time",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 41,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L41"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2154,
																			"name": "proposers",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 42,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L42"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2153,
																				2154
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "xrpl/src/models/methods/serverState.ts",
																			"line": 37,
																			"character": 18,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L37"
																		}
																	]
																}
															}
														},
														{
															"id": 2155,
															"name": "load",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 44,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L44"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2156,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 2157,
																			"name": "job_types",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 45,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L45"
																				}
																			],
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 2193,
																					"name": "JobType"
																				}
																			}
																		},
																		{
																			"id": 2158,
																			"name": "threads",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 46,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L46"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2157,
																				2158
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "xrpl/src/models/methods/serverState.ts",
																			"line": 44,
																			"character": 13,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L44"
																		}
																	]
																}
															}
														},
														{
															"id": 2159,
															"name": "load_base",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 48,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L48"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2160,
															"name": "load_factor",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 49,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L49"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2161,
															"name": "load_factor_fee_escalation",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 50,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L50"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2162,
															"name": "load_factor_fee_queue",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 51,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L51"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2163,
															"name": "load_factor_fee_reference",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 52,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L52"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2164,
															"name": "load_factor_server",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 53,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L53"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2165,
															"name": "peer_disconnects",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 54,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L54"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2166,
															"name": "peer_disconnects_resources",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 55,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L55"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2167,
															"name": "peers",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 56,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L56"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2168,
															"name": "pubkey_node",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 57,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L57"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2169,
															"name": "pubkey_validator",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 58,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L58"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2170,
															"name": "server_state",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 59,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L59"
																}
															],
															"type": {
																"type": "reference",
																"id": 2199,
																"name": "ServerState"
															}
														},
														{
															"id": 2171,
															"name": "server_state_duration_us",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 60,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L60"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2172,
															"name": "state_accounting",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 61,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L61"
																}
															],
															"type": {
																"type": "reference",
																"id": 2200,
																"name": "StateAccountingFinal"
															}
														},
														{
															"id": 2173,
															"name": "time",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 62,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L62"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2174,
															"name": "uptime",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 63,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L63"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2175,
															"name": "validated_ledger",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 64,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L64"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2176,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 2177,
																			"name": "age",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 65,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L65"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2178,
																			"name": "base_fee",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 66,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L66"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2179,
																			"name": "close_time",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 67,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L67"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2180,
																			"name": "hash",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 68,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L68"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 2181,
																			"name": "reserve_base",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 69,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L69"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2182,
																			"name": "reserve_inc",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 70,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L70"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2183,
																			"name": "seq",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "xrpl/src/models/methods/serverState.ts",
																					"line": 71,
																					"character": 8,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L71"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2177,
																				2178,
																				2179,
																				2180,
																				2181,
																				2182,
																				2183
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "xrpl/src/models/methods/serverState.ts",
																			"line": 64,
																			"character": 25,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L64"
																		}
																	]
																}
															}
														},
														{
															"id": 2184,
															"name": "validation_quorum",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 73,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L73"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2185,
															"name": "validator_list_expires",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "xrpl/src/models/methods/serverState.ts",
																	"line": 74,
																	"character": 6,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L74"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2138,
																2139,
																2141,
																2140,
																2149,
																2150,
																2151,
																2155,
																2159,
																2160,
																2161,
																2162,
																2163,
																2164,
																2165,
																2166,
																2167,
																2168,
																2169,
																2170,
																2171,
																2172,
																2173,
																2174,
																2175,
																2184,
																2185
															]
														}
													],
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/serverState.ts",
															"line": 23,
															"character": 11,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L23"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2136
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/serverState.ts",
											"line": 22,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L22"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 2187,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 2188,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 2189,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 2190,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2192,
								2191,
								2186,
								2134,
								2187,
								2188,
								2189,
								2190
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/serverState.ts",
							"line": 21,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverState.ts#L21"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2839,
					"name": "SetFeePostAmendment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Every transaction has the same set of common fields."
							}
						]
					},
					"children": [
						{
							"id": 2843,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2847,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2840,
							"name": "BaseFeeDrops",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The charge, in drops of XRP, for the reference transaction. (This is the transaction cost before scaling for load.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/setFee.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setFee.ts#L26"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2845,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2848,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2849,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2850,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2856,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2841,
							"name": "ReserveBaseDrops",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The base reserve, in drops"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/setFee.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setFee.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2842,
							"name": "ReserveIncrementDrops",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incremental reserve, in drops"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/setFee.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setFee.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2846,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2851,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2853,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2852,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2854,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2844,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 100,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L100"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2855,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2843,
								2847,
								2840,
								2845,
								2848,
								2849,
								2850,
								2856,
								2841,
								2842,
								2846,
								2851,
								2853,
								2852,
								2854,
								2844,
								2855
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/setFee.ts",
							"line": 22,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setFee.ts#L22"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2820,
					"name": "SetFeePreAmendment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Every transaction has the same set of common fields."
							}
						]
					},
					"children": [
						{
							"id": 2825,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2829,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2821,
							"name": "BaseFee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The charge, in drops of XRP, for the reference transaction, as hex. (This is the transaction cost before scaling for load.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/setFee.ts",
									"line": 7,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setFee.ts#L7"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2827,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2830,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2831,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2832,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2838,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2822,
							"name": "ReferenceFeeUnits",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The cost, in fee units, of the [reference transaction](https://xrpl.org/transaction-cost.html#reference-transaction-cost)"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/setFee.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setFee.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2823,
							"name": "ReserveBase",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The base reserve, in drops"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/setFee.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setFee.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2824,
							"name": "ReserveIncrement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incremental reserve, in drops"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/setFee.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setFee.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2828,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2833,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2835,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2834,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2836,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2826,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 100,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L100"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2837,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2825,
								2829,
								2821,
								2827,
								2830,
								2831,
								2832,
								2838,
								2822,
								2823,
								2824,
								2828,
								2833,
								2835,
								2834,
								2836,
								2826,
								2837
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/setFee.ts",
							"line": 3,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setFee.ts#L3"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2857,
					"name": "SetRegularKey",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A SetRegularKey transaction assigns, changes, or removes the regular key\npair associated with an account."
							}
						]
					},
					"children": [
						{
							"id": 2860,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2863,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2861,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2864,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2865,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2866,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2872,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2859,
							"name": "RegularKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A base-58-encoded Address that indicates the regular key pair to be\nassigned to the account. If omitted, removes any existing regular key pair.\nfrom the account. Must not match the master key pair for the address."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/setRegularKey.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setRegularKey.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2862,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2867,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2869,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2868,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2870,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2858,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/setRegularKey.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setRegularKey.ts#L12"
								}
							],
							"type": {
								"type": "literal",
								"value": "SetRegularKey"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2871,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2860,
								2863,
								2861,
								2864,
								2865,
								2866,
								2872,
								2859,
								2862,
								2867,
								2869,
								2868,
								2870,
								2858,
								2871
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/setRegularKey.ts",
							"line": 11,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setRegularKey.ts#L11"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 3002,
					"name": "Signer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3003,
							"name": "Signer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L21"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3004,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3005,
											"name": "Account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/common/index.ts",
													"line": 22,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L22"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3007,
											"name": "SigningPubKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/common/index.ts",
													"line": 24,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L24"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3006,
											"name": "TxnSignature",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/common/index.ts",
													"line": 23,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L23"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3005,
												3007,
												3006
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/common/index.ts",
											"line": 21,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L21"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3003
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 20,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L20"
						}
					]
				},
				{
					"id": 3020,
					"name": "SignerEntry",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The object that describes the signer in SignerEntries."
							}
						]
					},
					"children": [
						{
							"id": 3021,
							"name": "SignerEntry",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The object that describes the signer in SignerEntries."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L61"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3022,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3023,
											"name": "Account",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An XRP Ledger address whose signature contributes to the multi-signature.\nIt does not need to be a funded address in the ledger."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/common/index.ts",
													"line": 66,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L66"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3024,
											"name": "SignerWeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The weight of a signature from this signer.\nA multi-signature is only valid if the sum weight of the signatures provided meets\nor exceeds the signer list's SignerQuorum value."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/common/index.ts",
													"line": 72,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L72"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3025,
											"name": "WalletLocator",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An arbitrary 256-bit (32-byte) field that can be used to identify the signer, which\nmay be useful for smart contracts, or for identifying who controls a key in a large\norganization."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/common/index.ts",
													"line": 78,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L78"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3023,
												3024,
												3025
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/common/index.ts",
											"line": 61,
											"character": 15,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L61"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3021
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 57,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L57"
						}
					]
				},
				{
					"id": 2873,
					"name": "SignerListSet",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SignerListSet transaction creates, replaces, or removes a list of\nsigners that can be used to multi-sign a transaction."
							}
						]
					},
					"children": [
						{
							"id": 2877,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2880,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2878,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2881,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2882,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2883,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2889,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2879,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2876,
							"name": "SignerEntries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of SignerEntry objects, indicating the addresses and weights of\nsigners in this list. This signer list must have at least 1 member and no\nmore than 32 members. No address may appear more than once in the list, nor\nmay the Account submitting the transaction appear in the list."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/signerListSet.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/signerListSet.ts#L26"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3020,
									"name": "SignerEntry"
								}
							}
						},
						{
							"id": 2875,
							"name": "SignerQuorum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A target number for the signer weights. A multi-signature from this list\nis valid only if the sum weights of the signatures provided is greater than\nor equal to this value. To delete a signer list, use the value 0."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/signerListSet.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/signerListSet.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2884,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2886,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2885,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2887,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2874,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/signerListSet.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/signerListSet.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": "SignerListSet"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2888,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2877,
								2880,
								2878,
								2881,
								2882,
								2883,
								2889,
								2879,
								2876,
								2875,
								2884,
								2886,
								2885,
								2887,
								2874,
								2888
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/signerListSet.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/signerListSet.ts#L12"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 1844,
					"name": "SourceCurrencyAmount",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1845,
							"name": "currency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L6"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1846,
							"name": "issuer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
									"line": 7,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L7"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1845,
								1846
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ripplePathFind.ts",
							"line": 5,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ripplePathFind.ts#L5"
						}
					]
				},
				{
					"id": 2201,
					"name": "StateAccounting",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2202,
							"name": "duration_us",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/serverInfo.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L24"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2203,
							"name": "transitions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/serverInfo.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L25"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2202,
								2203
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/serverInfo.ts",
							"line": 23,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L23"
						}
					]
				},
				{
					"id": 1630,
					"name": "SubmitMultisignedRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`submit_multisigned`"
							},
							{
								"kind": "text",
								"text": " command applies a multi-signed transaction and sends\nit to the network to be included in future ledgers. Expects a response in the\nform of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SubmitMultisignedRequest",
								"target": 1630
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1635,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1631,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/submitMultisigned.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submitMultisigned.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": "submit_multisigned"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1633,
							"name": "fail_hard",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, and the transaction fails locally, do not retry or relay the\ntransaction to other servers."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/submitMultisigned.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submitMultisigned.ts#L24"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1634,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1632,
							"name": "tx_json",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Transaction in JSON format with an array of Signers. To be successful, the\nweights of the signatures must be equal or higher than the quorum of the.\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Type/SignerList",
										"target": 2355
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/submitMultisigned.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submitMultisigned.ts#L19"
								}
							],
							"type": {
								"type": "reference",
								"id": 2355,
								"name": "Transaction"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1635,
								1631,
								1633,
								1634,
								1632
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/submitMultisigned.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submitMultisigned.ts#L12"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 1636,
					"name": "SubmitMultisignedResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SubmitMultisignedRequest",
								"target": 1630
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1650,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1649,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1644,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1637,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/submitMultisigned.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submitMultisigned.ts#L33"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1638,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1639,
											"name": "engine_result",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Code indicating the preliminary result of the transaction, for example.\n"
													},
													{
														"kind": "code",
														"text": "`tesSUCCESS`"
													},
													{
														"kind": "text",
														"text": " ."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submitMultisigned.ts",
													"line": 38,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submitMultisigned.ts#L38"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1640,
											"name": "engine_result_code",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Numeric code indicating the preliminary result of the transaction,\ndirectly correlated to "
													},
													{
														"kind": "code",
														"text": "`engine_result`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submitMultisigned.ts",
													"line": 43,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submitMultisigned.ts#L43"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1641,
											"name": "engine_result_message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Human-readable explanation of the preliminary transaction result."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submitMultisigned.ts",
													"line": 45,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submitMultisigned.ts#L45"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1642,
											"name": "tx_blob",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The complete transaction in hex string format."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submitMultisigned.ts",
													"line": 47,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submitMultisigned.ts#L47"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1643,
											"name": "tx_json",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The complete transaction in JSON format."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submitMultisigned.ts",
													"line": 49,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submitMultisigned.ts#L49"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "Object"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1639,
												1640,
												1641,
												1642,
												1643
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/submitMultisigned.ts",
											"line": 33,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submitMultisigned.ts#L33"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1645,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1646,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1647,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1648,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1650,
								1649,
								1644,
								1637,
								1645,
								1646,
								1647,
								1648
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/submitMultisigned.ts",
							"line": 32,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submitMultisigned.ts#L32"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1600,
					"name": "SubmitRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The submit method applies a transaction and sends it to the network to be\nconfirmed and included in future ledgers. Expects a response in the form of a\n"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SubmitResponse",
								"target": 1606
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1605,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1601,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/submit.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": "submit"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1603,
							"name": "fail_hard",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, and the transaction fails locally, do not retry or relay the\ntransaction to other servers. The default is false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/submit.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1604,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1602,
							"name": "tx_blob",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The complete transaction in hex string format."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/submit.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1605,
								1601,
								1603,
								1604,
								1602
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/submit.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L12"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 1606,
					"name": "SubmitResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SubmitRequest",
								"target": 1600
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1629,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1628,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1623,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1607,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/submit.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L29"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1608,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1614,
											"name": "accepted",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value true indicates that the transaction was applied, queued,\nbroadcast, or kept for later. The value "
													},
													{
														"kind": "code",
														"text": "`false`"
													},
													{
														"kind": "text",
														"text": " indicates that none of\nthose happened, so the transaction cannot possibly succeed as long as you\ndo not submit it again and have not already submitted it another time."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 49,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L49"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1615,
											"name": "account_sequence_available",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The next Sequence Number available for the sending account after all\npending and queued transactions."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 54,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L54"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1616,
											"name": "account_sequence_next",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The next Sequence number for the sending account after all transactions\nthat have been provisionally applied, but not transactions in the queue."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 59,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L59"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1617,
											"name": "applied",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value true indicates that this transaction was applied to the open\nledger. In this case, the transaction is likely, but not guaranteed, to\nbe validated in the next ledger version."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 65,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L65"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1618,
											"name": "broadcast",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value true indicates this transaction was broadcast to peer servers\nin the peer-to-peer XRP Ledger network."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 70,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L70"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1609,
											"name": "engine_result",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Text result code indicating the preliminary result of the transaction,\nfor example "
													},
													{
														"kind": "code",
														"text": "`tesSUCCESS`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 34,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L34"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1610,
											"name": "engine_result_code",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Numeric version of the result code."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 36,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L36"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1611,
											"name": "engine_result_message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Human-readable explanation of the transaction's preliminary result."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 38,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L38"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1619,
											"name": "kept",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value true indicates that the transaction was kept to be retried\nlater."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 75,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L75"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1621,
											"name": "open_ledger_cost",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The current open ledger cost before processing this transaction\ntransactions with a lower cost are likely to be queued."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 86,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L86"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1620,
											"name": "queued",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value true indicates the transaction was put in the Transaction\nQueue, which means it is likely to be included in a future ledger\nversion."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 81,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L81"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1612,
											"name": "tx_blob",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The complete transaction in hex string format."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 40,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L40"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1613,
											"name": "tx_json",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The complete transaction in JSON format."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 42,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L42"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "Object"
											}
										},
										{
											"id": 1622,
											"name": "validated_ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the newest validated ledger at the time of\nsubmission. This provides a lower bound on the ledger versions that the\ntransaction can appear in as a result of this request."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/submit.ts",
													"line": 92,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L92"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1614,
												1615,
												1616,
												1617,
												1618,
												1609,
												1610,
												1611,
												1619,
												1621,
												1620,
												1612,
												1613,
												1622
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/submit.ts",
											"line": 29,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L29"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1624,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1625,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1626,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1627,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1629,
								1628,
								1623,
								1607,
								1624,
								1625,
								1626,
								1627
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/submit.ts",
							"line": 28,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/submit.ts#L28"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1886,
					"name": "SubscribeBook",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1891,
							"name": "both",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, return both sides of the order book. The default is false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L36"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1890,
							"name": "snapshot",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, return the current state of the order book once when you\nsubscribe before sending updates. The default is false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1889,
							"name": "taker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unique account address to use as a perspective for viewing offers, in the.\nXRP Ledger's base58 format."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L29"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1887,
							"name": "taker_gets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specification of which currency the account taking the Offer would\nreceive, as a currency object with no amount."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L19"
								}
							],
							"type": {
								"type": "reference",
								"id": 2996,
								"name": "Currency"
							}
						},
						{
							"id": 1888,
							"name": "taker_pays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specification of which currency the account taking the Offer would pay, as\na currency object with no amount."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L24"
								}
							],
							"type": {
								"type": "reference",
								"id": 2996,
								"name": "Currency"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1891,
								1890,
								1889,
								1887,
								1888
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/subscribe.ts",
							"line": 14,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L14"
						}
					]
				},
				{
					"id": 1866,
					"name": "SubscribeRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subscribe method requests periodic notifications from the server when\ncertain events happen. Expects a response in the form of a.\n"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SubscribeResponse",
								"target": 1877
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1869,
							"name": "accounts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array with the unique addresses of accounts to monitor for validated\ntransactions. The addresses must be in the XRP Ledger's base58 format.\nThe server sends a notification for any transaction that affects at least\none of these accounts."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L56"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1870,
							"name": "accounts_proposed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Like accounts, but include transactions that are not yet finalized."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 58,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L58"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1876,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1871,
							"name": "books",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects defining order books  to monitor for updates, as detailed\nBelow."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 63,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L63"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1886,
									"name": "SubscribeBook"
								}
							}
						},
						{
							"id": 1867,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L47"
								}
							],
							"type": {
								"type": "literal",
								"value": "subscribe"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1875,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1868,
							"name": "streams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of string names of generic streams to subscribe to."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L49"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3014,
									"name": "StreamType"
								}
							}
						},
						{
							"id": 1872,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "URL where the server sends a JSON-RPC callbacks for each event.\nAdmin-only."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 68,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L68"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1874,
							"name": "url_password",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Password to provide for basic authentication at the callback URL."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 72,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L72"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1873,
							"name": "url_username",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Username to provide for basic authentication at the callback URL."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 70,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L70"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1869,
								1870,
								1876,
								1871,
								1867,
								1875,
								1868,
								1872,
								1874,
								1873
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/subscribe.ts",
							"line": 46,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L46"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 1877,
					"name": "SubscribeResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SubscribeRequest",
								"target": 1866
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1885,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1884,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1879,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1878,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 83,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L83"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "never"
											}
										],
										"name": "Record",
										"qualifiedName": "Record",
										"package": "typescript"
									},
									{
										"type": "reference",
										"id": 1905,
										"name": "LedgerStreamResponse"
									},
									{
										"type": "reference",
										"id": 1893,
										"name": "BooksSnapshot"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1880,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1881,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1882,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1883,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1885,
								1884,
								1879,
								1878,
								1880,
								1881,
								1882,
								1883
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/subscribe.ts",
							"line": 82,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L82"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2890,
					"name": "TicketCreate",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A TicketCreate transaction sets aside one or more sequence numbers as\nTickets."
							}
						]
					},
					"children": [
						{
							"id": 2893,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2896,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2894,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2897,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L121"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "GlobalFlags"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2898,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2899,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2905,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2895,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2900,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2902,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2901,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2892,
							"name": "TicketCount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How many Tickets to create. This must be a positive number and cannot\ncause the account to own more than 250 Tickets after executing this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/ticketCreate.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/ticketCreate.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2903,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2891,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/ticketCreate.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/ticketCreate.ts#L12"
								}
							],
							"type": {
								"type": "literal",
								"value": "TicketCreate"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2904,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2893,
								2896,
								2894,
								2897,
								2898,
								2899,
								2905,
								2895,
								2900,
								2902,
								2901,
								2892,
								2903,
								2891,
								2904
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/ticketCreate.ts",
							"line": 11,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/ticketCreate.ts#L11"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2352,
					"name": "TransactionAndMetadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2354,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/transaction.ts",
									"line": 88,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/transaction.ts#L88"
								}
							],
							"type": {
								"type": "reference",
								"id": 2984,
								"name": "TransactionMetadata"
							}
						},
						{
							"id": 2353,
							"name": "transaction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/transaction.ts",
									"line": 87,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/transaction.ts#L87"
								}
							],
							"type": {
								"type": "reference",
								"id": 2355,
								"name": "Transaction"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2354,
								2353
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/transaction.ts",
							"line": 86,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/transaction.ts#L86"
						}
					]
				},
				{
					"id": 1651,
					"name": "TransactionEntryRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`transaction_entry`"
							},
							{
								"kind": "text",
								"text": " method retrieves information on a single transaction\nfrom a specific ledger version. Expects a response in the form of a\n"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "TransactionEntryResponse",
								"target": 1658
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1655,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1652,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/transactionEntry.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/transactionEntry.ts#L16"
								}
							],
							"type": {
								"type": "literal",
								"value": "transaction_entry"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1654,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1656,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A 20-byte hex string for the ledger version to use."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_hash"
							}
						},
						{
							"id": 1657,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger to use, or a shortcut string."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"id": 2990,
								"name": "LedgerIndex"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LookupByLedgerRequest.ledger_index"
							}
						},
						{
							"id": 1653,
							"name": "tx_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unique hash of the transaction you are looking up."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/transactionEntry.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/transactionEntry.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1655,
								1652,
								1654,
								1656,
								1657,
								1653
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/transactionEntry.ts",
							"line": 13,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/transactionEntry.ts#L13"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						},
						{
							"type": "reference",
							"name": "LookupByLedgerRequest"
						}
					]
				},
				{
					"id": 1658,
					"name": "TransactionEntryResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "TransactionEntryRequest",
								"target": 1651
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1671,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1670,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1665,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1659,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/transactionEntry.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/transactionEntry.ts#L28"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1660,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1661,
											"name": "ledger_hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The identifying hash of the ledger version the transaction was found in;\nthis is the same as the one from the request."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/transactionEntry.ts",
													"line": 33,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/transactionEntry.ts#L33"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1662,
											"name": "ledger_index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ledger index of the ledger version the transaction was found in;\nthis is the same as the one from the request."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/transactionEntry.ts",
													"line": 38,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/transactionEntry.ts#L38"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1663,
											"name": "metadata",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The transaction metadata, which shows the exact results of the\ntransaction in detail."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/transactionEntry.ts",
													"line": 43,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/transactionEntry.ts#L43"
												}
											],
											"type": {
												"type": "reference",
												"id": 2984,
												"name": "TransactionMetadata"
											}
										},
										{
											"id": 1664,
											"name": "tx_json",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "JSON representation of the Transaction object."
													}
												]
											},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/transactionEntry.ts",
													"line": 45,
													"character": 4,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/transactionEntry.ts#L45"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "Object"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1661,
												1662,
												1663,
												1664
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/transactionEntry.ts",
											"line": 28,
											"character": 10,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/transactionEntry.ts#L28"
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1666,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1667,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1668,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1669,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1671,
								1670,
								1665,
								1659,
								1666,
								1667,
								1668,
								1669
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/transactionEntry.ts",
							"line": 27,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/transactionEntry.ts#L27"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2984,
					"name": "TransactionMetadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2985,
							"name": "AffectedNodes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/metadata.ts",
									"line": 63,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L63"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2983,
									"name": "Node"
								}
							}
						},
						{
							"id": 2986,
							"name": "DeliveredAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/metadata.ts",
									"line": 64,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L64"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						},
						{
							"id": 2988,
							"name": "TransactionIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/metadata.ts",
									"line": 67,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L67"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2989,
							"name": "TransactionResult",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/metadata.ts",
									"line": 68,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L68"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2987,
							"name": "delivered_amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/metadata.ts",
									"line": 66,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L66"
								}
							],
							"type": {
								"type": "reference",
								"id": 3001,
								"name": "Amount"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2985,
								2986,
								2988,
								2989,
								2987
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/metadata.ts",
							"line": 62,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L62"
						}
					]
				},
				{
					"id": 1931,
					"name": "TransactionStream",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Many subscriptions result in messages about transactions."
							}
						]
					},
					"children": [
						{
							"id": 1934,
							"name": "engine_result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "String Transaction result code."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 268,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L268"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1935,
							"name": "engine_result_code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Numeric transaction response code, if applicable."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 270,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L270"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1936,
							"name": "engine_result_message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Human-readable explanation for the transaction response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 272,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L272"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1937,
							"name": "ledger_current_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the current in-progress ledger version for which this\ntransaction is currently proposed."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 277,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L277"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1938,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The identifying hash of the ledger version that includes this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 279,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L279"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1939,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the ledger version that includes this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 281,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L281"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1940,
							"name": "meta",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transaction metadata, which shows the exact outcome of the transaction\nin detail."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 286,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L286"
								}
							],
							"type": {
								"type": "reference",
								"id": 2984,
								"name": "TransactionMetadata"
							}
						},
						{
							"id": 1932,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 265,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L265"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1941,
							"name": "transaction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The definition of the transaction in JSON format."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 288,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L288"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "Object"
							}
						},
						{
							"id": 1933,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 266,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L266"
								}
							],
							"type": {
								"type": "literal",
								"value": "transaction"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseStream.type"
							}
						},
						{
							"id": 1942,
							"name": "validated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, this transaction is included in a validated ledger and its\noutcome is final. Responses from the transaction stream should always be\nvalidated."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 294,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L294"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1943,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 295,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L295"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 1944,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 1945,
												"name": "id",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "xrpl/src/models/methods/subscribe.ts",
														"line": 295,
														"character": 21,
														"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L295"
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 1946,
												"name": "message",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "xrpl/src/models/methods/subscribe.ts",
														"line": 295,
														"character": 33,
														"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L295"
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													1945,
													1946
												]
											}
										],
										"sources": [
											{
												"fileName": "xrpl/src/models/methods/subscribe.ts",
												"line": 295,
												"character": 19,
												"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L295"
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1934,
								1935,
								1936,
								1937,
								1938,
								1939,
								1940,
								1932,
								1941,
								1933,
								1942,
								1943
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/subscribe.ts",
							"line": 264,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L264"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseStream"
						}
					]
				},
				{
					"id": 2918,
					"name": "TrustSet",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create or modify a trust line linking two accounts."
							}
						]
					},
					"children": [
						{
							"id": 2924,
							"name": "Account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unique address of the transaction sender."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2335,
								"name": "BaseTransaction.Account"
							}
						},
						{
							"id": 2927,
							"name": "AccountTxnID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash value identifying another transaction. If provided, this transaction\nis only valid if the sending account's previously-sent transaction matches\nthe provided hash."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "BaseTransaction.AccountTxnID"
							}
						},
						{
							"id": 2925,
							"name": "Fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integer amount of XRP, in drops, to be destroyed as a cost for\ndistributing this transaction to the network. Some transaction types have\ndifferent minimum requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "BaseTransaction.Fee"
							}
						},
						{
							"id": 2923,
							"name": "Flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set of bit-flags for this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 118,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L118"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"id": 2906,
										"name": "TrustSetFlagsInterface"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 2340,
								"name": "BaseTransaction.Flags"
							}
						},
						{
							"id": 2928,
							"name": "LastLedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Highest ledger index this transaction can appear in. Specifying this field\nplaces a strict upper limit on how long the transaction can wait to be\nvalidated or rejected."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "BaseTransaction.LastLedgerSequence"
							}
						},
						{
							"id": 2920,
							"name": "LimitAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Object defining the trust line to create or modify, in the format of a\nCurrency Amount."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 105,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L105"
								}
							],
							"type": {
								"type": "reference",
								"id": 2997,
								"name": "IssuedCurrencyAmount"
							}
						},
						{
							"id": 2929,
							"name": "Memos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional arbitrary information used to identify this transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3008,
									"name": "Memo"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2342,
								"name": "BaseTransaction.Memos"
							}
						},
						{
							"id": 2935,
							"name": "NetworkID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The network id of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "BaseTransaction.NetworkID"
							}
						},
						{
							"id": 2921,
							"name": "QualityIn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value incoming balances on this trust line at the ratio of this number per\n1,000,000,000 units. A value of 0 is shorthand for treating balances at\nface value."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 111,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L111"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2922,
							"name": "QualityOut",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value outgoing balances on this trust line at the ratio of this number per\n1,000,000,000 units. A value of 0 is shorthand for treating balances at\nface value."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L117"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2926,
							"name": "Sequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the account sending the transaction. A transaction\nis only valid if the Sequence number is exactly 1 greater than the previous\ntransaction from the same account. The special case 0 means the transaction\nis using a Ticket instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "BaseTransaction.Sequence"
							}
						},
						{
							"id": 2930,
							"name": "Signers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects that represent a multi-signature which authorizes this\ntransaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L136"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3002,
									"name": "Signer"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "BaseTransaction.Signers"
							}
						},
						{
							"id": 2932,
							"name": "SigningPubKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hex representation of the public key that corresponds to the private key\nused to sign this transaction. If an empty string, indicates a\nmulti-signature is present in the Signers field instead."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "BaseTransaction.SigningPubKey"
							}
						},
						{
							"id": 2931,
							"name": "SourceTag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Arbitrary integer used to identify the reason for this payment, or a sender\non whose behalf this transaction is made. Conventionally, a refund should\nspecify the initial payment's SourceTag as the refund payment's\nDestinationTag."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "BaseTransaction.SourceTag"
							}
						},
						{
							"id": 2933,
							"name": "TicketSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sequence number of the ticket to use in place of a Sequence number. If\nthis is provided, Sequence must be 0. Cannot be used with AccountTxnID."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 154,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L154"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "BaseTransaction.TicketSequence"
							}
						},
						{
							"id": 2919,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of transaction. Valid types include: "
									},
									{
										"kind": "code",
										"text": "`Payment`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`OfferCreate`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`TrustSet`"
									},
									{
										"kind": "text",
										"text": ", and many others."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 100,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L100"
								}
							],
							"type": {
								"type": "literal",
								"value": "TrustSet"
							},
							"overwrites": {
								"type": "reference",
								"id": 2336,
								"name": "BaseTransaction.TransactionType"
							}
						},
						{
							"id": 2934,
							"name": "TxnSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that verifies this transaction as originating from the\naccount it says it is from."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/common.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/common.ts#L159"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "BaseTransaction.TxnSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2924,
								2927,
								2925,
								2923,
								2928,
								2920,
								2929,
								2935,
								2921,
								2922,
								2926,
								2930,
								2932,
								2931,
								2933,
								2919,
								2934
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/trustSet.ts",
							"line": 99,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L99"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2334,
							"name": "BaseTransaction"
						}
					]
				},
				{
					"id": 2906,
					"name": "TrustSetFlagsInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map of flags to boolean values representing "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "TrustSet",
								"target": 2918
							},
							{
								"kind": "text",
								"text": " transaction\nflags."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\n\nconst trustSetTx: TrustSet = {\n TransactionType: 'TrustSet',\n Account: wallet2.getClassicAddress(),\n LimitAmount: {\n   currency: 'FOO',\n   issuer: wallet1.getClassicAddress(),\n   value: '10000000000',\n },\n Flags: {\n   tfSetNoRipple: true\n }\n}\n\n// Autofill the tx to see how flags actually look compared to the interface usage.\nconst autofilledTx = await client.autofill(trustSetTx)\nconsole.log(autofilledTx)\n// {\n//  TransactionType: 'TrustSet',\n//  Account: 'r9dAdQQCBcGajVSeC9CqW3LCugjPDnAkEb',\n//  LimitAmount: {\n//   currency: 'FOO',\n//   issuer: 'rWZzUjo5xGiAoRBqzsndyzonXz47UV8u1',\n//   value: '10000000000'\n//  },\n//  Flags: 131072,\n//  Sequence: 21971483,\n//  Fee: '12',\n//  LastLedgerSequence: 21971503\n// }\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2911,
							"name": "tfClearFreeze",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unfreeze the trust line."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 91,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L91"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2909,
							"name": "tfClearNoRipple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disable the No Ripple flag, allowing rippling on this trust line."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 87,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L87"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2910,
							"name": "tfSetFreeze",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Freeze the trust line."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 89,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L89"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2908,
							"name": "tfSetNoRipple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable the No Ripple flag, which blocks rippling between two trust lines\nof the same currency if this flag is enabled on both."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 85,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L85"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2907,
							"name": "tfSetfAuth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Authorize the other party to hold currency issued by this account. (No\neffect unless using the asfRequireAuth AccountSet flag.) Cannot be unset."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/trustSet.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2911,
								2909,
								2910,
								2908,
								2907
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/trustSet.ts",
							"line": 75,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/trustSet.ts#L75"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GlobalFlags"
						}
					]
				},
				{
					"id": 1672,
					"name": "TxRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tx method retrieves information on a single transaction, by its\nidentifying hash. Expects a response in the form of a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "TxResponse",
								"target": 1680
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1679,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1675,
							"name": "binary",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, return transaction data and metadata as binary serialized to\nhexadecimal strings. If false, return transaction data and metadata as.\nJSON. The default is false."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/tx.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1673,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/tx.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L13"
								}
							],
							"type": {
								"type": "literal",
								"value": "tx"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1678,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1677,
							"name": "max_ledger",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use this with min_ledger to specify a range of up to 1000 ledger indexes,\nending with this ledger (inclusive). If the server cannot find the\ntransaction, it confirms whether it was able to search all the ledgers in\nthe requested range."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/tx.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1676,
							"name": "min_ledger",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use this with max_ledger to specify a range of up to 1000 ledger indexes,\nstarting with this ledger (inclusive). If the server cannot find the\ntransaction, it confirms whether it was able to search all the ledgers in\nthis range."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/tx.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1674,
							"name": "transaction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/tx.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1679,
								1675,
								1673,
								1678,
								1677,
								1676,
								1674
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/tx.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L12"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 1680,
					"name": "TxResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "TxRequest",
								"target": 1672
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1695,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1694,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1689,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1681,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/tx.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L44"
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1682,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1687,
													"name": "date",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "This number measures the number of seconds since the \"Ripple Epoch\" of January 1, 2000 (00:00 UTC)"
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/tx.ts",
															"line": 60,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L60"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1683,
													"name": "hash",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The SHA-512 hash of the transaction."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/tx.ts",
															"line": 46,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L46"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1684,
													"name": "ledger_index",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ledger index of the ledger that includes this transaction."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/tx.ts",
															"line": 48,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L48"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1685,
													"name": "meta",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Transaction metadata, which describes the results of the transaction.\n Can be undefined if a transaction has not been validated yet."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/tx.ts",
															"line": 51,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L51"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"id": 2984,
																"name": "TransactionMetadata"
															}
														]
													}
												},
												{
													"id": 1686,
													"name": "validated",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "If true, this data comes from a validated ledger version; if omitted or.\nSet to false, this data is not final."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/models/methods/tx.ts",
															"line": 56,
															"character": 4,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L56"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1687,
														1683,
														1684,
														1685,
														1686
													]
												}
											],
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/tx.ts",
													"line": 44,
													"character": 10,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L44"
												}
											]
										}
									},
									{
										"type": "reference",
										"id": 1696,
										"name": "T"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1688,
							"name": "searched_all",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the server was able to search all of the specified ledger\nversions, and the transaction was in none of them. If false, the server did\nnot have all of the specified ledger versions available, so it is not sure.\nIf one of them might contain the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/tx.ts",
									"line": 68,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L68"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1690,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1691,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1692,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1693,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1695,
								1694,
								1689,
								1681,
								1688,
								1690,
								1691,
								1692,
								1693
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/tx.ts",
							"line": 42,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/tx.ts#L42"
						}
					],
					"typeParameters": [
						{
							"id": 1696,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2334,
								"name": "BaseTransaction"
							},
							"default": {
								"type": "reference",
								"id": 2355,
								"name": "Transaction"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 2936,
					"name": "UNLModify",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Mark a change to the Negative UNL."
							}
						]
					},
					"children": [
						{
							"id": 2938,
							"name": "LedgerSequence",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index where this pseudo-transaction appears.\nThis distinguishes the pseudo-transaction from other occurrences of the same change."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/UNLModify.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/UNLModify.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2937,
							"name": "TransactionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/UNLModify.ts",
									"line": 7,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/UNLModify.ts#L7"
								}
							],
							"type": {
								"type": "literal",
								"value": "UNLModify"
							}
						},
						{
							"id": 2939,
							"name": "UNLModifyDisabling",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If 0, this change represents removing a validator from the Negative UNL.\nIf 1, this change represents adding a validator to the Negative UNL."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/UNLModify.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/UNLModify.ts#L17"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": 0
									},
									{
										"type": "literal",
										"value": 1
									}
								]
							}
						},
						{
							"id": 2940,
							"name": "UNLModifyValidator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The validator to add or remove, as identified by its master public key."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/transactions/UNLModify.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/UNLModify.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2938,
								2937,
								2939,
								2940
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/UNLModify.ts",
							"line": 6,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/UNLModify.ts#L6"
						}
					]
				},
				{
					"id": 1999,
					"name": "UnsubscribeBook",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2002,
							"name": "both",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/unsubscribe.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/unsubscribe.ts#L8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2000,
							"name": "taker_gets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/unsubscribe.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/unsubscribe.ts#L6"
								}
							],
							"type": {
								"type": "reference",
								"id": 2996,
								"name": "Currency"
							}
						},
						{
							"id": 2001,
							"name": "taker_pays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/unsubscribe.ts",
									"line": 7,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/unsubscribe.ts#L7"
								}
							],
							"type": {
								"type": "reference",
								"id": 2996,
								"name": "Currency"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2002,
								2000,
								2001
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/unsubscribe.ts",
							"line": 5,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/unsubscribe.ts#L5"
						}
					]
				},
				{
					"id": 1982,
					"name": "UnsubscribeRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unsubscribe command tells the server to stop sending messages for a\nparticular subscription or set of subscriptions. Expects a response in the\nform of an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "UnsubscribeResponse",
								"target": 1990
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1985,
							"name": "accounts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of unique account addresses to stop receiving updates for, in the.\nXRP Ledger's base58 format."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/unsubscribe.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/unsubscribe.ts#L29"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1986,
							"name": "accounts_proposed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Like accounts, but for accounts_proposed subscriptions that included\nnot-yet-validated transactions."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/unsubscribe.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/unsubscribe.ts#L34"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1989,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The API version to use. If omitted, use version 1."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1053,
								"name": "BaseRequest.api_version"
							}
						},
						{
							"id": 1987,
							"name": "books",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of objects defining order books to unsubscribe from, as explained\nbelow."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/unsubscribe.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/unsubscribe.ts#L39"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1999,
									"name": "UnsubscribeBook"
								}
							}
						},
						{
							"id": 1983,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the API method."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/unsubscribe.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/unsubscribe.ts#L19"
								}
							],
							"type": {
								"type": "literal",
								"value": "unsubscribe"
							},
							"overwrites": {
								"type": "reference",
								"id": 1052,
								"name": "BaseRequest.command"
							}
						},
						{
							"id": 1988,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique value to identify this request. The response to this request uses\nthe same id field. This way, even if responses arrive out of order, you\nknow which request prompted which response."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L12"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1051,
								"name": "BaseRequest.id"
							}
						},
						{
							"id": 1984,
							"name": "streams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of string names of generic streams to unsubscribe from, including.\nLedger, server, transactions, and transactions_proposed."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/unsubscribe.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/unsubscribe.ts#L24"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3014,
									"name": "StreamType"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1985,
								1986,
								1989,
								1987,
								1983,
								1988,
								1984
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/unsubscribe.ts",
							"line": 18,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/unsubscribe.ts#L18"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1050,
							"name": "BaseRequest"
						}
					]
				},
				{
					"id": 1990,
					"name": "UnsubscribeResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Response expected from a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "UnsubscribeRequest",
								"target": 1982
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 1998,
							"name": "api_version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "BaseResponse.api_version"
							}
						},
						{
							"id": 1997,
							"name": "forwarded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "BaseResponse.forwarded"
							}
						},
						{
							"id": 1992,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1057,
								"name": "BaseResponse.id"
							}
						},
						{
							"id": 1991,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/unsubscribe.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/unsubscribe.ts#L48"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"name": "Record",
								"qualifiedName": "Record",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"id": 1060,
								"name": "BaseResponse.result"
							}
						},
						{
							"id": 1993,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "BaseResponse.status"
							}
						},
						{
							"id": 1994,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "BaseResponse.type"
							}
						},
						{
							"id": 1995,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L37"
								}
							],
							"type": {
								"type": "literal",
								"value": "load"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "BaseResponse.warning"
							}
						},
						{
							"id": 1996,
							"name": "warnings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/baseMethod.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/baseMethod.ts#L38"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1067,
									"name": "ResponseWarning"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "BaseResponse.warnings"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1998,
								1997,
								1992,
								1991,
								1993,
								1994,
								1995,
								1996
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/unsubscribe.ts",
							"line": 47,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/unsubscribe.ts#L47"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1056,
							"name": "BaseResponse"
						}
					]
				},
				{
					"id": 1914,
					"name": "ValidationStream",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The validations stream sends messages whenever it receives validation\nmessages, also called validation votes, regardless of whether or not the\nvalidation message is from a trusted validator."
							}
						]
					},
					"children": [
						{
							"id": 1916,
							"name": "amendments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The value validationReceived indicates this is from the validations\nStream."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 188,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L188"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1917,
							"name": "base_fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amendments this server wants to be added to the protocol."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 190,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L190"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1918,
							"name": "cookie",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An arbitrary value chosen by the server at startup.\n\nIf the same validation key pair signs validations with different cookies\nconcurrently, that usually indicates that multiple servers are incorrectly\nconfigured to use the same validation key pair."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 198,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L198"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1919,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The contents of the validation message in its canonical binary form"
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 202,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L202"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1920,
							"name": "flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unscaled transaction cost (reference_fee value) this server wants to\nset by Fee voting."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 207,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L207"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1921,
							"name": "full",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Bit-mask of flags added to this validation message. The flag 0x80000000\nindicates that the validation signature is fully-canonical. The flag\n0x00000001 indicates that this is a full validation; otherwise it's a\npartial validation. Partial validations are not meant to vote for any\nparticular ledger. A partial validation indicates that the validator is\nstill online but not keeping up with consensus."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 216,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L216"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1922,
							"name": "ledger_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, this is a full validation. Otherwise, this is a partial\nvalidation. Partial validations are not meant to vote for any particular\nledger. A partial validation indicates that the validator is still online\nbut not keeping up with consensus."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 223,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L223"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1923,
							"name": "ledger_index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ledger index of the proposed ledger."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 225,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L225"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1924,
							"name": "load_fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The local load-scaled transaction cost this validator is currently\nenforcing, in fee units."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 230,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L230"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1925,
							"name": "master_key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The validator's master public key, if the validator is using a validator\ntoken, in the XRP Ledger's base58 format."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 235,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L235"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1926,
							"name": "reserve_base",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum reserve requirement ("
									},
									{
										"kind": "code",
										"text": "`account_reserve`"
									},
									{
										"kind": "text",
										"text": " value) this validator\nwants to set by fee voting."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 240,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L240"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1927,
							"name": "reserve_inc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The increment in the reserve requirement (owner_reserve value) this\nvalidator wants to set by fee voting."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 245,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L245"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1928,
							"name": "signature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature that the validator used to sign its vote for this ledger."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 247,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L247"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1929,
							"name": "signing_time",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When this validation vote was signed, in seconds since the Ripple Epoch."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 249,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L249"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1915,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 183,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L183"
								}
							],
							"type": {
								"type": "literal",
								"value": "validationReceived"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseStream.type"
							}
						},
						{
							"id": 1930,
							"name": "validation_public_key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The public key from the key-pair that the validator used to sign the\nmessage, in the XRP Ledger's base58 format. This identifies the validator\nsending the message and can also be used to verify the signature. If the\nvalidator is using a token, this is an ephemeral public key."
									}
								]
							},
							"sources": [
								{
									"fileName": "xrpl/src/models/methods/subscribe.ts",
									"line": 256,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L256"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1916,
								1917,
								1918,
								1919,
								1920,
								1921,
								1922,
								1923,
								1924,
								1925,
								1926,
								1927,
								1928,
								1929,
								1915,
								1930
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/subscribe.ts",
							"line": 182,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L182"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseStream"
						}
					]
				},
				{
					"id": 2991,
					"name": "XRP",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2992,
							"name": "currency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "xrpl/src/models/common/index.ts",
									"line": 4,
									"character": 2,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L4"
								}
							],
							"type": {
								"type": "literal",
								"value": "XRP"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2992
							]
						}
					],
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 3,
							"character": 17,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L3"
						}
					]
				},
				{
					"id": 1264,
					"name": "AccountObject",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Account Objects can be a Check, a DepositPreauth, an Escrow, an Offer, a\nPayChannel, a SignerList, a Ticket, or a RippleState."
							}
						]
					},
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountObjects.ts",
							"line": 66,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L66"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 834,
								"name": "Check"
							},
							{
								"type": "reference",
								"id": 850,
								"name": "DepositPreauth"
							},
							{
								"type": "reference",
								"id": 872,
								"name": "Escrow"
							},
							{
								"type": "reference",
								"id": 964,
								"name": "Offer"
							},
							{
								"type": "reference",
								"id": 981,
								"name": "PayChannel"
							},
							{
								"type": "reference",
								"id": 1023,
								"name": "SignerList"
							},
							{
								"type": "reference",
								"id": 999,
								"name": "RippleState"
							},
							{
								"type": "reference",
								"id": 1035,
								"name": "Ticket"
							}
						]
					}
				},
				{
					"id": 1265,
					"name": "AccountObjectType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/accountObjects.ts",
							"line": 14,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/accountObjects.ts#L14"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "check"
							},
							{
								"type": "literal",
								"value": "deposit_preauth"
							},
							{
								"type": "literal",
								"value": "escrow"
							},
							{
								"type": "literal",
								"value": "nft_offer"
							},
							{
								"type": "literal",
								"value": "offer"
							},
							{
								"type": "literal",
								"value": "payment_channel"
							},
							{
								"type": "literal",
								"value": "signer_list"
							},
							{
								"type": "literal",
								"value": "state"
							},
							{
								"type": "literal",
								"value": "ticket"
							}
						]
					}
				},
				{
					"id": 3001,
					"name": "Amount",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 18,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L18"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2997,
								"name": "IssuedCurrencyAmount"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1893,
					"name": "BooksSnapshot",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/subscribe.ts",
							"line": 75,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L75"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 964,
							"name": "Offer"
						}
					}
				},
				{
					"id": 2996,
					"name": "Currency",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 12,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L12"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2993,
								"name": "IssuedCurrency"
							},
							{
								"type": "reference",
								"id": 2991,
								"name": "XRP"
							}
						]
					}
				},
				{
					"id": 1525,
					"name": "LedgerDataLabeledLedgerEntry",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledgerData.ts",
							"line": 42,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L42"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1526,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1527,
											"name": "ledgerEntryType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerData.ts",
													"line": 43,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L43"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1527
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/ledgerData.ts",
											"line": 42,
											"character": 43,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L42"
										}
									]
								}
							},
							{
								"type": "reference",
								"id": 914,
								"name": "LedgerEntry"
							}
						]
					}
				},
				{
					"id": 1545,
					"name": "LedgerDataLedgerState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/ledgerData.ts",
							"line": 50,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L50"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1546,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1547,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/methods/ledgerData.ts",
													"line": 50,
													"character": 38,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L50"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1547
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/methods/ledgerData.ts",
											"line": 50,
											"character": 36,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/ledgerData.ts#L50"
										}
									]
								}
							},
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1528,
										"name": "LedgerDataBinaryLedgerEntry"
									},
									{
										"type": "reference",
										"id": 1525,
										"name": "LedgerDataLabeledLedgerEntry"
									}
								]
							}
						]
					}
				},
				{
					"id": 2990,
					"name": "LedgerIndex",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 1,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L1"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "validated"
									},
									{
										"type": "literal",
										"value": "closed"
									},
									{
										"type": "literal",
										"value": "current"
									}
								]
							}
						]
					}
				},
				{
					"id": 2983,
					"name": "Node",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/metadata.ts",
							"line": 30,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L30"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2950,
								"name": "CreatedNode"
							},
							{
								"type": "reference",
								"id": 2959,
								"name": "ModifiedNode"
							},
							{
								"type": "reference",
								"id": 2974,
								"name": "DeletedNode"
							}
						]
					}
				},
				{
					"id": 3019,
					"name": "Path",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 52,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L52"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 3015,
							"name": "PathStep"
						}
					}
				},
				{
					"id": 1768,
					"name": "PathFindRequest",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`path_find`"
							},
							{
								"kind": "text",
								"text": " method searches for a path along which a transaction can\npossibly be made, and periodically sends updates when the path changes over\ntime. For a simpler version that is supported by JSON-RPC, see the\n"
							},
							{
								"kind": "code",
								"text": "`ripple_path_find`"
							},
							{
								"kind": "text",
								"text": " method."
							}
						]
					},
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/pathFind.ts",
							"line": 53,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/pathFind.ts#L53"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1769,
								"name": "PathFindCreateRequest"
							},
							{
								"type": "reference",
								"id": 1779,
								"name": "PathFindCloseRequest"
							},
							{
								"type": "reference",
								"id": 1788,
								"name": "PathFindStatusRequest"
							}
						]
					}
				},
				{
					"id": 1065,
					"name": "Request",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/index.ts",
							"line": 152,
							"character": 5,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/index.ts#L152"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1087,
								"name": "AccountChannelsRequest"
							},
							{
								"type": "reference",
								"id": 1114,
								"name": "AccountCurrenciesRequest"
							},
							{
								"type": "reference",
								"id": 1151,
								"name": "AccountInfoRequest"
							},
							{
								"type": "reference",
								"id": 1192,
								"name": "AccountLinesRequest"
							},
							{
								"type": "reference",
								"id": 1239,
								"name": "AccountNFTsRequest"
							},
							{
								"type": "reference",
								"id": 1266,
								"name": "AccountObjectsRequest"
							},
							{
								"type": "reference",
								"id": 1302,
								"name": "AccountOffersRequest"
							},
							{
								"type": "reference",
								"id": 1328,
								"name": "AccountTxRequest"
							},
							{
								"type": "reference",
								"id": 1367,
								"name": "GatewayBalancesRequest"
							},
							{
								"type": "reference",
								"id": 1402,
								"name": "NoRippleCheckRequest"
							},
							{
								"type": "reference",
								"id": 1425,
								"name": "LedgerRequest"
							},
							{
								"type": "reference",
								"id": 1485,
								"name": "LedgerClosedRequest"
							},
							{
								"type": "reference",
								"id": 1501,
								"name": "LedgerCurrentRequest"
							},
							{
								"type": "reference",
								"id": 1516,
								"name": "LedgerDataRequest"
							},
							{
								"type": "reference",
								"id": 1548,
								"name": "LedgerEntryRequest"
							},
							{
								"type": "reference",
								"id": 1600,
								"name": "SubmitRequest"
							},
							{
								"type": "reference",
								"id": 1630,
								"name": "SubmitMultisignedRequest"
							},
							{
								"type": "reference",
								"id": 1651,
								"name": "TransactionEntryRequest"
							},
							{
								"type": "reference",
								"id": 1672,
								"name": "TxRequest"
							},
							{
								"type": "reference",
								"id": 1697,
								"name": "BookOffersRequest"
							},
							{
								"type": "reference",
								"id": 1743,
								"name": "DepositAuthorizedRequest"
							},
							{
								"type": "reference",
								"id": 1768,
								"name": "PathFindRequest"
							},
							{
								"type": "reference",
								"id": 1814,
								"name": "RipplePathFindRequest"
							},
							{
								"type": "reference",
								"id": 1847,
								"name": "ChannelVerifyRequest"
							},
							{
								"type": "reference",
								"id": 1866,
								"name": "SubscribeRequest"
							},
							{
								"type": "reference",
								"id": 1982,
								"name": "UnsubscribeRequest"
							},
							{
								"type": "reference",
								"id": 2003,
								"name": "FeeRequest"
							},
							{
								"type": "reference",
								"id": 2034,
								"name": "ManifestRequest"
							},
							{
								"type": "reference",
								"id": 2057,
								"name": "ServerInfoRequest"
							},
							{
								"type": "reference",
								"id": 2129,
								"name": "ServerStateRequest"
							},
							{
								"type": "reference",
								"id": 2204,
								"name": "PingRequest"
							},
							{
								"type": "reference",
								"id": 2220,
								"name": "RandomRequest"
							},
							{
								"type": "reference",
								"id": 2244,
								"name": "NFTBuyOffersRequest"
							},
							{
								"type": "reference",
								"id": 2263,
								"name": "NFTSellOffersRequest"
							},
							{
								"type": "reference",
								"id": 2282,
								"name": "NFTInfoRequest"
							},
							{
								"type": "reference",
								"id": 2298,
								"name": "NFTHistoryRequest"
							}
						]
					}
				},
				{
					"id": 1066,
					"name": "Response",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/index.ts",
							"line": 203,
							"character": 5,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/index.ts#L203"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1097,
								"name": "AccountChannelsResponse"
							},
							{
								"type": "reference",
								"id": 1122,
								"name": "AccountCurrenciesResponse"
							},
							{
								"type": "reference",
								"id": 1161,
								"name": "AccountInfoResponse"
							},
							{
								"type": "reference",
								"id": 1202,
								"name": "AccountLinesResponse"
							},
							{
								"type": "reference",
								"id": 1248,
								"name": "AccountNFTsResponse"
							},
							{
								"type": "reference",
								"id": 1277,
								"name": "AccountObjectsResponse"
							},
							{
								"type": "reference",
								"id": 1312,
								"name": "AccountOffersResponse"
							},
							{
								"type": "reference",
								"id": 1341,
								"name": "AccountTxResponse"
							},
							{
								"type": "reference",
								"id": 1376,
								"name": "GatewayBalancesResponse"
							},
							{
								"type": "reference",
								"id": 1412,
								"name": "NoRippleCheckResponse"
							},
							{
								"type": "reference",
								"id": 1438,
								"name": "LedgerResponse"
							},
							{
								"type": "reference",
								"id": 1489,
								"name": "LedgerClosedResponse"
							},
							{
								"type": "reference",
								"id": 1505,
								"name": "LedgerCurrentResponse"
							},
							{
								"type": "reference",
								"id": 1530,
								"name": "LedgerDataResponse"
							},
							{
								"type": "reference",
								"id": 1585,
								"name": "LedgerEntryResponse"
							},
							{
								"type": "reference",
								"id": 1606,
								"name": "SubmitResponse"
							},
							{
								"type": "reference",
								"id": 1636,
								"name": "SubmitMultisignedResponse"
							},
							{
								"type": "reference",
								"id": 1658,
								"name": "TransactionEntryResponse"
							},
							{
								"type": "reference",
								"id": 1680,
								"name": "TxResponse"
							},
							{
								"type": "reference",
								"id": 1728,
								"name": "BookOffersResponse"
							},
							{
								"type": "reference",
								"id": 1751,
								"name": "DepositAuthorizedResponse"
							},
							{
								"type": "reference",
								"id": 1793,
								"name": "PathFindResponse"
							},
							{
								"type": "reference",
								"id": 1825,
								"name": "RipplePathFindResponse"
							},
							{
								"type": "reference",
								"id": 1855,
								"name": "ChannelVerifyResponse"
							},
							{
								"type": "reference",
								"id": 1877,
								"name": "SubscribeResponse"
							},
							{
								"type": "reference",
								"id": 1990,
								"name": "UnsubscribeResponse"
							},
							{
								"type": "reference",
								"id": 2007,
								"name": "FeeResponse"
							},
							{
								"type": "reference",
								"id": 2039,
								"name": "ManifestResponse"
							},
							{
								"type": "reference",
								"id": 2061,
								"name": "ServerInfoResponse"
							},
							{
								"type": "reference",
								"id": 2133,
								"name": "ServerStateResponse"
							},
							{
								"type": "reference",
								"id": 2208,
								"name": "PingResponse"
							},
							{
								"type": "reference",
								"id": 2224,
								"name": "RandomResponse"
							},
							{
								"type": "reference",
								"id": 2251,
								"name": "NFTBuyOffersResponse"
							},
							{
								"type": "reference",
								"id": 2270,
								"name": "NFTSellOffersResponse"
							},
							{
								"type": "reference",
								"id": 2289,
								"name": "NFTInfoResponse"
							},
							{
								"type": "reference",
								"id": 2311,
								"name": "NFTHistoryResponse"
							}
						]
					}
				},
				{
					"id": 2199,
					"name": "ServerState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/serverInfo.ts",
							"line": 14,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L14"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "disconnected"
							},
							{
								"type": "literal",
								"value": "connected"
							},
							{
								"type": "literal",
								"value": "syncing"
							},
							{
								"type": "literal",
								"value": "tracking"
							},
							{
								"type": "literal",
								"value": "full"
							},
							{
								"type": "literal",
								"value": "validating"
							},
							{
								"type": "literal",
								"value": "proposing"
							}
						]
					}
				},
				{
					"id": 2817,
					"name": "SetFee",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Marks a change in transaction cost or reserve requirements as a result of Fee Voting.\n\nThe output will be based on the status of the "
							},
							{
								"kind": "code",
								"text": "`XRPFees`"
							},
							{
								"kind": "text",
								"text": " amendment at the time of this transaction.\n- Before: "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SetFeePostAmendment",
								"target": 2839
							},
							{
								"kind": "text",
								"text": "\n- After: "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SetFeePostAmendment",
								"target": 2839
							}
						]
					},
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/setFee.ts",
							"line": 46,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setFee.ts#L46"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 2818,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2819,
											"name": "TransactionType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/models/transactions/setFee.ts",
													"line": 47,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setFee.ts#L47"
												}
											],
											"type": {
												"type": "literal",
												"value": "SetFee"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2819
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/models/transactions/setFee.ts",
											"line": 46,
											"character": 21,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/setFee.ts#L46"
										}
									]
								}
							},
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2820,
										"name": "SetFeePreAmendment"
									},
									{
										"type": "reference",
										"id": 2839,
										"name": "SetFeePostAmendment"
									}
								]
							}
						]
					}
				},
				{
					"id": 2200,
					"name": "StateAccountingFinal",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/serverInfo.ts",
							"line": 39,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/serverInfo.ts#L39"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2199,
										"name": "ServerState"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "validating"
											},
											{
												"type": "literal",
												"value": "proposing"
											}
										]
									}
								],
								"name": "Exclude",
								"qualifiedName": "Exclude",
								"package": "typescript"
							},
							{
								"type": "reference",
								"id": 2201,
								"name": "StateAccounting"
							}
						],
						"name": "Record",
						"qualifiedName": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1892,
					"name": "Stream",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/methods/subscribe.ts",
							"line": 428,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/methods/subscribe.ts#L428"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1894,
								"name": "LedgerStream"
							},
							{
								"type": "reference",
								"id": 1914,
								"name": "ValidationStream"
							},
							{
								"type": "reference",
								"id": 1931,
								"name": "TransactionStream"
							},
							{
								"type": "reference",
								"id": 1947,
								"name": "PathFindStream"
							},
							{
								"type": "reference",
								"id": 1959,
								"name": "PeerStatusStream"
							},
							{
								"type": "reference",
								"id": 1967,
								"name": "OrderBookStream"
							},
							{
								"type": "reference",
								"id": 1979,
								"name": "ConsensusStream"
							}
						]
					}
				},
				{
					"id": 3014,
					"name": "StreamType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/common/index.ts",
							"line": 36,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/common/index.ts#L36"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "consensus"
							},
							{
								"type": "literal",
								"value": "ledger"
							},
							{
								"type": "literal",
								"value": "manifests"
							},
							{
								"type": "literal",
								"value": "peer_status"
							},
							{
								"type": "literal",
								"value": "transactions"
							},
							{
								"type": "literal",
								"value": "transactions_proposed"
							},
							{
								"type": "literal",
								"value": "server"
							},
							{
								"type": "literal",
								"value": "validations"
							}
						]
					}
				},
				{
					"id": 2355,
					"name": "Transaction",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/transaction.ts",
							"line": 57,
							"character": 12,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/transaction.ts#L57"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2408,
								"name": "AccountDelete"
							},
							{
								"type": "reference",
								"id": 2385,
								"name": "AccountSet"
							},
							{
								"type": "reference",
								"id": 2425,
								"name": "CheckCancel"
							},
							{
								"type": "reference",
								"id": 2441,
								"name": "CheckCash"
							},
							{
								"type": "reference",
								"id": 2459,
								"name": "CheckCreate"
							},
							{
								"type": "reference",
								"id": 2479,
								"name": "DepositPreauth"
							},
							{
								"type": "reference",
								"id": 2496,
								"name": "EscrowCancel"
							},
							{
								"type": "reference",
								"id": 2513,
								"name": "EscrowCreate"
							},
							{
								"type": "reference",
								"id": 2534,
								"name": "EscrowFinish"
							},
							{
								"type": "reference",
								"id": 2573,
								"name": "NFTokenAcceptOffer"
							},
							{
								"type": "reference",
								"id": 2591,
								"name": "NFTokenBurn"
							},
							{
								"type": "reference",
								"id": 2608,
								"name": "NFTokenCancelOffer"
							},
							{
								"type": "reference",
								"id": 2624,
								"name": "NFTokenCreateOffer"
							},
							{
								"type": "reference",
								"id": 2648,
								"name": "NFTokenMint"
							},
							{
								"type": "reference",
								"id": 2677,
								"name": "OfferCancel"
							},
							{
								"type": "reference",
								"id": 2703,
								"name": "OfferCreate"
							},
							{
								"type": "reference",
								"id": 2730,
								"name": "Payment"
							},
							{
								"type": "reference",
								"id": 2758,
								"name": "PaymentChannelClaim"
							},
							{
								"type": "reference",
								"id": 2778,
								"name": "PaymentChannelCreate"
							},
							{
								"type": "reference",
								"id": 2799,
								"name": "PaymentChannelFund"
							},
							{
								"type": "reference",
								"id": 2857,
								"name": "SetRegularKey"
							},
							{
								"type": "reference",
								"id": 2873,
								"name": "SignerListSet"
							},
							{
								"type": "reference",
								"id": 2890,
								"name": "TicketCreate"
							},
							{
								"type": "reference",
								"id": 2918,
								"name": "TrustSet"
							}
						]
					}
				},
				{
					"id": 3104,
					"name": "hashes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "xrpl/src/utils/index.ts",
							"line": 161,
							"character": 6,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L161"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3105,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3114,
									"name": "hashAccountRoot",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/utils/index.ts",
											"line": 164,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L164"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3115,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/hashes/index.ts",
													"line": 71,
													"character": 16,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/index.ts#L71"
												}
											],
											"signatures": [
												{
													"id": 3116,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Compute AccountRoot Ledger Object Index.\n\nAll objects in a ledger's state tree have a unique Index.\nThe AccountRoot Ledger Object Index is derived by hashing the\naddress with a namespace identifier. This ensures every\nIndex is unique.\n\nSee [Ledger Object Indexes](https://xrpl.org/ledger-object-ids.html)."
															}
														],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The Ledger Object Index for the account."
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 3117,
															"name": "address",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The classic account address."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 3152,
									"name": "hashEscrow",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/utils/index.ts",
											"line": 172,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L172"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3153,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/hashes/index.ts",
													"line": 157,
													"character": 16,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/index.ts#L157"
												}
											],
											"signatures": [
												{
													"id": 3154,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Compute the Hash of an Escrow LedgerEntry."
															}
														],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The hash of the Escrow LedgerEntry."
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 3155,
															"name": "address",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Address of the Escrow."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3156,
															"name": "sequence",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "OfferSequence of the Escrow."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 3141,
									"name": "hashLedger",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/utils/index.ts",
											"line": 170,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L170"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3142,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/hashes/hashLedger.ts",
													"line": 223,
													"character": 9,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/hashLedger.ts#L223"
												}
											],
											"signatures": [
												{
													"id": 3143,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Compute the hash of a ledger."
															}
														],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The has of ledger."
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 3144,
															"name": "ledger",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Ledger to compute the hash for."
																	}
																]
															},
															"type": {
																"type": "reference",
																"id": 899,
																"name": "default"
															}
														},
														{
															"id": 3145,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Allow client to recompute Transaction and State Hashes."
																	}
																]
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 3146,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 3147,
																			"name": "computeTreeHashes",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Whether to recompute the Transaction and State Hashes."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "xrpl/src/utils/hashes/hashLedger.ts",
																					"line": 226,
																					"character": 4,
																					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/hashLedger.ts#L226"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				3147
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "xrpl/src/utils/hashes/hashLedger.ts",
																			"line": 225,
																			"character": 11,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/hashLedger.ts#L225"
																		}
																	]
																}
															},
															"defaultValue": "{}"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 3148,
									"name": "hashLedgerHeader",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/utils/index.ts",
											"line": 171,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L171"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3149,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/hashes/hashLedger.ts",
													"line": 101,
													"character": 16,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/hashLedger.ts#L101"
												}
											],
											"signatures": [
												{
													"id": 3150,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Compute the hash of a ledger."
															}
														],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The hash of the ledger."
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 3151,
															"name": "ledgerHeader",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Ledger to compute the hash of."
																	}
																]
															},
															"type": {
																"type": "reference",
																"id": 899,
																"name": "default"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 3122,
									"name": "hashOfferId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/utils/index.ts",
											"line": 166,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L166"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3123,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/hashes/index.ts",
													"line": 110,
													"character": 16,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/index.ts#L110"
												}
											],
											"signatures": [
												{
													"id": 3124,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "[Offer Index Format](https://xrpl.org/offer.html#offer-id-format).\n\nThe Index of a Offer object is the SHA-512Half of the following values, concatenated in order:\n* The Offer space key (0x006F)\n* The AccountID of the account placing the offer\n* The Sequence number of the OfferCreate transaction that created the offer.\n\nThis method computes an Offer Index."
															}
														],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The Index of the account's Offer object."
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 3125,
															"name": "address",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The classic account address of the SignerList owner (starting with r)."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3126,
															"name": "sequence",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Sequence of the Offer."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 3157,
									"name": "hashPaymentChannel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/utils/index.ts",
											"line": 173,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L173"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3158,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/hashes/index.ts",
													"line": 174,
													"character": 16,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/index.ts#L174"
												}
											],
											"signatures": [
												{
													"id": 3159,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Compute the hash of a Payment Channel."
															}
														],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "Hash of the Payment Channel."
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 3160,
															"name": "address",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Account of the Payment Channel."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3161,
															"name": "dstAddress",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Destination Account of the Payment Channel."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3162,
															"name": "sequence",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Sequence number of the Transaction that created the Payment Channel."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 3106,
									"name": "hashSignedTx",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/utils/index.ts",
											"line": 162,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L162"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3107,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/hashes/hashLedger.ts",
													"line": 74,
													"character": 16,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/hashLedger.ts#L74"
												}
											],
											"signatures": [
												{
													"id": 3108,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Hashes the Transaction object as the ledger does. Throws if the transaction is unsigned."
															}
														],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "A hash of tx."
																	}
																]
															},
															{
																"tag": "@throws",
																"content": [
																	{
																		"kind": "text",
																		"text": "ValidationError if the Transaction is unsigned.\\"
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 3109,
															"name": "tx",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "A transaction to hash. Tx may be in binary blob form. Tx must be signed."
																	}
																]
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"id": 2355,
																		"name": "Transaction"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 3118,
									"name": "hashSignerListId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/utils/index.ts",
											"line": 165,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L165"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3119,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/hashes/index.ts",
													"line": 89,
													"character": 16,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/index.ts#L89"
												}
											],
											"signatures": [
												{
													"id": 3120,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "[SignerList Index Format](https://xrpl.org/signerlist.html#signerlist-id-format).\n\nThe Index of a SignerList object is the SHA-512Half of the following values, concatenated in order:\n  * The RippleState space key (0x0053)\n  * The AccountID of the owner of the SignerList\n  * The SignerListID (currently always 0).\n\nThis method computes a SignerList Ledger Object Index."
															}
														],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The Index of the account's SignerList object."
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 3121,
															"name": "address",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The classic account address of the SignerList owner (starting with r)."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 3137,
									"name": "hashStateTree",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/utils/index.ts",
											"line": 169,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L169"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3138,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/hashes/hashLedger.ts",
													"line": 148,
													"character": 16,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/hashLedger.ts#L148"
												}
											],
											"signatures": [
												{
													"id": 3139,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Compute the state hash of a list of LedgerEntries."
															}
														],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "Hash of SHAMap that consists of all entries."
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 3140,
															"name": "entries",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "List of LedgerEntries."
																	}
																]
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 914,
																	"name": "LedgerEntry"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 3127,
									"name": "hashTrustline",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/utils/index.ts",
											"line": 167,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L167"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3128,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/hashes/index.ts",
													"line": 129,
													"character": 16,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/index.ts#L129"
												}
											],
											"signatures": [
												{
													"id": 3129,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Compute the hash of a Trustline."
															}
														],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The hash of the Trustline."
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 3130,
															"name": "address1",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "One of the addresses in the Trustline."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3131,
															"name": "address2",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The other address in the Trustline."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3132,
															"name": "currency",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Currency in the Trustline."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 3110,
									"name": "hashTx",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/utils/index.ts",
											"line": 163,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L163"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3111,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/hashes/index.ts",
													"line": 52,
													"character": 16,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/index.ts#L52"
												}
											],
											"signatures": [
												{
													"id": 3112,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Hash the given binary transaction data with the single-signing prefix.\n\nSee [Serialization Format](https://xrpl.org/serialization.html)."
															}
														],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The hash to sign."
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 3113,
															"name": "txBlobHex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The binary transaction blob as a hexadecimal string."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 3133,
									"name": "hashTxTree",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "xrpl/src/utils/index.ts",
											"line": 168,
											"character": 2,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L168"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3134,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/hashes/hashLedger.ts",
													"line": 126,
													"character": 16,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/hashes/hashLedger.ts#L126"
												}
											],
											"signatures": [
												{
													"id": 3135,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Compute the root hash of the SHAMap containing all transactions."
															}
														],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The root hash of the SHAMap."
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 3136,
															"name": "transactions",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "List of Transactions."
																	}
																]
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "Object"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3114,
										3152,
										3141,
										3148,
										3122,
										3157,
										3106,
										3118,
										3137,
										3127,
										3110,
										3133
									]
								}
							],
							"categories": [
								{
									"title": "Utilities",
									"children": [
										3114,
										3152,
										3141,
										3148,
										3122,
										3157,
										3106,
										3118,
										3137,
										3127,
										3110,
										3133
									]
								}
							],
							"sources": [
								{
									"fileName": "xrpl/src/utils/index.ts",
									"line": 161,
									"character": 15,
									"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L161"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 3443,
					"name": "authorizeChannel",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/Wallet/signer.ts",
							"line": 74,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/signer.ts#L74"
						}
					],
					"signatures": [
						{
							"id": 3444,
							"name": "authorizeChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a signature that can be used to redeem a specific amount of XRP from a payment channel."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A signature that can be used to redeem a specific amount of XRP from a payment channel."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3445,
									"name": "wallet",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The account that will sign for this payment channel."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 691,
										"name": "Wallet"
									}
								},
								{
									"id": 3446,
									"name": "channelId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An id for the payment channel to redeem XRP from."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3447,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The amount in drops to redeem."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3207,
					"name": "classicAddressToXAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/index.d.ts",
							"line": 3,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 3208,
							"name": "classicAddressToXAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3209,
									"name": "classicAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3210,
									"name": "tag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 3211,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3203,
					"name": "convertHexToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/stringConversion.ts",
							"line": 20,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/stringConversion.ts#L20"
						}
					],
					"signatures": [
						{
							"id": 3204,
							"name": "convertHexToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts hex to its string equivalent. Useful to read the Domain field and some Memos."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The converted string."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3205,
									"name": "hex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The hex to convert to a string."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3206,
									"name": "encoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The encoding to use. Defaults to 'utf8' (UTF-8). 'ascii' is also allowed."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "BufferEncoding",
										"qualifiedName": "global.BufferEncoding",
										"package": "@types/node"
									},
									"defaultValue": "'utf8'"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3200,
					"name": "convertStringToHex",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/stringConversion.ts",
							"line": 8,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/stringConversion.ts#L8"
						}
					],
					"signatures": [
						{
							"id": 3201,
							"name": "convertStringToHex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a string to its hex equivalent. Useful for Memos."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The Hex equivalent of the string."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3202,
									"name": "string",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The string to convert to Hex."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3083,
					"name": "decimalToQuality",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/quality.ts",
							"line": 79,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/quality.ts#L79"
						}
					],
					"signatures": [
						{
							"id": 3084,
							"name": "decimalToQuality",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a string decimal to the \"billionths\" format for use with QualityIn/\nQualityOut"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A number in the \"billionths\" format."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ValidationError when the parameter is not convertible to\n\"billionths\" format."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3085,
									"name": "decimal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string decimal (i.e. \".00034\")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 3089,
					"name": "decimalToTransferRate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/quality.ts",
							"line": 32,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/quality.ts#L32"
						}
					],
					"signatures": [
						{
							"id": 3090,
							"name": "decimalToTransferRate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a string decimal to \"billionths\" format for use with TransferRate."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A number in the \"billionths\" format."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ValidationError when the parameter is not convertible to\n\"billionths\" format."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3091,
									"name": "decimal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string decimal between 0 and 1.00"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 3274,
					"name": "decode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/index.ts",
							"line": 125,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L125"
						}
					],
					"signatures": [
						{
							"id": 3275,
							"name": "decode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Decodes a hex string into a transaction | ledger entry"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The hex string decoded according to XRPL serialization format."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3276,
									"name": "hex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "hex string in the XRPL serialization format."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"qualifiedName": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3244,
					"name": "decodeAccountID",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
							"line": 59,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3245,
							"name": "decodeAccountID",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3246,
									"name": "accountId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						}
					]
				},
				{
					"id": 3256,
					"name": "decodeAccountPublic",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
							"line": 64,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3257,
							"name": "decodeAccountPublic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3258,
									"name": "base58string",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						}
					]
				},
				{
					"id": 3250,
					"name": "decodeNodePublic",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
							"line": 61,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3251,
							"name": "decodeNodePublic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3252,
									"name": "base58string",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						}
					]
				},
				{
					"id": 3229,
					"name": "decodeSeed",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
							"line": 48,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3230,
							"name": "decodeSeed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3231,
									"name": "seed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3232,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3233,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3236,
													"name": "expectedLength",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
															"line": 51,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 3234,
													"name": "versionTypes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
															"line": 49,
															"character": 4
														}
													],
													"type": {
														"type": "tuple",
														"elements": [
															{
																"type": "literal",
																"value": "ed25519"
															},
															{
																"type": "literal",
																"value": "secp256k1"
															}
														]
													}
												},
												{
													"id": 3235,
													"name": "versions",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
															"line": 50,
															"character": 4
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														3236,
														3234,
														3235
													]
												}
											],
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
													"line": 48,
													"character": 56
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3237,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3239,
											"name": "bytes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
													"line": 54,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										},
										{
											"id": 3240,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
													"line": 55,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ed25519"
													},
													{
														"type": "literal",
														"value": "secp256k1"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 3238,
											"name": "version",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
													"line": 53,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3239,
												3240,
												3238
											]
										}
									],
									"sources": [
										{
											"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
											"line": 52,
											"character": 4
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 3264,
					"name": "decodeXAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/index.d.ts",
							"line": 10,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 3265,
							"name": "decodeXAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3266,
									"name": "xAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3267,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3268,
											"name": "accountId",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/index.d.ts",
													"line": 11,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										},
										{
											"id": 3269,
											"name": "tag",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/index.d.ts",
													"line": 12,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "literal",
														"value": false
													}
												]
											}
										},
										{
											"id": 3270,
											"name": "test",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/index.d.ts",
													"line": 13,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3268,
												3269,
												3270
											]
										}
									],
									"sources": [
										{
											"fileName": "ripple-address-codec/dist/index.d.ts",
											"line": 10,
											"character": 51
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 3174,
					"name": "deriveAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-keypairs/dist/index.d.ts",
							"line": 18,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 3175,
							"name": "deriveAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3176,
									"name": "publicKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3163,
					"name": "deriveKeypair",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-keypairs/dist/index.d.ts",
							"line": 8,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 3164,
							"name": "deriveKeypair",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3165,
									"name": "seed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3166,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3167,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3170,
													"name": "accountIndex",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "ripple-keypairs/dist/index.d.ts",
															"line": 11,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 3168,
													"name": "algorithm",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "ripple-keypairs/dist/index.d.ts",
															"line": 9,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "ed25519"
															},
															{
																"type": "literal",
																"value": "ecdsa-secp256k1"
															}
														]
													}
												},
												{
													"id": 3169,
													"name": "validator",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "ripple-keypairs/dist/index.d.ts",
															"line": 10,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														3170,
														3168,
														3169
													]
												}
											],
											"sources": [
												{
													"fileName": "ripple-keypairs/dist/index.d.ts",
													"line": 8,
													"character": 55
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3171,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3173,
											"name": "privateKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-keypairs/dist/index.d.ts",
													"line": 14,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3172,
											"name": "publicKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-keypairs/dist/index.d.ts",
													"line": 13,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3173,
												3172
											]
										}
									],
									"sources": [
										{
											"fileName": "ripple-keypairs/dist/index.d.ts",
											"line": 12,
											"character": 4
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 3177,
					"name": "deriveXAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/derive.ts",
							"line": 14,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/derive.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 3178,
							"name": "deriveXAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Derive an X-Address from a public key and a destination tag."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "X-Address."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3179,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Public key and destination tag to encode as an X-Address."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3180,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3181,
													"name": "publicKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The public key corresponding to an address."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/utils/derive.ts",
															"line": 15,
															"character": 2,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/derive.ts#L15"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3182,
													"name": "tag",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A destination tag to encode into an X-address. False indicates no destination tag."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/utils/derive.ts",
															"line": 16,
															"character": 2,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/derive.ts#L16"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "literal",
																"value": false
															}
														]
													}
												},
												{
													"id": 3183,
													"name": "test",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Whether this address is for use in Testnet."
															}
														]
													},
													"sources": [
														{
															"fileName": "xrpl/src/utils/derive.ts",
															"line": 17,
															"character": 2,
															"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/derive.ts#L17"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														3181,
														3182,
														3183
													]
												}
											],
											"sources": [
												{
													"fileName": "xrpl/src/utils/derive.ts",
													"line": 14,
													"character": 33,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/derive.ts#L14"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3059,
					"name": "dropsToXrp",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/xrpConversion.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/xrpConversion.ts#L18"
						}
					],
					"signatures": [
						{
							"id": 3060,
							"name": "dropsToXrp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert Drops to XRP."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Amount in XRP."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "When drops amount is invalid."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3061,
									"name": "dropsToConvert",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Drops to convert to XRP. This can be a string, number, or BigNumber."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Value",
										"qualifiedName": "BigNumber.Value",
										"package": "bignumber.js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3271,
					"name": "encode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/index.ts",
							"line": 84,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L84"
						}
					],
					"signatures": [
						{
							"id": 3272,
							"name": "encode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Encodes a LedgerEntry or Transaction into a hex string"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A hex string representing the encoded object."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3273,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "LedgerEntry or Transaction in JSON format."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 2355,
												"name": "Transaction"
											},
											{
												"type": "reference",
												"id": 914,
												"name": "LedgerEntry"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3241,
					"name": "encodeAccountID",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
							"line": 57,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3242,
							"name": "encodeAccountID",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3243,
									"name": "bytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Sequence"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3253,
					"name": "encodeAccountPublic",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
							"line": 63,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3254,
							"name": "encodeAccountPublic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3255,
									"name": "bytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Sequence"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3277,
					"name": "encodeForMultiSigning",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/index.ts",
							"line": 115,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L115"
						}
					],
					"signatures": [
						{
							"id": 3278,
							"name": "encodeForMultiSigning",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Encodes a Transaction for multi-signing"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A hex string representing the encoded object."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3279,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Transaction in JSON format."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2355,
										"name": "Transaction"
									}
								},
								{
									"id": 3280,
									"name": "signer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the account signing this transaction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3281,
					"name": "encodeForSigning",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/index.ts",
							"line": 94,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L94"
						}
					],
					"signatures": [
						{
							"id": 3282,
							"name": "encodeForSigning",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Encodes a Transaction for signing"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A hex string representing the encoded object."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3283,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "LedgerEntry in JSON or Transaction format."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2355,
										"name": "Transaction"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3284,
					"name": "encodeForSigningClaim",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/index.ts",
							"line": 104,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L104"
						}
					],
					"signatures": [
						{
							"id": 3285,
							"name": "encodeForSigningClaim",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Encodes a PaymentChannelClaim for signing"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A hex string representing the encoded object."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3286,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PaymentChannelClaim in JSON format."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2758,
										"name": "PaymentChannelClaim"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3247,
					"name": "encodeNodePublic",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
							"line": 62,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3248,
							"name": "encodeNodePublic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3249,
									"name": "bytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Sequence"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3225,
					"name": "encodeSeed",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
							"line": 47,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3226,
							"name": "encodeSeed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3227,
									"name": "entropy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Sequence"
									}
								},
								{
									"id": 3228,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ed25519"
											},
											{
												"type": "literal",
												"value": "secp256k1"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3259,
					"name": "encodeXAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/index.d.ts",
							"line": 4,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 3260,
							"name": "encodeXAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3261,
									"name": "accountId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								},
								{
									"id": 3262,
									"name": "tag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 3263,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3049,
					"name": "getBalanceChanges",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/getBalanceChanges.ts",
							"line": 163,
							"character": 24,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/getBalanceChanges.ts#L163"
						}
					],
					"signatures": [
						{
							"id": 3050,
							"name": "getBalanceChanges",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Computes the complete list of every balance that changed in the ledger\nas a result of the given transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Parsed balance changes."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3051,
									"name": "metadata",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Transaction metadata."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2984,
										"name": "TransactionMetadata"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 3052,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 3053,
												"name": "account",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "xrpl/src/utils/getBalanceChanges.ts",
														"line": 166,
														"character": 2,
														"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/getBalanceChanges.ts#L166"
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 3054,
												"name": "balances",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "xrpl/src/utils/getBalanceChanges.ts",
														"line": 167,
														"character": 2,
														"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/getBalanceChanges.ts#L167"
													}
												],
												"type": {
													"type": "array",
													"elementType": {
														"type": "reflection",
														"declaration": {
															"id": 3055,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 3056,
																	"name": "currency",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "xrpl/src/utils/getBalanceChanges.ts",
																			"line": 168,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/getBalanceChanges.ts#L168"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 3057,
																	"name": "issuer",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "xrpl/src/utils/getBalanceChanges.ts",
																			"line": 169,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/getBalanceChanges.ts#L169"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 3058,
																	"name": "value",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "xrpl/src/utils/getBalanceChanges.ts",
																			"line": 170,
																			"character": 4,
																			"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/getBalanceChanges.ts#L170"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3056,
																		3057,
																		3058
																	]
																}
															],
															"sources": [
																{
																	"fileName": "xrpl/src/utils/getBalanceChanges.ts",
																	"line": 167,
																	"character": 18,
																	"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/getBalanceChanges.ts#L167"
																}
															]
														}
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													3053,
													3054
												]
											}
										],
										"sources": [
											{
												"fileName": "xrpl/src/utils/getBalanceChanges.ts",
												"line": 165,
												"character": 9,
												"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/getBalanceChanges.ts#L165"
											}
										]
									}
								}
							}
						}
					]
				},
				{
					"id": 3287,
					"name": "getNFTokenID",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/getNFTokenID.ts",
							"line": 36,
							"character": 24,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/getNFTokenID.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 3288,
							"name": "getNFTokenID",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets the NFTokenID for an NFT recently minted with NFTokenMint."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The NFTokenID for the minted NFT."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "if meta is not TransactionMetadata."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3289,
									"name": "meta",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Metadata from the response to submitting and waiting for an NFTokenMint transaction or from a "
											},
											{
												"kind": "code",
												"text": "`tx`"
											},
											{
												"kind": "text",
												"text": " method call."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 2984,
												"name": "TransactionMetadata"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 3065,
					"name": "hasNextPage",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/index.ts",
							"line": 153,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L153"
						}
					],
					"signatures": [
						{
							"id": 3066,
							"name": "hasNextPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if there are more pages of data.\n\nWhen there are more results than contained in the response, the response\nincludes a "
									},
									{
										"kind": "code",
										"text": "`marker`"
									},
									{
										"kind": "text",
										"text": " field.\n\nSee https://ripple.com/build/rippled-apis/#markers-and-pagination."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the response has more pages of data."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3067,
									"name": "response",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Response to check for more pages on."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1066,
										"name": "Response"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 2941,
					"name": "isCreatedNode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/metadata.ts",
							"line": 38,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 2942,
							"name": "isCreatedNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A typeguard to check if a node is a CreatedNode."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "whether the given node is a CreatedNode."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2943,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A node from metadata."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2983,
										"name": "Node"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "node",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 2950,
									"name": "CreatedNode"
								}
							}
						}
					]
				},
				{
					"id": 2947,
					"name": "isDeletedNode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/metadata.ts",
							"line": 58,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L58"
						}
					],
					"signatures": [
						{
							"id": 2948,
							"name": "isDeletedNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A typeguard to check if a node is a DeletedNode."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "whether the given node is a DeletedNode."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2949,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A node from metadata."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2983,
										"name": "Node"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "node",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 2974,
									"name": "DeletedNode"
								}
							}
						}
					]
				},
				{
					"id": 2944,
					"name": "isModifiedNode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/metadata.ts",
							"line": 48,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/metadata.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 2945,
							"name": "isModifiedNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A typeguard to check if a node is a ModifiedNode."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "whether the given node is a ModifiedNode."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2946,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A node from metadata."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2983,
										"name": "Node"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "node",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 2959,
									"name": "ModifiedNode"
								}
							}
						}
					]
				},
				{
					"id": 3101,
					"name": "isValidAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/index.ts",
							"line": 137,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L137"
						}
					],
					"signatures": [
						{
							"id": 3102,
							"name": "isValidAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Validates that a given address is a valid X-Address or a valid classic\naddress."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if address is a valid X-Address or classic address."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3103,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Address to validate."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 3222,
					"name": "isValidClassicAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/xrp-codec.d.ts",
							"line": 65,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3223,
							"name": "isValidClassicAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3224,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 3098,
					"name": "isValidSecret",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/index.ts",
							"line": 69,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/index.ts#L69"
						}
					],
					"signatures": [
						{
							"id": 3099,
							"name": "isValidSecret",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if a secret is valid."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if secret can be derived into a keypair."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3100,
									"name": "secret",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Secret to test for validity."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 3219,
					"name": "isValidXAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/index.d.ts",
							"line": 15,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 3220,
							"name": "isValidXAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3221,
									"name": "xAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 3071,
					"name": "isoTimeToRippleTime",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/timeConversion.ts",
							"line": 43,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/timeConversion.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 3072,
							"name": "isoTimeToRippleTime",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert an ISO8601 timestmap to a ripple timestamp."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Seconds since ripple epoch (1/1/2000 GMT)."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3073,
									"name": "iso8601",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "International standard date format."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Date",
												"qualifiedName": "Date",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 769,
					"name": "keyToRFC1751Mnemonic",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/Wallet/rfc1751.ts",
							"line": 60,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/rfc1751.ts#L60"
						}
					],
					"signatures": [
						{
							"id": 770,
							"name": "keyToRFC1751Mnemonic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a modified RFC1751 mnemonic in the same way rippled's wallet_propose does."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A mnemonic following rippled's modified RFC1751 mnemonic standard."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 771,
									"name": "hex_key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An encoded secret in hex format."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3451,
					"name": "multisign",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/Wallet/signer.ts",
							"line": 30,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/signer.ts#L30"
						}
					],
					"signatures": [
						{
							"id": 3452,
							"name": "multisign",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Takes several transactions with Signer fields (in object or blob form) and creates a\nsingle transaction with all Signers that then gets signed and returned."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A single signed Transaction which has all Signers from transactions within it."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ValidationError if:\n- There were no transactions given to sign\n- The SigningPubKey field is not the empty string in any given transaction\n- Any transaction is missing a Signers field."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3453,
									"name": "transactions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of signed Transactions (in object or blob form) to combine into a single signed Transaction."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"id": 2355,
													"name": "Transaction"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1047,
					"name": "parseAccountRootFlags",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/utils/flags.ts",
							"line": 34,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/utils/flags.ts#L34"
						}
					],
					"signatures": [
						{
							"id": 1048,
							"name": "parseAccountRootFlags",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert an AccountRoot Flags number into an interface for easy interpretation."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An interface with all flags as booleans."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1049,
									"name": "flags",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A number which is the bitwise and of all enabled AccountRootFlagsInterface."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 813,
								"name": "AccountRootFlagsInterface"
							}
						}
					]
				},
				{
					"id": 3290,
					"name": "parseNFTokenID",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/parseNFTokenID.ts",
							"line": 54,
							"character": 24,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/parseNFTokenID.ts#L54"
						}
					],
					"signatures": [
						{
							"id": 3291,
							"name": "parseNFTokenID",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Parses an NFTokenID into the information it is encoding.\n\nExample decoding:\n\n000B 0539 C35B55AA096BA6D87A6E6C965A6534150DC56E5E 12C5D09E 0000000C\n+--- +--- +--------------------------------------- +------- +-------\n|    |    |                                        |        |\n|    |    |                                        |        "
									},
									{
										"kind": "code",
										"text": "`---> Sequence: 12\n|    |    |                                        |\n|    |    |                                        `"
									},
									{
										"kind": "text",
										"text": "---> Scrambled Taxon: 314,953,886\n|    |    |                                              Unscrambled Taxon: 1337\n|    |    |\n|    |    "
									},
									{
										"kind": "code",
										"text": "`---> Issuer: rJoxBSzpXhPtAuqFmqxQtGKjA13jUJWthE\n|    |\n|    `"
									},
									{
										"kind": "text",
										"text": "---> TransferFee: 1337.0 bps or 13.37%\n|\n`---> Flags: 11 -> lsfBurnable, lsfOnlyXRP and lsfTransferable"
									}
								],
								"blockTags": [
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "XrplError when given an invalid nftokenID."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a decoded nftokenID with all fields encoded within."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3292,
									"name": "nftokenID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A hex string which identifies an NFToken on the ledger."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3293,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3295,
											"name": "Flags",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/parseNFTokenID.ts",
													"line": 56,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/parseNFTokenID.ts#L56"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3297,
											"name": "Issuer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/parseNFTokenID.ts",
													"line": 58,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/parseNFTokenID.ts#L58"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3294,
											"name": "NFTokenID",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/parseNFTokenID.ts",
													"line": 55,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/parseNFTokenID.ts#L55"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3299,
											"name": "Sequence",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/parseNFTokenID.ts",
													"line": 60,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/parseNFTokenID.ts#L60"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3298,
											"name": "Taxon",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/parseNFTokenID.ts",
													"line": 59,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/parseNFTokenID.ts#L59"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3296,
											"name": "TransferFee",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "xrpl/src/utils/parseNFTokenID.ts",
													"line": 57,
													"character": 2,
													"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/parseNFTokenID.ts#L57"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3295,
												3297,
												3294,
												3299,
												3298,
												3296
											]
										}
									],
									"sources": [
										{
											"fileName": "xrpl/src/utils/parseNFTokenID.ts",
											"line": 54,
											"character": 59,
											"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/parseNFTokenID.ts#L54"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 3080,
					"name": "percentToQuality",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/quality.ts",
							"line": 167,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/quality.ts#L167"
						}
					],
					"signatures": [
						{
							"id": 3081,
							"name": "percentToQuality",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a string percent to the \"billionths\" format for use with QualityIn/\nQualityOut"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A number in the \"billionths\" format."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ValidationError when the percent parameter is not convertible to\n\"billionths\" format."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3082,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string percent (i.e. \".034%\")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 3086,
					"name": "percentToTransferRate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/quality.ts",
							"line": 65,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/quality.ts#L65"
						}
					],
					"signatures": [
						{
							"id": 3087,
							"name": "percentToTransferRate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a string percent to \"billionths\" format for use with TransferRate."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A number in the \"billionths\" format."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ValidationError when the percent parameter is not convertible to\n\"billionths\" format."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3088,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string percent between 0% and 100%."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 3095,
					"name": "qualityToDecimal",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/quality.ts",
							"line": 111,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/quality.ts#L111"
						}
					],
					"signatures": [
						{
							"id": 3096,
							"name": "qualityToDecimal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a quality in \"billionths\" format to a decimal."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "decimal representation of quality."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ValidationError when quality is not convertible to decimal format."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3097,
									"name": "quality",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Quality to convert to decimal."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 772,
					"name": "rfc1751MnemonicToKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/Wallet/rfc1751.ts",
							"line": 100,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/rfc1751.ts#L100"
						}
					],
					"signatures": [
						{
							"id": 773,
							"name": "rfc1751MnemonicToKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts an english mnemonic following rippled's modified RFC1751 standard to an encoded hex secret."
									}
								],
								"blockTags": [
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "Error if the parity after decoding does not match."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Buffer containing an encoded secret."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 774,
									"name": "english",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A mnemonic generated using ripple's modified RFC1751 standard."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						}
					]
				},
				{
					"id": 3068,
					"name": "rippleTimeToISOTime",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/timeConversion.ts",
							"line": 32,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/timeConversion.ts#L32"
						}
					],
					"signatures": [
						{
							"id": 3069,
							"name": "rippleTimeToISOTime",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert a ripple timestamp to an Iso8601 timestamp."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Iso8601 international standard date format."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3070,
									"name": "rippleTime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Is the number of seconds since Ripple Epoch (1/1/2000 GMT)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3074,
					"name": "rippleTimeToUnixTime",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/timeConversion.ts",
							"line": 10,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/timeConversion.ts#L10"
						}
					],
					"signatures": [
						{
							"id": 3075,
							"name": "rippleTimeToUnixTime",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert a ripple timestamp to a unix timestamp."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Milliseconds since unix epoch."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3076,
									"name": "rpepoch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "(seconds since 1/1/2000 GMT)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1044,
					"name": "setTransactionFlagsToNumber",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/utils/flags.ts",
							"line": 53,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/utils/flags.ts#L53"
						}
					],
					"signatures": [
						{
							"id": 1045,
							"name": "setTransactionFlagsToNumber",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets a transaction's flags to its numeric representation."
									}
								]
							},
							"parameters": [
								{
									"id": 1046,
									"name": "tx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A transaction to set its flags to its numeric representation."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2355,
										"name": "Transaction"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3184,
					"name": "signPaymentChannelClaim",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/signPaymentChannelClaim.ts",
							"line": 15,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/signPaymentChannelClaim.ts#L15"
						}
					],
					"signatures": [
						{
							"id": 3185,
							"name": "signPaymentChannelClaim",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sign a payment channel claim."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the channel is valid."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3186,
									"name": "channel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Channel identifier specified by the paymentChannelClaim."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3187,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Amount specified by the paymentChannelClaim."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3188,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Private Key to sign paymentChannelClaim with."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3092,
					"name": "transferRateToDecimal",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/quality.ts",
							"line": 137,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/quality.ts#L137"
						}
					],
					"signatures": [
						{
							"id": 3093,
							"name": "transferRateToDecimal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a transfer rate in \"billionths\" format to a decimal."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "decimal representation of transfer Rate."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ValidationError when it cannot convert from billionths format."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3094,
									"name": "rate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "TransferRate to convert to decimal."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3077,
					"name": "unixTimeToRippleTime",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/timeConversion.ts",
							"line": 21,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/timeConversion.ts#L21"
						}
					],
					"signatures": [
						{
							"id": 3078,
							"name": "unixTimeToRippleTime",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert a unix timestamp to a ripple timestamp."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Seconds since Ripple Epoch (1/1/2000 GMT)."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3079,
									"name": "timestamp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "(ms since unix epoch)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 2349,
					"name": "validate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/models/transactions/transaction.ts",
							"line": 99,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/models/transactions/transaction.ts#L99"
						}
					],
					"signatures": [
						{
							"id": 2350,
							"name": "validate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Verifies various Transaction Types.\nEncode/decode and individual type validation."
									}
								],
								"blockTags": [
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ValidationError When the Transaction is malformed."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2351,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A Transaction."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"qualifiedName": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3189,
					"name": "verifyKeypairSignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-keypairs/dist/index.d.ts",
							"line": 17,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 3190,
							"name": "verifyKeypairSignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3191,
									"name": "messageHex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3192,
									"name": "signature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3193,
									"name": "publicKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 3194,
					"name": "verifyPaymentChannelClaim",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/verifyPaymentChannelClaim.ts",
							"line": 17,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/verifyPaymentChannelClaim.ts#L17"
						}
					],
					"signatures": [
						{
							"id": 3195,
							"name": "verifyPaymentChannelClaim",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Verify the signature of a payment channel claim."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the channel is valid."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3196,
									"name": "channel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Channel identifier specified by the paymentChannelClaim."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3197,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Amount specified by the paymentChannelClaim."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3198,
									"name": "signature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Signature produced from signing paymentChannelClaim."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3199,
									"name": "publicKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Public key that signed the paymentChannelClaim."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 3448,
					"name": "verifySignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/Wallet/signer.ts",
							"line": 94,
							"character": 9,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/Wallet/signer.ts#L94"
						}
					],
					"signatures": [
						{
							"id": 3449,
							"name": "verifySignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Verifies that the given transaction has a valid signature based on public-key encryption."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns true if tx has a valid signature, and returns false otherwise."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3450,
									"name": "tx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A transaction to verify the signature of. (Can be in object or encoded string format)."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 2355,
												"name": "Transaction"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 3212,
					"name": "xAddressToClassicAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "ripple-address-codec/dist/index.d.ts",
							"line": 5,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 3213,
							"name": "xAddressToClassicAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3214,
									"name": "xAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3215,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3216,
											"name": "classicAddress",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/index.d.ts",
													"line": 6,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3217,
											"name": "tag",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/index.d.ts",
													"line": 7,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "literal",
														"value": false
													}
												]
											}
										},
										{
											"id": 3218,
											"name": "test",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "ripple-address-codec/dist/index.d.ts",
													"line": 8,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3216,
												3217,
												3218
											]
										}
									],
									"sources": [
										{
											"fileName": "ripple-address-codec/dist/index.d.ts",
											"line": 5,
											"character": 61
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 3062,
					"name": "xrpToDrops",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "xrpl/src/utils/xrpConversion.ts",
							"line": 64,
							"character": 16,
							"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/utils/xrpConversion.ts#L64"
						}
					],
					"signatures": [
						{
							"id": 3063,
							"name": "xrpToDrops",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert an amount in XRP to an amount in drops."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Amount in drops."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "When amount in xrp is invalid."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3064,
									"name": "xrpToConvert",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Amount in XRP."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Value",
										"qualifiedName": "BigNumber.Value",
										"package": "bignumber.js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						775
					]
				},
				{
					"title": "Enumerations",
					"children": [
						2356,
						2371,
						688,
						2570,
						2644,
						2667,
						2693,
						2752,
						2722,
						2912
					]
				},
				{
					"title": "Classes",
					"children": [
						98,
						384,
						3324,
						3360,
						3348,
						3420,
						3396,
						3336,
						3372,
						3384,
						3312,
						3408,
						691,
						3431,
						3300
					]
				},
				{
					"title": "Interfaces",
					"children": [
						1087,
						1097,
						1114,
						1122,
						2408,
						1137,
						1151,
						1161,
						1192,
						1202,
						1218,
						1232,
						1239,
						1248,
						1266,
						1277,
						1295,
						1302,
						1312,
						1179,
						1186,
						2385,
						2378,
						1328,
						1341,
						1358,
						1050,
						1056,
						2334,
						1707,
						1725,
						1697,
						1728,
						1074,
						1847,
						1855,
						2425,
						2441,
						2459,
						667,
						1979,
						2950,
						2974,
						1743,
						1751,
						2479,
						2553,
						2235,
						2496,
						2513,
						2534,
						2003,
						2007,
						1364,
						1367,
						1376,
						2993,
						2997,
						2193,
						1465,
						1485,
						1489,
						1501,
						1505,
						1528,
						1516,
						1530,
						1548,
						1585,
						1480,
						1453,
						1425,
						1438,
						1894,
						1905,
						2034,
						2039,
						3008,
						2959,
						2244,
						2251,
						2298,
						2311,
						2328,
						2282,
						2289,
						3031,
						2263,
						2270,
						3038,
						2573,
						2591,
						2608,
						2624,
						2646,
						2648,
						2672,
						1402,
						1412,
						2677,
						2703,
						2698,
						1967,
						1779,
						1769,
						1784,
						1793,
						1788,
						1947,
						3015,
						2730,
						2758,
						2755,
						2778,
						2799,
						2726,
						1959,
						2204,
						2208,
						2220,
						2224,
						3026,
						1067,
						1811,
						1814,
						1825,
						2057,
						2061,
						2129,
						2133,
						2839,
						2820,
						2857,
						3002,
						3020,
						2873,
						1844,
						2201,
						1630,
						1636,
						1600,
						1606,
						1886,
						1866,
						1877,
						2890,
						2352,
						1651,
						1658,
						2984,
						1931,
						2918,
						2906,
						1672,
						1680,
						2936,
						1999,
						1982,
						1990,
						1914,
						2991
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						1264,
						1265,
						3001,
						1893,
						2996,
						1525,
						1545,
						2990,
						2983,
						3019,
						1768,
						1065,
						1066,
						2199,
						2817,
						2200,
						1892,
						3014,
						2355
					]
				},
				{
					"title": "Variables",
					"children": [
						3104
					]
				},
				{
					"title": "Functions",
					"children": [
						3443,
						3207,
						3203,
						3200,
						3083,
						3089,
						3274,
						3244,
						3256,
						3250,
						3229,
						3264,
						3174,
						3163,
						3177,
						3059,
						3271,
						3241,
						3253,
						3277,
						3281,
						3284,
						3247,
						3225,
						3259,
						3049,
						3287,
						3065,
						2941,
						2947,
						2944,
						3101,
						3222,
						3098,
						3219,
						3071,
						769,
						3451,
						1047,
						3290,
						3080,
						3086,
						3095,
						772,
						3068,
						3074,
						1044,
						3184,
						3092,
						3077,
						2349,
						3189,
						3194,
						3448,
						3212,
						3062
					]
				}
			],
			"categories": [
				{
					"title": "Clients",
					"children": [
						98,
						384
					]
				},
				{
					"title": "Signing",
					"children": [
						691,
						3451
					]
				},
				{
					"title": "Transaction Models",
					"children": [
						2408,
						2385,
						2425,
						2441,
						2459,
						2479,
						2496,
						2513,
						2534,
						2677,
						2703,
						2730,
						2758,
						2778,
						2799,
						2857,
						2873,
						2890,
						2352,
						2918,
						2355
					]
				},
				{
					"title": "Transaction Flags",
					"children": [
						2356,
						2371,
						2570,
						2644,
						2667,
						2693,
						2752,
						2722,
						2912,
						2378,
						2646,
						2672,
						2698,
						2755,
						2726,
						2906
					]
				},
				{
					"title": "Utilities",
					"children": [
						3104,
						3443,
						3203,
						3200,
						3083,
						3089,
						3177,
						3059,
						3049,
						3065,
						3101,
						3098,
						3071,
						3080,
						3086,
						3095,
						3068,
						3074,
						3184,
						3092,
						3077,
						2349,
						3194,
						3448,
						3062
					]
				},
				{
					"title": "Requests",
					"children": [
						1087,
						1114,
						1151,
						1192,
						1239,
						1266,
						1302,
						1328,
						1697,
						1847,
						1743,
						2003,
						1367,
						1485,
						1501,
						1516,
						1548,
						1425,
						2034,
						2244,
						2298,
						2282,
						2263,
						1402,
						2204,
						2220,
						1814,
						2057,
						2129,
						1630,
						1600,
						1866,
						1651,
						1672,
						1982,
						1768,
						1065
					]
				},
				{
					"title": "Responses",
					"children": [
						1097,
						1122,
						1161,
						1202,
						1232,
						1248,
						1277,
						1312,
						1341,
						1728,
						1855,
						1751,
						2235,
						2007,
						1376,
						1489,
						1505,
						1530,
						1585,
						1438,
						2039,
						2251,
						2311,
						2289,
						3031,
						2270,
						3038,
						1412,
						1793,
						2208,
						2224,
						1825,
						2061,
						2133,
						1636,
						1606,
						1877,
						1658,
						1680,
						1990,
						1066
					]
				},
				{
					"title": "Streams",
					"children": [
						1979,
						1894,
						1967,
						1947,
						1959,
						1931,
						1914,
						1892
					]
				},
				{
					"title": "Errors",
					"children": [
						3324,
						3360,
						3348,
						3420,
						3396,
						3336,
						3372,
						3384,
						3312,
						3408,
						3431,
						3300
					]
				},
				{
					"title": "CATEGORY",
					"children": [
						775,
						688,
						1137,
						1218,
						1295,
						1179,
						1186,
						1358,
						1050,
						1056,
						2334,
						1707,
						1725,
						1074,
						667,
						2950,
						2974,
						1364,
						2993,
						2997,
						2193,
						1465,
						1528,
						1480,
						1453,
						1905,
						3008,
						2959,
						2328,
						2573,
						2591,
						2608,
						2624,
						2648,
						1779,
						1769,
						1784,
						1788,
						3015,
						3026,
						1067,
						1811,
						2839,
						2820,
						3002,
						3020,
						1844,
						2201,
						1886,
						2984,
						1999,
						2991,
						1264,
						1265,
						3001,
						1893,
						2996,
						1525,
						1545,
						2990,
						2983,
						3019,
						2199,
						2200,
						3014,
						3207,
						3274,
						3244,
						3256,
						3250,
						3229,
						3264,
						3174,
						3163,
						3271,
						3241,
						3253,
						3277,
						3281,
						3284,
						3247,
						3225,
						3259,
						3287,
						2941,
						2947,
						2944,
						3222,
						3219,
						769,
						1047,
						3290,
						772,
						1044,
						3189,
						3212
					]
				},
				{
					"title": "Pseudo Transaction Models",
					"children": [
						2553,
						2936,
						2817
					]
				}
			],
			"sources": [
				{
					"fileName": "xrpl/src/index.ts",
					"line": 2,
					"character": 0,
					"url": "https://github.com/XRPLF/xrpl.js/blob/8b74827fb/packages/xrpl/src/index.ts#L2"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				43,
				71,
				2,
				1
			]
		}
	]
}